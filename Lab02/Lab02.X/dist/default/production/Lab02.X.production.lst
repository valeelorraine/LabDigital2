

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 17:23:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0018                     _RCSTAbits	set	24
   300  0009                     _PORTE	set	9
   301  0008                     _PORTD	set	8
   302  0007                     _PORTC	set	7
   303  0006                     _PORTB	set	6
   304  0005                     _PORTA	set	5
   305  0019                     _TXREG	set	25
   306  001A                     _RCREG	set	26
   307  001E                     _ADRESH	set	30
   308  000C                     _PIR1bits	set	12
   309  000B                     _INTCONbits	set	11
   310  001F                     _ADCON0bits	set	31
   311  0049                     _RE1	set	73
   312  0048                     _RE0	set	72
   313  0064                     _TXIF	set	100
   314  005A                     _T0IF	set	90
   315  009A                     _SPBRGH	set	154
   316  0099                     _SPBRG	set	153
   317  0098                     _TXSTAbits	set	152
   318  0081                     _OPTION_REG	set	129
   319  0089                     _TRISE	set	137
   320  0088                     _TRISD	set	136
   321  0087                     _TRISCbits	set	135
   322  008C                     _PIE1bits	set	140
   323  009F                     _ADCON1bits	set	159
   324  0085                     _TRISA	set	133
   325  008F                     _OSCCONbits	set	143
   326  0187                     _BAUDCTLbits	set	391
   327  0189                     _ANSELH	set	393
   328  0188                     _ANSEL	set	392
   329                           
   330                           	psect	strings
   331  04B3                     __pstrings:
   332  04B3                     stringtab:
   333  04B3                     __stringtab:
   334  04B3                     stringcode:	
   335                           ;	String table - string pointers are 1 byte each
   336                           
   337  04B3                     stringdir:
   338  04B3  3004               	movlw	high stringdir
   339  04B4  008A               	movwf	10
   340  04B5  0804               	movf	4,w
   341  04B6  0A84               	incf	4,f
   342  04B7  0782               	addwf	2,f
   343  04B8                     __stringbase:
   344  04B8  3400               	retlw	0
   345  04B9                     __end_of__stringtab:
   346  04B9                     STR_4:
   347  04B9  3456               	retlw	86	;'V'
   348  04BA  3441               	retlw	65	;'A'
   349  04BB  344C               	retlw	76	;'L'
   350  04BC  344F               	retlw	79	;'O'
   351  04BD  3452               	retlw	82	;'R'
   352  04BE  3420               	retlw	32	;' '
   353  04BF  3444               	retlw	68	;'D'
   354  04C0  3445               	retlw	69	;'E'
   355  04C1  3420               	retlw	32	;' '
   356  04C2  3450               	retlw	80	;'P'
   357  04C3  344F               	retlw	79	;'O'
   358  04C4  3454               	retlw	84	;'T'
   359  04C5  3420               	retlw	32	;' '
   360  04C6  3431               	retlw	49	;'1'
   361  04C7  343A               	retlw	58	;':'
   362  04C8  3420               	retlw	32	;' '
   363  04C9  340D               	retlw	13
   364  04CA  3400               	retlw	0
   365  04CB                     STR_7:
   366  04CB  3456               	retlw	86	;'V'
   367  04CC  3441               	retlw	65	;'A'
   368  04CD  344C               	retlw	76	;'L'
   369  04CE  344F               	retlw	79	;'O'
   370  04CF  3452               	retlw	82	;'R'
   371  04D0  3420               	retlw	32	;' '
   372  04D1  3444               	retlw	68	;'D'
   373  04D2  3445               	retlw	69	;'E'
   374  04D3  3420               	retlw	32	;' '
   375  04D4  3450               	retlw	80	;'P'
   376  04D5  344F               	retlw	79	;'O'
   377  04D6  3454               	retlw	84	;'T'
   378  04D7  3420               	retlw	32	;' '
   379  04D8  3432               	retlw	50	;'2'
   380  04D9  343A               	retlw	58	;':'
   381  04DA  3420               	retlw	32	;' '
   382  04DB  340D               	retlw	13
   383  04DC  3400               	retlw	0
   384  04DD                     STR_1:
   385  04DD  3453               	retlw	83	;'S'
   386  04DE  3431               	retlw	49	;'1'
   387  04DF  343A               	retlw	58	;':'
   388  04E0  3420               	retlw	32	;' '
   389  04E1  3420               	retlw	32	;' '
   390  04E2  3420               	retlw	32	;' '
   391  04E3  3453               	retlw	83	;'S'
   392  04E4  3432               	retlw	50	;'2'
   393  04E5  343A               	retlw	58	;':'
   394  04E6  3420               	retlw	32	;' '
   395  04E7  3420               	retlw	32	;' '
   396  04E8  3420               	retlw	32	;' '
   397  04E9  3453               	retlw	83	;'S'
   398  04EA  3433               	retlw	51	;'3'
   399  04EB  343A               	retlw	58	;':'
   400  04EC  3400               	retlw	0
   401  04ED                     STR_3:
   402  04ED  3420               	retlw	32	;' '
   403  04EE  3420               	retlw	32	;' '
   404  04EF  3400               	retlw	0
   405  04F0                     STR_2:
   406  04F0  342E               	retlw	46	;'.'
   407  04F1  3400               	retlw	0
   408  04ED                     
   409                           	psect	cinit
   410  000F                     start_initialization:	
   411                           ; #config settings
   412                           
   413  000F                     __initialization:
   414                           
   415                           ; Clear objects allocated to COMMON
   416  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   417  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   418  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   419                           
   420                           ; Clear objects allocated to BANK0
   421  0012  1283               	bcf	3,5	;RP0=0, select bank0
   422  0013  1303               	bcf	3,6	;RP1=0, select bank0
   423  0014  01AB               	clrf	__pbssBANK0& (0+127)
   424  0015  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   425  0016  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   426  0017  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   427  0018  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   428  0019                     end_of_initialization:	
   429                           ;End of C runtime variable initialization code
   430                           
   431  0019                     __end_of__initialization:
   432  0019  0183               	clrf	3
   433  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	bssCOMMON
   436  0078                     __pbssCOMMON:
   437  0078                     _cen:
   438  0078                     	ds	1
   439  0079                     _dec:
   440  0079                     	ds	1
   441  007A                     _un:
   442  007A                     	ds	1
   443                           
   444                           	psect	bssBANK0
   445  002B                     __pbssBANK0:
   446  002B                     _VAL2:
   447  002B                     	ds	1
   448  002C                     _VAL1:
   449  002C                     	ds	1
   450  002D                     _RXREC:
   451  002D                     	ds	1
   452  002E                     _VUART:
   453  002E                     	ds	1
   454  002F                     _CONTADOR:
   455  002F                     	ds	1
   456                           
   457                           	psect	cstackCOMMON
   458  0070                     __pcstackCOMMON:
   459  0070                     ?_setup:
   460  0070                     ?_Lcd_Init:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_Lcd_Clear:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_Lcd_Write_String:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_decimal:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_Lcd_Write_Char:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_chselect:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_isr:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ??_isr:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_main:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_putch:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_Lcd_Port:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_Lcd_Cmd:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_printf:	
   497                           ; 1 bytes @ 0x0
   498                           
   499                           
   500                           ; 2 bytes @ 0x0
   501  0070                     	ds	3
   502  0073                     ?_initAN:
   503  0073                     ??_chselect:	
   504                           ; 1 bytes @ 0x3
   505                           
   506  0073                     ??_putch:	
   507                           ; 1 bytes @ 0x3
   508                           
   509  0073                     ??_Lcd_Port:	
   510                           ; 1 bytes @ 0x3
   511                           
   512  0073                     ?___bmul:	
   513                           ; 1 bytes @ 0x3
   514                           
   515  0073                     ?___awdiv:	
   516                           ; 1 bytes @ 0x3
   517                           
   518  0073                     initAN@just:	
   519                           ; 2 bytes @ 0x3
   520                           
   521  0073                     putch@info:	
   522                           ; 1 bytes @ 0x3
   523                           
   524  0073                     Lcd_Port@a:	
   525                           ; 1 bytes @ 0x3
   526                           
   527  0073                     ___bmul@multiplicand:	
   528                           ; 1 bytes @ 0x3
   529                           
   530  0073                     ___awdiv@divisor:	
   531                           ; 1 bytes @ 0x3
   532                           
   533                           
   534                           ; 2 bytes @ 0x3
   535  0073                     	ds	1
   536  0074                     ??_Lcd_Write_Char:
   537  0074                     ??_printf:	
   538                           ; 1 bytes @ 0x4
   539                           
   540  0074                     ??_initAN:	
   541                           ; 1 bytes @ 0x4
   542                           
   543  0074                     ??_Lcd_Cmd:	
   544                           ; 1 bytes @ 0x4
   545                           
   546  0074                     ??___bmul:	
   547                           ; 1 bytes @ 0x4
   548                           
   549                           
   550                           ; 1 bytes @ 0x4
   551  0074                     	ds	1
   552  0075                     initAN@bin:
   553  0075                     Lcd_Write_Char@a:	
   554                           ; 1 bytes @ 0x5
   555                           
   556  0075                     printf@ap:	
   557                           ; 1 bytes @ 0x5
   558                           
   559  0075                     ___bmul@product:	
   560                           ; 1 bytes @ 0x5
   561                           
   562  0075                     ___awdiv@dividend:	
   563                           ; 1 bytes @ 0x5
   564                           
   565                           
   566                           ; 2 bytes @ 0x5
   567  0075                     	ds	1
   568  0076                     ??_setup:
   569  0076                     chselect@cant:	
   570                           ; 1 bytes @ 0x6
   571                           
   572  0076                     Lcd_Cmd@a:	
   573                           ; 1 bytes @ 0x6
   574                           
   575  0076                     Lcd_Write_Char@temp:	
   576                           ; 1 bytes @ 0x6
   577                           
   578  0076                     printf@c:	
   579                           ; 1 bytes @ 0x6
   580                           
   581  0076                     ___bmul@multiplier:	
   582                           ; 1 bytes @ 0x6
   583                           
   584                           
   585                           ; 1 bytes @ 0x6
   586  0076                     	ds	1
   587  0077                     ??_Lcd_Clear:
   588  0077                     ?_Lcd_Set_Cursor:	
   589                           ; 1 bytes @ 0x7
   590                           
   591  0077                     ??___awdiv:	
   592                           ; 1 bytes @ 0x7
   593                           
   594  0077                     Lcd_Set_Cursor@b:	
   595                           ; 1 bytes @ 0x7
   596                           
   597  0077                     Lcd_Write_Char@y:	
   598                           ; 1 bytes @ 0x7
   599                           
   600  0077                     printf@f:	
   601                           ; 1 bytes @ 0x7
   602                           
   603                           
   604                           ; 1 bytes @ 0x7
   605  0077                     	ds	1
   606  0078                     ??_Lcd_Write_String:
   607                           
   608                           	psect	cstackBANK0
   609  0020                     __pcstackBANK0:	
   610                           ; 1 bytes @ 0x8
   611                           
   612  0020                     ??_Lcd_Init:
   613  0020                     ??_Lcd_Set_Cursor:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0020                     ___awdiv@counter:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0020                     Lcd_Write_String@i:	
   620                           ; 1 bytes @ 0x0
   621                           
   622                           
   623                           ; 2 bytes @ 0x0
   624  0020                     	ds	1
   625  0021                     ___awdiv@sign:
   626                           
   627                           ; 1 bytes @ 0x1
   628  0021                     	ds	1
   629  0022                     Lcd_Set_Cursor@a:
   630  0022                     Lcd_Write_String@a:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0022                     ___awdiv@quotient:	
   634                           ; 1 bytes @ 0x2
   635                           
   636                           
   637                           ; 2 bytes @ 0x2
   638  0022                     	ds	1
   639  0023                     Lcd_Set_Cursor@z:
   640                           
   641                           ; 1 bytes @ 0x3
   642  0023                     	ds	1
   643  0024                     ??_decimal:
   644  0024                     Lcd_Set_Cursor@y:	
   645                           ; 1 bytes @ 0x4
   646                           
   647                           
   648                           ; 1 bytes @ 0x4
   649  0024                     	ds	1
   650  0025                     Lcd_Set_Cursor@temp:
   651                           
   652                           ; 1 bytes @ 0x5
   653  0025                     	ds	2
   654  0027                     decimal@var:
   655                           
   656                           ; 1 bytes @ 0x7
   657  0027                     	ds	1
   658  0028                     decimal@VAL:
   659                           
   660                           ; 1 bytes @ 0x8
   661  0028                     	ds	1
   662  0029                     ??_main:
   663                           
   664                           ; 1 bytes @ 0x9
   665  0029                     	ds	2
   666                           
   667                           	psect	maintext
   668  001D                     __pmaintext:	
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 100 in file "Lab02.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : B00/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0
   690 ;;      Temps:          0       2       0       0       0
   691 ;;      Totals:         0       2       0       0       0
   692 ;;Total ram usage:        2 bytes
   693 ;; Hardware stack levels required when called:    4
   694 ;; This function calls:
   695 ;;		_Lcd_Clear
   696 ;;		_Lcd_Init
   697 ;;		_Lcd_Set_Cursor
   698 ;;		_Lcd_Write_Char
   699 ;;		_Lcd_Write_String
   700 ;;		_chselect
   701 ;;		_decimal
   702 ;;		_printf
   703 ;;		_setup
   704 ;; This function is called by:
   705 ;;		Startup code after reset
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _main
   711  001D                     _main:
   712  001D                     l1952:	
   713                           ;incstack = 0
   714                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   715                           
   716                           
   717                           ;Lab02.c: 101:     setup();
   718  001D  120A  118A  2430  120A  118A  	fcall	_setup
   719                           
   720                           ;Lab02.c: 102:     Lcd_Init();
   721  0022  120A  118A  23E2  120A  118A  	fcall	_Lcd_Init
   722                           
   723                           ;Lab02.c: 103:     Lcd_Clear();
   724  0027  120A  118A  25AA  120A  118A  	fcall	_Lcd_Clear
   725                           
   726                           ;Lab02.c: 104:     Lcd_Set_Cursor(1,1);
   727  002C  01F7               	clrf	Lcd_Set_Cursor@b
   728  002D  0AF7               	incf	Lcd_Set_Cursor@b,f
   729  002E  3001               	movlw	1
   730  002F  120A  118A  238A  120A  118A  	fcall	_Lcd_Set_Cursor
   731  0034                     l1954:
   732                           
   733                           ;Lab02.c: 105:     Lcd_Write_String("S1:   S2:   S3:");
   734  0034  3025               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   735  0035  120A  118A  24F2  120A  118A  	fcall	_Lcd_Write_String
   736  003A                     l1956:
   737                           
   738                           ;Lab02.c: 108:     chselect(2);
   739  003A  3002               	movlw	2
   740  003B  120A  118A  21BA  120A  118A  	fcall	_chselect
   741                           
   742                           ;Lab02.c: 110:     decimal(VAL1);
   743  0040  1283               	bcf	3,5	;RP0=0, select bank0
   744  0041  1303               	bcf	3,6	;RP1=0, select bank0
   745  0042  082C               	movf	_VAL1,w
   746  0043  120A  118A  2323  120A  118A  	fcall	_decimal
   747                           
   748                           ;Lab02.c: 111:     Lcd_Set_Cursor(2,1);
   749  0048  01F7               	clrf	Lcd_Set_Cursor@b
   750  0049  0AF7               	incf	Lcd_Set_Cursor@b,f
   751  004A  3002               	movlw	2
   752  004B  120A  118A  238A  120A  118A  	fcall	_Lcd_Set_Cursor
   753                           
   754                           ;Lab02.c: 112:     Lcd_Write_Char(cen);
   755  0050  0878               	movf	_cen,w
   756  0051  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
   757  0056                     l1958:
   758                           
   759                           ;Lab02.c: 113:     Lcd_Write_String(".");
   760  0056  3038               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   761  0057  120A  118A  24F2  120A  118A  	fcall	_Lcd_Write_String
   762  005C                     l1960:
   763                           
   764                           ;Lab02.c: 114:     Lcd_Write_Char(dec);
   765  005C  0879               	movf	_dec,w
   766  005D  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
   767  0062                     l1962:
   768                           
   769                           ;Lab02.c: 115:     Lcd_Write_Char(un);
   770  0062  087A               	movf	_un,w
   771  0063  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
   772  0068                     l1964:
   773                           
   774                           ;Lab02.c: 116:     Lcd_Write_String("  ");
   775  0068  3035               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   776  0069  120A  118A  24F2  120A  118A  	fcall	_Lcd_Write_String
   777  006E                     l1966:
   778                           
   779                           ;Lab02.c: 118:     if(PIR1bits.TXIF == 1){
   780  006E  1283               	bcf	3,5	;RP0=0, select bank0
   781  006F  1303               	bcf	3,6	;RP1=0, select bank0
   782  0070  1E0C               	btfss	12,4	;volatile
   783  0071  2873               	goto	u1041
   784  0072  2874               	goto	u1040
   785  0073                     u1041:
   786  0073  2894               	goto	l1976
   787  0074                     u1040:
   788  0074                     l1968:
   789                           
   790                           ;Lab02.c: 119:         _delay((unsigned long)((150)*(4000000/4000.0)));
   791  0074  30C3               	movlw	195
   792  0075  1283               	bcf	3,5	;RP0=0, select bank0
   793  0076  1303               	bcf	3,6	;RP1=0, select bank0
   794  0077  00AA               	movwf	??_main+1
   795  0078  30CC               	movlw	204
   796  0079  00A9               	movwf	??_main
   797  007A                     u1147:
   798  007A  0BA9               	decfsz	??_main,f
   799  007B  287A               	goto	u1147
   800  007C  0BAA               	decfsz	??_main+1,f
   801  007D  287A               	goto	u1147
   802  007E  0000               	nop
   803  007F                     l1970:
   804                           
   805                           ;Lab02.c: 120:         printf("VALOR DE POT 1: \r");
   806  007F  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   807  0080  120A  118A  253F  120A  118A  	fcall	_printf
   808  0085                     l1972:
   809                           
   810                           ;Lab02.c: 121:         _delay((unsigned long)((150)*(4000000/4000.0)));
   811  0085  30C3               	movlw	195
   812  0086  1283               	bcf	3,5	;RP0=0, select bank0
   813  0087  1303               	bcf	3,6	;RP1=0, select bank0
   814  0088  00AA               	movwf	??_main+1
   815  0089  30CC               	movlw	204
   816  008A  00A9               	movwf	??_main
   817  008B                     u1157:
   818  008B  0BA9               	decfsz	??_main,f
   819  008C  288B               	goto	u1157
   820  008D  0BAA               	decfsz	??_main+1,f
   821  008E  288B               	goto	u1157
   822  008F  0000               	nop
   823  0090                     l1974:
   824                           
   825                           ;Lab02.c: 122:         TXREG = cen;
   826  0090  0878               	movf	_cen,w
   827  0091  1283               	bcf	3,5	;RP0=0, select bank0
   828  0092  1303               	bcf	3,6	;RP1=0, select bank0
   829  0093  0099               	movwf	25	;volatile
   830  0094                     l1976:
   831                           
   832                           ;Lab02.c: 124:         _delay((unsigned long)((10)*(4000000/4000.0)));
   833  0094  300D               	movlw	13
   834  0095  1283               	bcf	3,5	;RP0=0, select bank0
   835  0096  1303               	bcf	3,6	;RP1=0, select bank0
   836  0097  00AA               	movwf	??_main+1
   837  0098  30FB               	movlw	251
   838  0099  00A9               	movwf	??_main
   839  009A                     u1167:
   840  009A  0BA9               	decfsz	??_main,f
   841  009B  289A               	goto	u1167
   842  009C  0BAA               	decfsz	??_main+1,f
   843  009D  289A               	goto	u1167
   844  009E                     l1978:
   845                           
   846                           ;Lab02.c: 125:         if(PIR1bits.TXIF == 1){
   847  009E  1283               	bcf	3,5	;RP0=0, select bank0
   848  009F  1303               	bcf	3,6	;RP1=0, select bank0
   849  00A0  1E0C               	btfss	12,4	;volatile
   850  00A1  28A3               	goto	u1051
   851  00A2  28A4               	goto	u1050
   852  00A3                     u1051:
   853  00A3  28A6               	goto	l194
   854  00A4                     u1050:
   855  00A4                     l1980:
   856                           
   857                           ;Lab02.c: 126:             TXREG = 46;
   858  00A4  302E               	movlw	46
   859  00A5  0099               	movwf	25	;volatile
   860  00A6                     l194:	
   861                           ;Lab02.c: 127:            }
   862                           
   863                           
   864                           ;Lab02.c: 128:         _delay((unsigned long)((10)*(4000000/4000.0)));
   865  00A6  300D               	movlw	13
   866  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   867  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   868  00A9  00AA               	movwf	??_main+1
   869  00AA  30FB               	movlw	251
   870  00AB  00A9               	movwf	??_main
   871  00AC                     u1177:
   872  00AC  0BA9               	decfsz	??_main,f
   873  00AD  28AC               	goto	u1177
   874  00AE  0BAA               	decfsz	??_main+1,f
   875  00AF  28AC               	goto	u1177
   876  00B0                     l1982:
   877                           
   878                           ;Lab02.c: 129:         if(PIR1bits.TXIF == 1){
   879  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   880  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   881  00B2  1E0C               	btfss	12,4	;volatile
   882  00B3  28B5               	goto	u1061
   883  00B4  28B6               	goto	u1060
   884  00B5                     u1061:
   885  00B5  28B8               	goto	l195
   886  00B6                     u1060:
   887  00B6                     l1984:
   888                           
   889                           ;Lab02.c: 130:             TXREG = dec;
   890  00B6  0879               	movf	_dec,w
   891  00B7  0099               	movwf	25	;volatile
   892  00B8                     l195:	
   893                           ;Lab02.c: 131:            }
   894                           
   895                           
   896                           ;Lab02.c: 132:         _delay((unsigned long)((10)*(4000000/4000.0)));
   897  00B8  300D               	movlw	13
   898  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   899  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   900  00BB  00AA               	movwf	??_main+1
   901  00BC  30FB               	movlw	251
   902  00BD  00A9               	movwf	??_main
   903  00BE                     u1187:
   904  00BE  0BA9               	decfsz	??_main,f
   905  00BF  28BE               	goto	u1187
   906  00C0  0BAA               	decfsz	??_main+1,f
   907  00C1  28BE               	goto	u1187
   908  00C2                     l1986:
   909                           
   910                           ;Lab02.c: 133:         if(PIR1bits.TXIF == 1){
   911  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   912  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   913  00C4  1E0C               	btfss	12,4	;volatile
   914  00C5  28C7               	goto	u1071
   915  00C6  28C8               	goto	u1070
   916  00C7                     u1071:
   917  00C7  28CA               	goto	l196
   918  00C8                     u1070:
   919  00C8                     l1988:
   920                           
   921                           ;Lab02.c: 134:             TXREG = un;
   922  00C8  087A               	movf	_un,w
   923  00C9  0099               	movwf	25	;volatile
   924  00CA                     l196:	
   925                           ;Lab02.c: 135:            }
   926                           
   927                           
   928                           ;Lab02.c: 136:         _delay((unsigned long)((10)*(4000000/4000.0)));
   929  00CA  300D               	movlw	13
   930  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   931  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   932  00CD  00AA               	movwf	??_main+1
   933  00CE  30FB               	movlw	251
   934  00CF  00A9               	movwf	??_main
   935  00D0                     u1197:
   936  00D0  0BA9               	decfsz	??_main,f
   937  00D1  28D0               	goto	u1197
   938  00D2  0BAA               	decfsz	??_main+1,f
   939  00D3  28D0               	goto	u1197
   940  00D4                     l1990:
   941                           
   942                           ;Lab02.c: 137:         if(PIR1bits.TXIF == 1){
   943  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   944  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   945  00D6  1E0C               	btfss	12,4	;volatile
   946  00D7  28D9               	goto	u1081
   947  00D8  28DA               	goto	u1080
   948  00D9                     u1081:
   949  00D9  28DC               	goto	l197
   950  00DA                     u1080:
   951  00DA                     l1992:
   952                           
   953                           ;Lab02.c: 138:             TXREG = 13;
   954  00DA  300D               	movlw	13
   955  00DB  0099               	movwf	25	;volatile
   956  00DC                     l197:	
   957                           ;Lab02.c: 139:            }
   958                           
   959                           
   960                           ;Lab02.c: 140:         _delay((unsigned long)((100)*(4000000/4000.0)));
   961  00DC  3082               	movlw	130
   962  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   963  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   964  00DF  00AA               	movwf	??_main+1
   965  00E0  30DD               	movlw	221
   966  00E1  00A9               	movwf	??_main
   967  00E2                     u1207:
   968  00E2  0BA9               	decfsz	??_main,f
   969  00E3  28E2               	goto	u1207
   970  00E4  0BAA               	decfsz	??_main+1,f
   971  00E5  28E2               	goto	u1207
   972  00E6                     l1994:
   973                           
   974                           ;Lab02.c: 144:     decimal(VAL2);
   975  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   976  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   977  00E8  082B               	movf	_VAL2,w
   978  00E9  120A  118A  2323  120A  118A  	fcall	_decimal
   979  00EE                     l1996:
   980                           
   981                           ;Lab02.c: 145:     Lcd_Write_Char(cen);
   982  00EE  0878               	movf	_cen,w
   983  00EF  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
   984  00F4                     l1998:
   985                           
   986                           ;Lab02.c: 146:     Lcd_Write_String(".");
   987  00F4  3038               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   988  00F5  120A  118A  24F2  120A  118A  	fcall	_Lcd_Write_String
   989  00FA                     l2000:
   990                           
   991                           ;Lab02.c: 147:     Lcd_Write_Char(dec);
   992  00FA  0879               	movf	_dec,w
   993  00FB  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
   994  0100                     l2002:
   995                           
   996                           ;Lab02.c: 148:     Lcd_Write_Char(un);
   997  0100  087A               	movf	_un,w
   998  0101  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
   999  0106                     l2004:
  1000                           
  1001                           ;Lab02.c: 149:     Lcd_Write_String("  ");
  1002  0106  3035               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1003  0107  120A  118A  24F2  120A  118A  	fcall	_Lcd_Write_String
  1004                           
  1005                           ;Lab02.c: 150:     _delay((unsigned long)((1000)*(4000000/4000000.0)));
  1006  010C  30C7               	movlw	199
  1007  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1008  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1009  010F  00A9               	movwf	??_main
  1010  0110                     u1217:
  1011  0110  2911               	nop2
  1012  0111  0BA9               	decfsz	??_main,f
  1013  0112  2910               	goto	u1217
  1014  0113  2914               	nop2
  1015  0114                     l2006:
  1016                           
  1017                           ;Lab02.c: 152:     if(PIR1bits.TXIF == 1){
  1018  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0116  1E0C               	btfss	12,4	;volatile
  1021  0117  2919               	goto	u1091
  1022  0118  291A               	goto	u1090
  1023  0119                     u1091:
  1024  0119  293A               	goto	l2016
  1025  011A                     u1090:
  1026  011A                     l2008:
  1027                           
  1028                           ;Lab02.c: 153:         _delay((unsigned long)((150)*(4000000/4000.0)));
  1029  011A  30C3               	movlw	195
  1030  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1031  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1032  011D  00AA               	movwf	??_main+1
  1033  011E  30CC               	movlw	204
  1034  011F  00A9               	movwf	??_main
  1035  0120                     u1227:
  1036  0120  0BA9               	decfsz	??_main,f
  1037  0121  2920               	goto	u1227
  1038  0122  0BAA               	decfsz	??_main+1,f
  1039  0123  2920               	goto	u1227
  1040  0124  0000               	nop
  1041  0125                     l2010:
  1042                           
  1043                           ;Lab02.c: 154:         printf("VALOR DE POT 2: \r");
  1044  0125  3013               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1045  0126  120A  118A  253F  120A  118A  	fcall	_printf
  1046  012B                     l2012:
  1047                           
  1048                           ;Lab02.c: 155:         _delay((unsigned long)((150)*(4000000/4000.0)));
  1049  012B  30C3               	movlw	195
  1050  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1051  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1052  012E  00AA               	movwf	??_main+1
  1053  012F  30CC               	movlw	204
  1054  0130  00A9               	movwf	??_main
  1055  0131                     u1237:
  1056  0131  0BA9               	decfsz	??_main,f
  1057  0132  2931               	goto	u1237
  1058  0133  0BAA               	decfsz	??_main+1,f
  1059  0134  2931               	goto	u1237
  1060  0135  0000               	nop
  1061  0136                     l2014:
  1062                           
  1063                           ;Lab02.c: 156:             TXREG = cen;
  1064  0136  0878               	movf	_cen,w
  1065  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0139  0099               	movwf	25	;volatile
  1068  013A                     l2016:
  1069                           
  1070                           ;Lab02.c: 158:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1071  013A  300D               	movlw	13
  1072  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1073  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1074  013D  00AA               	movwf	??_main+1
  1075  013E  30FB               	movlw	251
  1076  013F  00A9               	movwf	??_main
  1077  0140                     u1247:
  1078  0140  0BA9               	decfsz	??_main,f
  1079  0141  2940               	goto	u1247
  1080  0142  0BAA               	decfsz	??_main+1,f
  1081  0143  2940               	goto	u1247
  1082  0144                     l2018:
  1083                           
  1084                           ;Lab02.c: 159:         if(PIR1bits.TXIF == 1){
  1085  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0146  1E0C               	btfss	12,4	;volatile
  1088  0147  2949               	goto	u1101
  1089  0148  294A               	goto	u1100
  1090  0149                     u1101:
  1091  0149  294C               	goto	l199
  1092  014A                     u1100:
  1093  014A                     l2020:
  1094                           
  1095                           ;Lab02.c: 160:             TXREG = 46;
  1096  014A  302E               	movlw	46
  1097  014B  0099               	movwf	25	;volatile
  1098  014C                     l199:	
  1099                           ;Lab02.c: 161:            }
  1100                           
  1101                           
  1102                           ;Lab02.c: 162:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1103  014C  300D               	movlw	13
  1104  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1105  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1106  014F  00AA               	movwf	??_main+1
  1107  0150  30FB               	movlw	251
  1108  0151  00A9               	movwf	??_main
  1109  0152                     u1257:
  1110  0152  0BA9               	decfsz	??_main,f
  1111  0153  2952               	goto	u1257
  1112  0154  0BAA               	decfsz	??_main+1,f
  1113  0155  2952               	goto	u1257
  1114  0156                     l2022:
  1115                           
  1116                           ;Lab02.c: 163:         if(PIR1bits.TXIF == 1){
  1117  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0158  1E0C               	btfss	12,4	;volatile
  1120  0159  295B               	goto	u1111
  1121  015A  295C               	goto	u1110
  1122  015B                     u1111:
  1123  015B  295E               	goto	l200
  1124  015C                     u1110:
  1125  015C                     l2024:
  1126                           
  1127                           ;Lab02.c: 164:             TXREG = dec;
  1128  015C  0879               	movf	_dec,w
  1129  015D  0099               	movwf	25	;volatile
  1130  015E                     l200:	
  1131                           ;Lab02.c: 165:            }
  1132                           
  1133                           
  1134                           ;Lab02.c: 166:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1135  015E  300D               	movlw	13
  1136  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0161  00AA               	movwf	??_main+1
  1139  0162  30FB               	movlw	251
  1140  0163  00A9               	movwf	??_main
  1141  0164                     u1267:
  1142  0164  0BA9               	decfsz	??_main,f
  1143  0165  2964               	goto	u1267
  1144  0166  0BAA               	decfsz	??_main+1,f
  1145  0167  2964               	goto	u1267
  1146  0168                     l2026:
  1147                           
  1148                           ;Lab02.c: 167:         if(PIR1bits.TXIF == 1){
  1149  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1151  016A  1E0C               	btfss	12,4	;volatile
  1152  016B  296D               	goto	u1121
  1153  016C  296E               	goto	u1120
  1154  016D                     u1121:
  1155  016D  2970               	goto	l201
  1156  016E                     u1120:
  1157  016E                     l2028:
  1158                           
  1159                           ;Lab02.c: 168:             TXREG = un;
  1160  016E  087A               	movf	_un,w
  1161  016F  0099               	movwf	25	;volatile
  1162  0170                     l201:	
  1163                           ;Lab02.c: 169:            }
  1164                           
  1165                           
  1166                           ;Lab02.c: 170:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1167  0170  300D               	movlw	13
  1168  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0173  00AA               	movwf	??_main+1
  1171  0174  30FB               	movlw	251
  1172  0175  00A9               	movwf	??_main
  1173  0176                     u1277:
  1174  0176  0BA9               	decfsz	??_main,f
  1175  0177  2976               	goto	u1277
  1176  0178  0BAA               	decfsz	??_main+1,f
  1177  0179  2976               	goto	u1277
  1178  017A                     l2030:
  1179                           
  1180                           ;Lab02.c: 171:         if(PIR1bits.TXIF == 1){
  1181  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1182  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1183  017C  1E0C               	btfss	12,4	;volatile
  1184  017D  297F               	goto	u1131
  1185  017E  2980               	goto	u1130
  1186  017F                     u1131:
  1187  017F  2982               	goto	l202
  1188  0180                     u1130:
  1189  0180                     l2032:
  1190                           
  1191                           ;Lab02.c: 172:             TXREG = 13;
  1192  0180  300D               	movlw	13
  1193  0181  0099               	movwf	25	;volatile
  1194  0182                     l202:	
  1195                           ;Lab02.c: 173:            }
  1196                           
  1197                           
  1198                           ;Lab02.c: 174:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1199  0182  3082               	movlw	130
  1200  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0185  00AA               	movwf	??_main+1
  1203  0186  30DD               	movlw	221
  1204  0187  00A9               	movwf	??_main
  1205  0188                     u1287:
  1206  0188  0BA9               	decfsz	??_main,f
  1207  0189  2988               	goto	u1287
  1208  018A  0BAA               	decfsz	??_main+1,f
  1209  018B  2988               	goto	u1287
  1210  018C                     l2034:
  1211                           
  1212                           ;Lab02.c: 178:     decimal(CONTADOR);
  1213  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1214  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1215  018E  082F               	movf	_CONTADOR,w
  1216  018F  120A  118A  2323  120A  118A  	fcall	_decimal
  1217  0194                     l2036:
  1218                           
  1219                           ;Lab02.c: 179:     Lcd_Write_Char(cen);
  1220  0194  0878               	movf	_cen,w
  1221  0195  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
  1222  019A                     l2038:
  1223                           
  1224                           ;Lab02.c: 180:     Lcd_Write_Char(dec);
  1225  019A  0879               	movf	_dec,w
  1226  019B  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
  1227  01A0                     l2040:
  1228                           
  1229                           ;Lab02.c: 181:     Lcd_Write_Char(un);
  1230  01A0  087A               	movf	_un,w
  1231  01A1  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
  1232  01A6                     l2042:
  1233                           
  1234                           ;Lab02.c: 182:     Lcd_Write_String("  ");
  1235  01A6  3035               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1236  01A7  120A  118A  24F2  120A  118A  	fcall	_Lcd_Write_String
  1237  01AC                     l2044:
  1238                           
  1239                           ;Lab02.c: 183:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1240  01AC  3082               	movlw	130
  1241  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1242  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1243  01AF  00AA               	movwf	??_main+1
  1244  01B0  30DD               	movlw	221
  1245  01B1  00A9               	movwf	??_main
  1246  01B2                     u1297:
  1247  01B2  0BA9               	decfsz	??_main,f
  1248  01B3  29B2               	goto	u1297
  1249  01B4  0BAA               	decfsz	??_main+1,f
  1250  01B5  29B2               	goto	u1297
  1251  01B6  283A               	goto	l1956
  1252  01B7  120A  118A  280C   	ljmp	start
  1253  01BA                     __end_of_main:
  1254                           
  1255                           	psect	text1
  1256  0430                     __ptext1:	
  1257 ;; *************** function _setup *****************
  1258 ;; Defined at:
  1259 ;;		line 190 in file "Lab02.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1273 ;;      Params:         0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    2
  1280 ;; This function calls:
  1281 ;;		_initAN
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _setup
  1289  0430                     _setup:
  1290  0430                     l1598:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1293                           
  1294                           
  1295                           ;Lab02.c: 193:   ANSELH = 0x00;
  1296  0430  1683               	bsf	3,5	;RP0=1, select bank3
  1297  0431  1703               	bsf	3,6	;RP1=1, select bank3
  1298  0432  0189               	clrf	9	;volatile
  1299  0433                     l1600:
  1300                           
  1301                           ;Lab02.c: 194:   ANSEL = 0B00000011;
  1302  0433  3003               	movlw	3
  1303  0434  0088               	movwf	8	;volatile
  1304  0435                     l1602:
  1305                           
  1306                           ;Lab02.c: 196:   TRISA = 0B00000011;
  1307  0435  3003               	movlw	3
  1308  0436  1683               	bsf	3,5	;RP0=1, select bank1
  1309  0437  1303               	bcf	3,6	;RP1=0, select bank1
  1310  0438  0085               	movwf	5	;volatile
  1311  0439                     l1604:
  1312                           
  1313                           ;Lab02.c: 197:   TRISCbits.TRISC6 = 0;
  1314  0439  1307               	bcf	7,6	;volatile
  1315  043A                     l1606:
  1316                           
  1317                           ;Lab02.c: 198:   TRISCbits.TRISC7 = 1;
  1318  043A  1787               	bsf	7,7	;volatile
  1319                           
  1320                           ;Lab02.c: 199:   TRISD = 0X00;
  1321  043B  0188               	clrf	8	;volatile
  1322                           
  1323                           ;Lab02.c: 200:   TRISE = 0X00;
  1324  043C  0189               	clrf	9	;volatile
  1325                           
  1326                           ;Lab02.c: 202:   PORTA = 0X00;
  1327  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1328  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1329  043F  0185               	clrf	5	;volatile
  1330                           
  1331                           ;Lab02.c: 203:   PORTB = 0X00;
  1332  0440  0186               	clrf	6	;volatile
  1333                           
  1334                           ;Lab02.c: 204:   PORTC = 0X00;
  1335  0441  0187               	clrf	7	;volatile
  1336                           
  1337                           ;Lab02.c: 205:   PORTD = 0X00;
  1338  0442  0188               	clrf	8	;volatile
  1339                           
  1340                           ;Lab02.c: 206:   PORTE = 0X00;
  1341  0443  0189               	clrf	9	;volatile
  1342  0444                     l1608:
  1343                           
  1344                           ;Lab02.c: 208:   initAN(0b00000011, 0);
  1345  0444  01F3               	clrf	initAN@just
  1346  0445  3003               	movlw	3
  1347  0446  120A  118A  251B  120A  118A  	fcall	_initAN
  1348  044B                     l1610:
  1349                           
  1350                           ;Lab02.c: 211:   OSCCONbits.SCS = 1;
  1351  044B  1683               	bsf	3,5	;RP0=1, select bank1
  1352  044C  1303               	bcf	3,6	;RP1=0, select bank1
  1353  044D  140F               	bsf	15,0	;volatile
  1354  044E                     l1612:
  1355                           
  1356                           ;Lab02.c: 212:   OSCCONbits.IRCF2 = 1;
  1357  044E  170F               	bsf	15,6	;volatile
  1358  044F                     l1614:
  1359                           
  1360                           ;Lab02.c: 213:   OSCCONbits.IRCF1 = 1;
  1361  044F  168F               	bsf	15,5	;volatile
  1362  0450                     l1616:
  1363                           
  1364                           ;Lab02.c: 214:   OSCCONbits.IRCF0 = 0;
  1365  0450  120F               	bcf	15,4	;volatile
  1366  0451                     l1618:
  1367                           
  1368                           ;Lab02.c: 217:   OPTION_REG = 0B11000100;
  1369  0451  30C4               	movlw	196
  1370  0452  0081               	movwf	1	;volatile
  1371  0453                     l1620:
  1372                           
  1373                           ;Lab02.c: 218:   INTCONbits.GIE = 1;
  1374  0453  178B               	bsf	11,7	;volatile
  1375  0454                     l1622:
  1376                           
  1377                           ;Lab02.c: 219:   INTCONbits.PEIE = 1;
  1378  0454  170B               	bsf	11,6	;volatile
  1379  0455                     l1624:
  1380                           
  1381                           ;Lab02.c: 220:   INTCONbits.T0IE = 1;
  1382  0455  168B               	bsf	11,5	;volatile
  1383  0456                     l1626:
  1384                           
  1385                           ;Lab02.c: 221:   INTCONbits.T0IF = 0;
  1386  0456  110B               	bcf	11,2	;volatile
  1387  0457                     l1628:
  1388                           
  1389                           ;Lab02.c: 222:   PIE1bits.ADIE = 1;
  1390  0457  170C               	bsf	12,6	;volatile
  1391  0458                     l1630:
  1392                           
  1393                           ;Lab02.c: 223:   PIR1bits.ADIF = 0;
  1394  0458  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0459  1303               	bcf	3,6	;RP1=0, select bank0
  1396  045A  130C               	bcf	12,6	;volatile
  1397  045B                     l1632:
  1398                           
  1399                           ;Lab02.c: 226:   PIR1bits.RCIF = 0;
  1400  045B  128C               	bcf	12,5	;volatile
  1401  045C                     l1634:
  1402                           
  1403                           ;Lab02.c: 227:   PIE1bits.RCIE = 0;
  1404  045C  1683               	bsf	3,5	;RP0=1, select bank1
  1405  045D  1303               	bcf	3,6	;RP1=0, select bank1
  1406  045E  128C               	bcf	12,5	;volatile
  1407  045F                     l1636:
  1408                           
  1409                           ;Lab02.c: 228:   PIE1bits.TXIE = 0;
  1410  045F  120C               	bcf	12,4	;volatile
  1411  0460                     l1638:
  1412                           
  1413                           ;Lab02.c: 229:   TXSTAbits.TX9 = 0;
  1414  0460  1318               	bcf	24,6	;volatile
  1415  0461                     l1640:
  1416                           
  1417                           ;Lab02.c: 230:   TXSTAbits.TXEN = 1;
  1418  0461  1698               	bsf	24,5	;volatile
  1419  0462                     l1642:
  1420                           
  1421                           ;Lab02.c: 231:   TXSTAbits.SYNC = 0;
  1422  0462  1218               	bcf	24,4	;volatile
  1423  0463                     l1644:
  1424                           
  1425                           ;Lab02.c: 232:   TXSTAbits.BRGH = 1;
  1426  0463  1518               	bsf	24,2	;volatile
  1427  0464                     l1646:
  1428                           
  1429                           ;Lab02.c: 233:   RCSTAbits.RX9 = 0;
  1430  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0466  1318               	bcf	24,6	;volatile
  1433  0467                     l1648:
  1434                           
  1435                           ;Lab02.c: 234:   RCSTAbits.CREN = 1;
  1436  0467  1618               	bsf	24,4	;volatile
  1437  0468                     l1650:
  1438                           
  1439                           ;Lab02.c: 235:   RCSTAbits.SPEN = 1;
  1440  0468  1798               	bsf	24,7	;volatile
  1441  0469                     l1652:
  1442                           
  1443                           ;Lab02.c: 239:   BAUDCTLbits.BRG16 = 0;
  1444  0469  1683               	bsf	3,5	;RP0=1, select bank3
  1445  046A  1703               	bsf	3,6	;RP1=1, select bank3
  1446  046B  1187               	bcf	7,3	;volatile
  1447  046C                     l1654:
  1448                           
  1449                           ;Lab02.c: 240:   SPBRG = 25;
  1450  046C  3019               	movlw	25
  1451  046D  1683               	bsf	3,5	;RP0=1, select bank1
  1452  046E  1303               	bcf	3,6	;RP1=0, select bank1
  1453  046F  0099               	movwf	25	;volatile
  1454  0470                     l1656:
  1455                           
  1456                           ;Lab02.c: 241:   SPBRGH = 1;
  1457  0470  3001               	movlw	1
  1458  0471  009A               	movwf	26	;volatile
  1459  0472                     l208:
  1460  0472  0008               	return
  1461  0473                     __end_of_setup:
  1462                           
  1463                           	psect	text2
  1464  051B                     __ptext2:	
  1465 ;; *************** function _initAN *****************
  1466 ;; Defined at:
  1467 ;;		line 76 in file "./config_ADC.h"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  bin             1    wreg     unsigned char 
  1470 ;;  just            1    3[COMMON] unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  bin             1    5[COMMON] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         1       0       0       0       0
  1483 ;;      Locals:         1       0       0       0       0
  1484 ;;      Temps:          1       0       0       0       0
  1485 ;;      Totals:         3       0       0       0       0
  1486 ;;Total ram usage:        3 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_setup
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _initAN
  1498  051B                     _initAN:
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _initAN: [wreg+status,2+status,0]
  1502                           ;initAN@bin stored from wreg
  1503  051B  00F5               	movwf	initAN@bin
  1504  051C                     l1394:
  1505                           
  1506                           ;./config_ADC.h: 77:      ANSEL = bin;
  1507  051C  0875               	movf	initAN@bin,w
  1508  051D  1683               	bsf	3,5	;RP0=1, select bank3
  1509  051E  1703               	bsf	3,6	;RP1=1, select bank3
  1510  051F  0088               	movwf	8	;volatile
  1511  0520                     l1396:
  1512                           
  1513                           ;./config_ADC.h: 78:      ANSELH = 0x00;
  1514  0520  0189               	clrf	9	;volatile
  1515  0521                     l1398:
  1516                           
  1517                           ;./config_ADC.h: 79:      TRISA = bin;
  1518  0521  0875               	movf	initAN@bin,w
  1519  0522  1683               	bsf	3,5	;RP0=1, select bank1
  1520  0523  1303               	bcf	3,6	;RP1=0, select bank1
  1521  0524  0085               	movwf	5	;volatile
  1522  0525                     l1400:
  1523                           
  1524                           ;./config_ADC.h: 81:      ADCON0bits.CHS= 0;
  1525  0525  30C3               	movlw	-61
  1526  0526  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0527  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0528  059F               	andwf	31,f	;volatile
  1529  0529                     l1402:
  1530                           
  1531                           ;./config_ADC.h: 82:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1532  0529  3021               	movlw	33
  1533  052A  00F4               	movwf	??_initAN
  1534  052B                     u1307:
  1535  052B  0BF4               	decfsz	??_initAN,f
  1536  052C  2D2B               	goto	u1307
  1537  052D                     l1404:
  1538                           
  1539                           ;./config_ADC.h: 84:      ADCON0bits.ADON = 1;
  1540  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1541  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1542  052F  141F               	bsf	31,0	;volatile
  1543  0530                     l1406:
  1544                           
  1545                           ;./config_ADC.h: 85:      ADCON0bits.ADCS = 1;
  1546  0530  081F               	movf	31,w	;volatile
  1547  0531  393F               	andlw	-193
  1548  0532  3840               	iorlw	64
  1549  0533  009F               	movwf	31	;volatile
  1550  0534                     l1408:
  1551                           
  1552                           ;./config_ADC.h: 86:      ADCON1bits.ADFM = just;
  1553  0534  0C73               	rrf	initAN@just,w
  1554  0535  1683               	bsf	3,5	;RP0=1, select bank1
  1555  0536  1303               	bcf	3,6	;RP1=0, select bank1
  1556  0537  1C03               	skipc
  1557  0538  139F               	bcf	31,7	;volatile
  1558  0539  1803               	skipnc
  1559  053A  179F               	bsf	31,7	;volatile
  1560  053B                     l1410:
  1561                           
  1562                           ;./config_ADC.h: 87:      ADCON1bits.VCFG0 = 0;
  1563  053B  121F               	bcf	31,4	;volatile
  1564  053C                     l1412:
  1565                           
  1566                           ;./config_ADC.h: 88:      ADCON1bits.VCFG1 = 0;
  1567  053C  129F               	bcf	31,5	;volatile
  1568  053D                     l1414:
  1569                           
  1570                           ;./config_ADC.h: 90:      PIE1bits.ADIE= 1;
  1571  053D  170C               	bsf	12,6	;volatile
  1572  053E                     l91:
  1573  053E  0008               	return
  1574  053F                     __end_of_initAN:
  1575                           
  1576                           	psect	text3
  1577  053F                     __ptext3:	
  1578 ;; *************** function _printf *****************
  1579 ;; Defined at:
  1580 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  f               1    wreg     PTR const unsigned char 
  1583 ;;		 -> STR_7(18), STR_4(18), 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  f               1    7[COMMON] PTR const unsigned char 
  1586 ;;		 -> STR_7(18), STR_4(18), 
  1587 ;;  tmpval          4    0        struct .
  1588 ;;  cp              2    0        PTR const unsigned char 
  1589 ;;  len             2    0        unsigned int 
  1590 ;;  val             2    0        unsigned int 
  1591 ;;  c               1    6[COMMON] unsigned char 
  1592 ;;  ap              1    5[COMMON] PTR void [1]
  1593 ;;		 -> ?_printf(2), 
  1594 ;;  flag            1    0        unsigned char 
  1595 ;;  prec            1    0        char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  2   42[None  ] int 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       0       0       0       0
  1606 ;;      Locals:         3       0       0       0       0
  1607 ;;      Temps:          1       0       0       0       0
  1608 ;;      Totals:         4       0       0       0       0
  1609 ;;Total ram usage:        4 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    2
  1612 ;; This function calls:
  1613 ;;		_putch
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _printf
  1621  053F                     _printf:
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1625                           ;printf@f stored from wreg
  1626  053F  00F7               	movwf	printf@f
  1627  0540                     l1714:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1630  0540  3070               	movlw	(low (?_printf| 0))& (0+255)
  1631  0541  00F4               	movwf	??_printf
  1632  0542  0874               	movf	??_printf,w
  1633  0543  00F5               	movwf	printf@ap
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1636  0544  2D4B               	goto	l1718
  1637  0545                     l1716:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1640  0545  0876               	movf	printf@c,w
  1641  0546  120A  118A  25B7  120A  118A  	fcall	_putch
  1642  054B                     l1718:	
  1643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1644                           
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1647  054B  3001               	movlw	1
  1648  054C  07F7               	addwf	printf@f,f
  1649  054D  30FF               	movlw	-1
  1650  054E  0777               	addwf	printf@f,w
  1651  054F  0084               	movwf	4
  1652  0550  120A  118A  24B3  120A  118A  	fcall	stringdir
  1653  0555  00F4               	movwf	??_printf
  1654  0556  0874               	movf	??_printf,w
  1655  0557  00F6               	movwf	printf@c
  1656  0558  0876               	movf	printf@c,w
  1657  0559  1D03               	btfss	3,2
  1658  055A  2D5C               	goto	u821
  1659  055B  2D5D               	goto	u820
  1660  055C                     u821:
  1661  055C  2D45               	goto	l1716
  1662  055D                     u820:
  1663  055D                     l350:
  1664  055D  0008               	return
  1665  055E                     __end_of_printf:
  1666                           
  1667                           	psect	text4
  1668  05B7                     __ptext4:	
  1669 ;; *************** function _putch *****************
  1670 ;; Defined at:
  1671 ;;		line 262 in file "Lab02.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  info            1    wreg     unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  info            1    3[COMMON] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0
  1688 ;;      Totals:         1       0       0       0       0
  1689 ;;Total ram usage:        1 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_printf
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _putch
  1701  05B7                     _putch:
  1702                           
  1703                           ;incstack = 0
  1704                           ; Regs used in _putch: [wreg]
  1705                           ;putch@info stored from wreg
  1706  05B7  00F3               	movwf	putch@info
  1707  05B8                     l1428:
  1708  05B8                     l214:	
  1709                           ;Lab02.c: 263:     while (TXIF == 0);
  1710                           
  1711  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1712  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1713  05BA  1E0C               	btfss	12,4	;volatile
  1714  05BB  2DBD               	goto	u501
  1715  05BC  2DBE               	goto	u500
  1716  05BD                     u501:
  1717  05BD  2DB8               	goto	l214
  1718  05BE                     u500:
  1719  05BE                     l1430:
  1720                           
  1721                           ;Lab02.c: 264:     TXREG = info;
  1722  05BE  0873               	movf	putch@info,w
  1723  05BF  0099               	movwf	25	;volatile
  1724  05C0                     l217:
  1725  05C0  0008               	return
  1726  05C1                     __end_of_putch:
  1727                           
  1728                           	psect	text5
  1729  0323                     __ptext5:	
  1730 ;; *************** function _decimal *****************
  1731 ;; Defined at:
  1732 ;;		line 248 in file "Lab02.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  var             1    wreg     unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  var             1    7[BANK0 ] unsigned char 
  1737 ;;  VAL             1    8[BANK0 ] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       2       0       0       0
  1749 ;;      Temps:          0       3       0       0       0
  1750 ;;      Totals:         0       5       0       0       0
  1751 ;;Total ram usage:        5 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    2
  1754 ;; This function calls:
  1755 ;;		___awdiv
  1756 ;;		___bmul
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _decimal
  1764  0323                     _decimal:
  1765                           
  1766                           ;incstack = 0
  1767                           ; Regs used in _decimal: [wreg+status,2+status,0+pclath+cstack]
  1768                           ;decimal@var stored from wreg
  1769  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0325  00A7               	movwf	decimal@var
  1772  0326                     l1936:
  1773                           
  1774                           ;Lab02.c: 249:     uint8_t VAL;;Lab02.c: 250:     VAL = var;
  1775  0326  0827               	movf	decimal@var,w
  1776  0327  00A4               	movwf	??_decimal
  1777  0328  0824               	movf	??_decimal,w
  1778  0329  00A8               	movwf	decimal@VAL
  1779  032A                     l1938:
  1780                           
  1781                           ;Lab02.c: 251:     cen = (VAL/100) ;
  1782  032A  3064               	movlw	100
  1783  032B  00F3               	movwf	___awdiv@divisor
  1784  032C  3000               	movlw	0
  1785  032D  00F4               	movwf	___awdiv@divisor+1
  1786  032E  0828               	movf	decimal@VAL,w
  1787  032F  00A4               	movwf	??_decimal
  1788  0330  01A5               	clrf	??_decimal+1
  1789  0331  0824               	movf	??_decimal,w
  1790  0332  00F5               	movwf	___awdiv@dividend
  1791  0333  0825               	movf	??_decimal+1,w
  1792  0334  00F6               	movwf	___awdiv@dividend+1
  1793  0335  120A  118A  22BA  120A  118A  	fcall	___awdiv
  1794  033A  0873               	movf	?___awdiv,w
  1795  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1796  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1797  033D  00A6               	movwf	??_decimal+2
  1798  033E  0826               	movf	??_decimal+2,w
  1799  033F  00F8               	movwf	_cen
  1800  0340                     l1940:
  1801                           
  1802                           ;Lab02.c: 252:     VAL = (VAL - (cen*100));
  1803  0340  309C               	movlw	156
  1804  0341  00A4               	movwf	??_decimal
  1805  0342  0824               	movf	??_decimal,w
  1806  0343  00F3               	movwf	___bmul@multiplicand
  1807  0344  0878               	movf	_cen,w
  1808  0345  120A  118A  2595  120A  118A  	fcall	___bmul
  1809  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1810  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1811  034C  0728               	addwf	decimal@VAL,w
  1812  034D  00A5               	movwf	??_decimal+1
  1813  034E  0825               	movf	??_decimal+1,w
  1814  034F  00A8               	movwf	decimal@VAL
  1815  0350                     l1942:
  1816                           
  1817                           ;Lab02.c: 253:     dec = (VAL/10);
  1818  0350  300A               	movlw	10
  1819  0351  00F3               	movwf	___awdiv@divisor
  1820  0352  3000               	movlw	0
  1821  0353  00F4               	movwf	___awdiv@divisor+1
  1822  0354  0828               	movf	decimal@VAL,w
  1823  0355  00A4               	movwf	??_decimal
  1824  0356  01A5               	clrf	??_decimal+1
  1825  0357  0824               	movf	??_decimal,w
  1826  0358  00F5               	movwf	___awdiv@dividend
  1827  0359  0825               	movf	??_decimal+1,w
  1828  035A  00F6               	movwf	___awdiv@dividend+1
  1829  035B  120A  118A  22BA  120A  118A  	fcall	___awdiv
  1830  0360  0873               	movf	?___awdiv,w
  1831  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1833  0363  00A6               	movwf	??_decimal+2
  1834  0364  0826               	movf	??_decimal+2,w
  1835  0365  00F9               	movwf	_dec
  1836  0366                     l1944:
  1837                           
  1838                           ;Lab02.c: 254:     VAL = (VAL - (dec*10));
  1839  0366  30F6               	movlw	246
  1840  0367  00A4               	movwf	??_decimal
  1841  0368  0824               	movf	??_decimal,w
  1842  0369  00F3               	movwf	___bmul@multiplicand
  1843  036A  0879               	movf	_dec,w
  1844  036B  120A  118A  2595  120A  118A  	fcall	___bmul
  1845  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0372  0728               	addwf	decimal@VAL,w
  1848  0373  00A5               	movwf	??_decimal+1
  1849  0374  0825               	movf	??_decimal+1,w
  1850  0375  00A8               	movwf	decimal@VAL
  1851                           
  1852                           ;Lab02.c: 255:     un = (VAL);
  1853  0376  0828               	movf	decimal@VAL,w
  1854  0377  00A4               	movwf	??_decimal
  1855  0378  0824               	movf	??_decimal,w
  1856  0379  00FA               	movwf	_un
  1857  037A                     l1946:
  1858                           
  1859                           ;Lab02.c: 257:     cen = cen + 48;
  1860  037A  0878               	movf	_cen,w
  1861  037B  3E30               	addlw	48
  1862  037C  00A4               	movwf	??_decimal
  1863  037D  0824               	movf	??_decimal,w
  1864  037E  00F8               	movwf	_cen
  1865  037F                     l1948:
  1866                           
  1867                           ;Lab02.c: 258:     dec = dec + 48;
  1868  037F  0879               	movf	_dec,w
  1869  0380  3E30               	addlw	48
  1870  0381  00A4               	movwf	??_decimal
  1871  0382  0824               	movf	??_decimal,w
  1872  0383  00F9               	movwf	_dec
  1873  0384                     l1950:
  1874                           
  1875                           ;Lab02.c: 259:     un = un + 48;
  1876  0384  087A               	movf	_un,w
  1877  0385  3E30               	addlw	48
  1878  0386  00A4               	movwf	??_decimal
  1879  0387  0824               	movf	??_decimal,w
  1880  0388  00FA               	movwf	_un
  1881  0389                     l211:
  1882  0389  0008               	return
  1883  038A                     __end_of_decimal:
  1884                           
  1885                           	psect	text6
  1886  0595                     __ptext6:	
  1887 ;; *************** function ___bmul *****************
  1888 ;; Defined at:
  1889 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  multiplier      1    wreg     unsigned char 
  1892 ;;  multiplicand    1    3[COMMON] unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  multiplier      1    6[COMMON] unsigned char 
  1895 ;;  product         1    5[COMMON] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      unsigned char 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         1       0       0       0       0
  1906 ;;      Locals:         2       0       0       0       0
  1907 ;;      Temps:          1       0       0       0       0
  1908 ;;      Totals:         4       0       0       0       0
  1909 ;;Total ram usage:        4 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_decimal
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function ___bmul
  1921  0595                     ___bmul:
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1925                           ;___bmul@multiplier stored from wreg
  1926  0595  00F6               	movwf	___bmul@multiplier
  1927  0596                     l1442:
  1928  0596  01F5               	clrf	___bmul@product
  1929  0597                     l1444:
  1930  0597  1C76               	btfss	___bmul@multiplier,0
  1931  0598  2D9A               	goto	u511
  1932  0599  2D9B               	goto	u510
  1933  059A                     u511:
  1934  059A  2D9F               	goto	l1448
  1935  059B                     u510:
  1936  059B                     l1446:
  1937  059B  0873               	movf	___bmul@multiplicand,w
  1938  059C  00F4               	movwf	??___bmul
  1939  059D  0874               	movf	??___bmul,w
  1940  059E  07F5               	addwf	___bmul@product,f
  1941  059F                     l1448:
  1942  059F  1003               	clrc
  1943  05A0  0DF3               	rlf	___bmul@multiplicand,f
  1944  05A1                     l1450:
  1945  05A1  1003               	clrc
  1946  05A2  0CF6               	rrf	___bmul@multiplier,f
  1947  05A3  0876               	movf	___bmul@multiplier,w
  1948  05A4  1D03               	btfss	3,2
  1949  05A5  2DA7               	goto	u521
  1950  05A6  2DA8               	goto	u520
  1951  05A7                     u521:
  1952  05A7  2D97               	goto	l1444
  1953  05A8                     u520:
  1954  05A8                     l1452:
  1955  05A8  0875               	movf	___bmul@product,w
  1956  05A9                     l380:
  1957  05A9  0008               	return
  1958  05AA                     __end_of___bmul:
  1959                           
  1960                           	psect	text7
  1961  02BA                     __ptext7:	
  1962 ;; *************** function ___awdiv *****************
  1963 ;; Defined at:
  1964 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  divisor         2    3[COMMON] int 
  1967 ;;  dividend        2    5[COMMON] int 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  quotient        2    2[BANK0 ] int 
  1970 ;;  sign            1    1[BANK0 ] unsigned char 
  1971 ;;  counter         1    0[BANK0 ] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  2    3[COMMON] int 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         4       0       0       0       0
  1982 ;;      Locals:         0       4       0       0       0
  1983 ;;      Temps:          1       0       0       0       0
  1984 ;;      Totals:         5       4       0       0       0
  1985 ;;Total ram usage:        9 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_decimal
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function ___awdiv
  1997  02BA                     ___awdiv:
  1998  02BA                     l1456:	
  1999                           ;incstack = 0
  2000                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2001                           
  2002  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2003  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2004  02BC  01A1               	clrf	___awdiv@sign
  2005  02BD                     l1458:
  2006  02BD  1FF4               	btfss	___awdiv@divisor+1,7
  2007  02BE  2AC0               	goto	u531
  2008  02BF  2AC1               	goto	u530
  2009  02C0                     u531:
  2010  02C0  2AC8               	goto	l1464
  2011  02C1                     u530:
  2012  02C1                     l1460:
  2013  02C1  09F3               	comf	___awdiv@divisor,f
  2014  02C2  09F4               	comf	___awdiv@divisor+1,f
  2015  02C3  0AF3               	incf	___awdiv@divisor,f
  2016  02C4  1903               	skipnz
  2017  02C5  0AF4               	incf	___awdiv@divisor+1,f
  2018  02C6                     l1462:
  2019  02C6  01A1               	clrf	___awdiv@sign
  2020  02C7  0AA1               	incf	___awdiv@sign,f
  2021  02C8                     l1464:
  2022  02C8  1FF6               	btfss	___awdiv@dividend+1,7
  2023  02C9  2ACB               	goto	u541
  2024  02CA  2ACC               	goto	u540
  2025  02CB                     u541:
  2026  02CB  2AD5               	goto	l1470
  2027  02CC                     u540:
  2028  02CC                     l1466:
  2029  02CC  09F5               	comf	___awdiv@dividend,f
  2030  02CD  09F6               	comf	___awdiv@dividend+1,f
  2031  02CE  0AF5               	incf	___awdiv@dividend,f
  2032  02CF  1903               	skipnz
  2033  02D0  0AF6               	incf	___awdiv@dividend+1,f
  2034  02D1                     l1468:
  2035  02D1  3001               	movlw	1
  2036  02D2  00F7               	movwf	??___awdiv
  2037  02D3  0877               	movf	??___awdiv,w
  2038  02D4  06A1               	xorwf	___awdiv@sign,f
  2039  02D5                     l1470:
  2040  02D5  01A2               	clrf	___awdiv@quotient
  2041  02D6  01A3               	clrf	___awdiv@quotient+1
  2042  02D7                     l1472:
  2043  02D7  0873               	movf	___awdiv@divisor,w
  2044  02D8  0474               	iorwf	___awdiv@divisor+1,w
  2045  02D9  1903               	btfsc	3,2
  2046  02DA  2ADC               	goto	u551
  2047  02DB  2ADD               	goto	u550
  2048  02DC                     u551:
  2049  02DC  2B14               	goto	l1492
  2050  02DD                     u550:
  2051  02DD                     l1474:
  2052  02DD  01A0               	clrf	___awdiv@counter
  2053  02DE  0AA0               	incf	___awdiv@counter,f
  2054  02DF  2AEB               	goto	l1480
  2055  02E0                     l1476:
  2056  02E0  3001               	movlw	1
  2057  02E1                     u565:
  2058  02E1  1003               	clrc
  2059  02E2  0DF3               	rlf	___awdiv@divisor,f
  2060  02E3  0DF4               	rlf	___awdiv@divisor+1,f
  2061  02E4  3EFF               	addlw	-1
  2062  02E5  1D03               	skipz
  2063  02E6  2AE1               	goto	u565
  2064  02E7                     l1478:
  2065  02E7  3001               	movlw	1
  2066  02E8  00F7               	movwf	??___awdiv
  2067  02E9  0877               	movf	??___awdiv,w
  2068  02EA  07A0               	addwf	___awdiv@counter,f
  2069  02EB                     l1480:
  2070  02EB  1FF4               	btfss	___awdiv@divisor+1,7
  2071  02EC  2AEE               	goto	u571
  2072  02ED  2AEF               	goto	u570
  2073  02EE                     u571:
  2074  02EE  2AE0               	goto	l1476
  2075  02EF                     u570:
  2076  02EF                     l1482:
  2077  02EF  3001               	movlw	1
  2078  02F0                     u585:
  2079  02F0  1003               	clrc
  2080  02F1  0DA2               	rlf	___awdiv@quotient,f
  2081  02F2  0DA3               	rlf	___awdiv@quotient+1,f
  2082  02F3  3EFF               	addlw	-1
  2083  02F4  1D03               	skipz
  2084  02F5  2AF0               	goto	u585
  2085  02F6  0874               	movf	___awdiv@divisor+1,w
  2086  02F7  0276               	subwf	___awdiv@dividend+1,w
  2087  02F8  1D03               	skipz
  2088  02F9  2AFC               	goto	u595
  2089  02FA  0873               	movf	___awdiv@divisor,w
  2090  02FB  0275               	subwf	___awdiv@dividend,w
  2091  02FC                     u595:
  2092  02FC  1C03               	skipc
  2093  02FD  2AFF               	goto	u591
  2094  02FE  2B00               	goto	u590
  2095  02FF                     u591:
  2096  02FF  2B07               	goto	l1488
  2097  0300                     u590:
  2098  0300                     l1484:
  2099  0300  0873               	movf	___awdiv@divisor,w
  2100  0301  02F5               	subwf	___awdiv@dividend,f
  2101  0302  0874               	movf	___awdiv@divisor+1,w
  2102  0303  1C03               	skipc
  2103  0304  03F6               	decf	___awdiv@dividend+1,f
  2104  0305  02F6               	subwf	___awdiv@dividend+1,f
  2105  0306                     l1486:
  2106  0306  1422               	bsf	___awdiv@quotient,0
  2107  0307                     l1488:
  2108  0307  3001               	movlw	1
  2109  0308                     u605:
  2110  0308  1003               	clrc
  2111  0309  0CF4               	rrf	___awdiv@divisor+1,f
  2112  030A  0CF3               	rrf	___awdiv@divisor,f
  2113  030B  3EFF               	addlw	-1
  2114  030C  1D03               	skipz
  2115  030D  2B08               	goto	u605
  2116  030E                     l1490:
  2117  030E  3001               	movlw	1
  2118  030F  02A0               	subwf	___awdiv@counter,f
  2119  0310  1D03               	btfss	3,2
  2120  0311  2B13               	goto	u611
  2121  0312  2B14               	goto	u610
  2122  0313                     u611:
  2123  0313  2AEF               	goto	l1482
  2124  0314                     u610:
  2125  0314                     l1492:
  2126  0314  0821               	movf	___awdiv@sign,w
  2127  0315  1903               	btfsc	3,2
  2128  0316  2B18               	goto	u621
  2129  0317  2B19               	goto	u620
  2130  0318                     u621:
  2131  0318  2B1E               	goto	l1496
  2132  0319                     u620:
  2133  0319                     l1494:
  2134  0319  09A2               	comf	___awdiv@quotient,f
  2135  031A  09A3               	comf	___awdiv@quotient+1,f
  2136  031B  0AA2               	incf	___awdiv@quotient,f
  2137  031C  1903               	skipnz
  2138  031D  0AA3               	incf	___awdiv@quotient+1,f
  2139  031E                     l1496:
  2140  031E  0823               	movf	___awdiv@quotient+1,w
  2141  031F  00F4               	movwf	?___awdiv+1
  2142  0320  0822               	movf	___awdiv@quotient,w
  2143  0321  00F3               	movwf	?___awdiv
  2144  0322                     l507:
  2145  0322  0008               	return
  2146  0323                     __end_of___awdiv:
  2147                           
  2148                           	psect	text8
  2149  01BA                     __ptext8:	
  2150 ;; *************** function _chselect *****************
  2151 ;; Defined at:
  2152 ;;		line 94 in file "./config_ADC.h"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  cant            1    wreg     unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  cant            1    6[COMMON] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       0       0       0
  2167 ;;      Locals:         1       0       0       0       0
  2168 ;;      Temps:          3       0       0       0       0
  2169 ;;      Totals:         4       0       0       0       0
  2170 ;;Total ram usage:        4 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    1
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _chselect
  2182  01BA                     _chselect:
  2183                           
  2184                           ;incstack = 0
  2185                           ; Regs used in _chselect: [wreg-fsr0h+status,2+status,0]
  2186                           ;chselect@cant stored from wreg
  2187  01BA  00F6               	movwf	chselect@cant
  2188  01BB                     l1500:
  2189                           
  2190                           ;./config_ADC.h: 95:     if(ADCON0bits.GO == 0){
  2191  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2192  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2193  01BD  189F               	btfsc	31,1	;volatile
  2194  01BE  29C0               	goto	u631
  2195  01BF  29C1               	goto	u630
  2196  01C0                     u631:
  2197  01C0  2AB1               	goto	l1588
  2198  01C1                     u630:
  2199  01C1  2A7A               	goto	l1586
  2200  01C2                     l1504:
  2201                           
  2202                           ;./config_ADC.h: 99:             if (cant == 1){
  2203  01C2  0376               	decf	chselect@cant,w
  2204  01C3  1D03               	btfss	3,2
  2205  01C4  29C6               	goto	u641
  2206  01C5  29C7               	goto	u640
  2207  01C6                     u641:
  2208  01C6  29CA               	goto	l1508
  2209  01C7                     u640:
  2210  01C7                     l1506:
  2211                           
  2212                           ;./config_ADC.h: 100:                 ADCON0bits.CHS = 0;
  2213  01C7  30C3               	movlw	-61
  2214  01C8  059F               	andwf	31,f	;volatile
  2215                           
  2216                           ;./config_ADC.h: 101:             }
  2217  01C9  2AB1               	goto	l1588
  2218  01CA                     l1508:
  2219                           
  2220                           ;./config_ADC.h: 103:                 ADCON0bits.CHS = 1;
  2221  01CA  081F               	movf	31,w	;volatile
  2222  01CB  39C3               	andlw	-61
  2223  01CC  3804               	iorlw	4
  2224  01CD  009F               	movwf	31	;volatile
  2225  01CE  2AB1               	goto	l1588
  2226  01CF                     l1510:
  2227                           
  2228                           ;./config_ADC.h: 107:             if (cant == 2){
  2229  01CF  3002               	movlw	2
  2230  01D0  0676               	xorwf	chselect@cant,w
  2231  01D1  1D03               	btfss	3,2
  2232  01D2  29D4               	goto	u651
  2233  01D3  29D5               	goto	u650
  2234  01D4                     u651:
  2235  01D4  29D8               	goto	l1514
  2236  01D5                     u650:
  2237  01D5                     l1512:
  2238                           
  2239                           ;./config_ADC.h: 108:                 ADCON0bits.CHS = 0;
  2240  01D5  30C3               	movlw	-61
  2241  01D6  059F               	andwf	31,f	;volatile
  2242                           
  2243                           ;./config_ADC.h: 109:             }
  2244  01D7  2AB1               	goto	l1588
  2245  01D8                     l1514:
  2246                           
  2247                           ;./config_ADC.h: 111:                 ADCON0bits.CHS = 2;
  2248  01D8  081F               	movf	31,w	;volatile
  2249  01D9  39C3               	andlw	-61
  2250  01DA  3808               	iorlw	8
  2251  01DB  009F               	movwf	31	;volatile
  2252  01DC  2AB1               	goto	l1588
  2253  01DD                     l1516:
  2254                           
  2255                           ;./config_ADC.h: 115:             if (cant == 3){
  2256  01DD  3003               	movlw	3
  2257  01DE  0676               	xorwf	chselect@cant,w
  2258  01DF  1D03               	btfss	3,2
  2259  01E0  29E2               	goto	u661
  2260  01E1  29E3               	goto	u660
  2261  01E2                     u661:
  2262  01E2  29E6               	goto	l1520
  2263  01E3                     u660:
  2264  01E3                     l1518:
  2265                           
  2266                           ;./config_ADC.h: 116:                 ADCON0bits.CHS = 0;
  2267  01E3  30C3               	movlw	-61
  2268  01E4  059F               	andwf	31,f	;volatile
  2269                           
  2270                           ;./config_ADC.h: 117:             }
  2271  01E5  2AB1               	goto	l1588
  2272  01E6                     l1520:
  2273                           
  2274                           ;./config_ADC.h: 119:                 ADCON0bits.CHS = 3;
  2275  01E6  081F               	movf	31,w	;volatile
  2276  01E7  39C3               	andlw	-61
  2277  01E8  380C               	iorlw	12
  2278  01E9  009F               	movwf	31	;volatile
  2279  01EA  2AB1               	goto	l1588
  2280  01EB                     l1522:
  2281                           
  2282                           ;./config_ADC.h: 123:             if (cant == 4){
  2283  01EB  3004               	movlw	4
  2284  01EC  0676               	xorwf	chselect@cant,w
  2285  01ED  1D03               	btfss	3,2
  2286  01EE  29F0               	goto	u671
  2287  01EF  29F1               	goto	u670
  2288  01F0                     u671:
  2289  01F0  29F4               	goto	l1526
  2290  01F1                     u670:
  2291  01F1                     l1524:
  2292                           
  2293                           ;./config_ADC.h: 124:                 ADCON0bits.CHS = 0;
  2294  01F1  30C3               	movlw	-61
  2295  01F2  059F               	andwf	31,f	;volatile
  2296                           
  2297                           ;./config_ADC.h: 125:             }
  2298  01F3  2AB1               	goto	l1588
  2299  01F4                     l1526:
  2300                           
  2301                           ;./config_ADC.h: 127:                 ADCON0bits.CHS = 4;
  2302  01F4  081F               	movf	31,w	;volatile
  2303  01F5  39C3               	andlw	-61
  2304  01F6  3810               	iorlw	16
  2305  01F7  009F               	movwf	31	;volatile
  2306  01F8  2AB1               	goto	l1588
  2307  01F9                     l1528:
  2308                           
  2309                           ;./config_ADC.h: 131:             if (cant == 5){
  2310  01F9  3005               	movlw	5
  2311  01FA  0676               	xorwf	chselect@cant,w
  2312  01FB  1D03               	btfss	3,2
  2313  01FC  29FE               	goto	u681
  2314  01FD  29FF               	goto	u680
  2315  01FE                     u681:
  2316  01FE  2A02               	goto	l1532
  2317  01FF                     u680:
  2318  01FF                     l1530:
  2319                           
  2320                           ;./config_ADC.h: 132:                 ADCON0bits.CHS = 0;
  2321  01FF  30C3               	movlw	-61
  2322  0200  059F               	andwf	31,f	;volatile
  2323                           
  2324                           ;./config_ADC.h: 133:             }
  2325  0201  2AB1               	goto	l1588
  2326  0202                     l1532:
  2327                           
  2328                           ;./config_ADC.h: 135:                 ADCON0bits.CHS = 5;
  2329  0202  081F               	movf	31,w	;volatile
  2330  0203  39C3               	andlw	-61
  2331  0204  3814               	iorlw	20
  2332  0205  009F               	movwf	31	;volatile
  2333  0206  2AB1               	goto	l1588
  2334  0207                     l1534:
  2335                           
  2336                           ;./config_ADC.h: 139:             if (cant == 6){
  2337  0207  3006               	movlw	6
  2338  0208  0676               	xorwf	chselect@cant,w
  2339  0209  1D03               	btfss	3,2
  2340  020A  2A0C               	goto	u691
  2341  020B  2A0D               	goto	u690
  2342  020C                     u691:
  2343  020C  2A10               	goto	l1538
  2344  020D                     u690:
  2345  020D                     l1536:
  2346                           
  2347                           ;./config_ADC.h: 140:                 ADCON0bits.CHS = 0;
  2348  020D  30C3               	movlw	-61
  2349  020E  059F               	andwf	31,f	;volatile
  2350                           
  2351                           ;./config_ADC.h: 141:             }
  2352  020F  2AB1               	goto	l1588
  2353  0210                     l1538:
  2354                           
  2355                           ;./config_ADC.h: 143:                 ADCON0bits.CHS = 6;
  2356  0210  081F               	movf	31,w	;volatile
  2357  0211  39C3               	andlw	-61
  2358  0212  3818               	iorlw	24
  2359  0213  009F               	movwf	31	;volatile
  2360  0214  2AB1               	goto	l1588
  2361  0215                     l1540:
  2362                           
  2363                           ;./config_ADC.h: 147:             if (cant == 7){
  2364  0215  3007               	movlw	7
  2365  0216  0676               	xorwf	chselect@cant,w
  2366  0217  1D03               	btfss	3,2
  2367  0218  2A1A               	goto	u701
  2368  0219  2A1B               	goto	u700
  2369  021A                     u701:
  2370  021A  2A1E               	goto	l1544
  2371  021B                     u700:
  2372  021B                     l1542:
  2373                           
  2374                           ;./config_ADC.h: 148:                 ADCON0bits.CHS = 0;
  2375  021B  30C3               	movlw	-61
  2376  021C  059F               	andwf	31,f	;volatile
  2377                           
  2378                           ;./config_ADC.h: 149:             }
  2379  021D  2AB1               	goto	l1588
  2380  021E                     l1544:
  2381                           
  2382                           ;./config_ADC.h: 151:                 ADCON0bits.CHS = 7;
  2383  021E  081F               	movf	31,w	;volatile
  2384  021F  39C3               	andlw	-61
  2385  0220  381C               	iorlw	28
  2386  0221  009F               	movwf	31	;volatile
  2387  0222  2AB1               	goto	l1588
  2388  0223                     l1546:
  2389                           
  2390                           ;./config_ADC.h: 155:             if (cant == 8){
  2391  0223  3008               	movlw	8
  2392  0224  0676               	xorwf	chselect@cant,w
  2393  0225  1D03               	btfss	3,2
  2394  0226  2A28               	goto	u711
  2395  0227  2A29               	goto	u710
  2396  0228                     u711:
  2397  0228  2A2C               	goto	l1550
  2398  0229                     u710:
  2399  0229                     l1548:
  2400                           
  2401                           ;./config_ADC.h: 156:                 ADCON0bits.CHS = 0;
  2402  0229  30C3               	movlw	-61
  2403  022A  059F               	andwf	31,f	;volatile
  2404                           
  2405                           ;./config_ADC.h: 157:             }
  2406  022B  2AB1               	goto	l1588
  2407  022C                     l1550:
  2408                           
  2409                           ;./config_ADC.h: 159:                 ADCON0bits.CHS = 8;
  2410  022C  081F               	movf	31,w	;volatile
  2411  022D  39C3               	andlw	-61
  2412  022E  3820               	iorlw	32
  2413  022F  009F               	movwf	31	;volatile
  2414  0230  2AB1               	goto	l1588
  2415  0231                     l1552:
  2416                           
  2417                           ;./config_ADC.h: 163:             if (cant == 9){
  2418  0231  3009               	movlw	9
  2419  0232  0676               	xorwf	chselect@cant,w
  2420  0233  1D03               	btfss	3,2
  2421  0234  2A36               	goto	u721
  2422  0235  2A37               	goto	u720
  2423  0236                     u721:
  2424  0236  2A3A               	goto	l1556
  2425  0237                     u720:
  2426  0237                     l1554:
  2427                           
  2428                           ;./config_ADC.h: 164:                 ADCON0bits.CHS = 0;
  2429  0237  30C3               	movlw	-61
  2430  0238  059F               	andwf	31,f	;volatile
  2431                           
  2432                           ;./config_ADC.h: 165:             }
  2433  0239  2AB1               	goto	l1588
  2434  023A                     l1556:
  2435                           
  2436                           ;./config_ADC.h: 167:                 ADCON0bits.CHS = 9;
  2437  023A  081F               	movf	31,w	;volatile
  2438  023B  39C3               	andlw	-61
  2439  023C  3824               	iorlw	36
  2440  023D  009F               	movwf	31	;volatile
  2441  023E  2AB1               	goto	l1588
  2442  023F                     l1558:
  2443                           
  2444                           ;./config_ADC.h: 171:             if (cant == 10){
  2445  023F  300A               	movlw	10
  2446  0240  0676               	xorwf	chselect@cant,w
  2447  0241  1D03               	btfss	3,2
  2448  0242  2A44               	goto	u731
  2449  0243  2A45               	goto	u730
  2450  0244                     u731:
  2451  0244  2A48               	goto	l1562
  2452  0245                     u730:
  2453  0245                     l1560:
  2454                           
  2455                           ;./config_ADC.h: 172:                 ADCON0bits.CHS = 0;
  2456  0245  30C3               	movlw	-61
  2457  0246  059F               	andwf	31,f	;volatile
  2458                           
  2459                           ;./config_ADC.h: 173:             }
  2460  0247  2AB1               	goto	l1588
  2461  0248                     l1562:
  2462                           
  2463                           ;./config_ADC.h: 175:                 ADCON0bits.CHS = 10;
  2464  0248  081F               	movf	31,w	;volatile
  2465  0249  39C3               	andlw	-61
  2466  024A  3828               	iorlw	40
  2467  024B  009F               	movwf	31	;volatile
  2468  024C  2AB1               	goto	l1588
  2469  024D                     l1564:
  2470                           
  2471                           ;./config_ADC.h: 179:             if (cant == 11){
  2472  024D  300B               	movlw	11
  2473  024E  0676               	xorwf	chselect@cant,w
  2474  024F  1D03               	btfss	3,2
  2475  0250  2A52               	goto	u741
  2476  0251  2A53               	goto	u740
  2477  0252                     u741:
  2478  0252  2A56               	goto	l1568
  2479  0253                     u740:
  2480  0253                     l1566:
  2481                           
  2482                           ;./config_ADC.h: 180:                 ADCON0bits.CHS = 0;
  2483  0253  30C3               	movlw	-61
  2484  0254  059F               	andwf	31,f	;volatile
  2485                           
  2486                           ;./config_ADC.h: 181:             }
  2487  0255  2AB1               	goto	l1588
  2488  0256                     l1568:
  2489                           
  2490                           ;./config_ADC.h: 183:                 ADCON0bits.CHS = 11;
  2491  0256  081F               	movf	31,w	;volatile
  2492  0257  39C3               	andlw	-61
  2493  0258  382C               	iorlw	44
  2494  0259  009F               	movwf	31	;volatile
  2495  025A  2AB1               	goto	l1588
  2496  025B                     l1570:
  2497                           
  2498                           ;./config_ADC.h: 187:             if (cant == 12){
  2499  025B  300C               	movlw	12
  2500  025C  0676               	xorwf	chselect@cant,w
  2501  025D  1D03               	btfss	3,2
  2502  025E  2A60               	goto	u751
  2503  025F  2A61               	goto	u750
  2504  0260                     u751:
  2505  0260  2A64               	goto	l1574
  2506  0261                     u750:
  2507  0261                     l1572:
  2508                           
  2509                           ;./config_ADC.h: 188:                 ADCON0bits.CHS = 0;
  2510  0261  30C3               	movlw	-61
  2511  0262  059F               	andwf	31,f	;volatile
  2512                           
  2513                           ;./config_ADC.h: 189:             }
  2514  0263  2AB1               	goto	l1588
  2515  0264                     l1574:
  2516                           
  2517                           ;./config_ADC.h: 191:                 ADCON0bits.CHS = 12;
  2518  0264  081F               	movf	31,w	;volatile
  2519  0265  39C3               	andlw	-61
  2520  0266  3830               	iorlw	48
  2521  0267  009F               	movwf	31	;volatile
  2522  0268  2AB1               	goto	l1588
  2523  0269                     l1576:
  2524                           
  2525                           ;./config_ADC.h: 195:             if (cant == 13){
  2526  0269  300D               	movlw	13
  2527  026A  0676               	xorwf	chselect@cant,w
  2528  026B  1D03               	btfss	3,2
  2529  026C  2A6E               	goto	u761
  2530  026D  2A6F               	goto	u760
  2531  026E                     u761:
  2532  026E  2A72               	goto	l1580
  2533  026F                     u760:
  2534  026F                     l1578:
  2535                           
  2536                           ;./config_ADC.h: 196:                 ADCON0bits.CHS = 0;
  2537  026F  30C3               	movlw	-61
  2538  0270  059F               	andwf	31,f	;volatile
  2539                           
  2540                           ;./config_ADC.h: 197:             }
  2541  0271  2AB1               	goto	l1588
  2542  0272                     l1580:
  2543                           
  2544                           ;./config_ADC.h: 199:                 ADCON0bits.CHS = 13;
  2545  0272  081F               	movf	31,w	;volatile
  2546  0273  39C3               	andlw	-61
  2547  0274  3834               	iorlw	52
  2548  0275  009F               	movwf	31	;volatile
  2549  0276  2AB1               	goto	l1588
  2550  0277                     l1582:
  2551                           
  2552                           ;./config_ADC.h: 203:                 ADCON0bits.CHS = 0;
  2553  0277  30C3               	movlw	-61
  2554  0278  059F               	andwf	31,f	;volatile
  2555                           
  2556                           ;./config_ADC.h: 204:             break;
  2557  0279  2AB1               	goto	l1588
  2558  027A                     l1586:
  2559  027A  0C1F               	rrf	31,w	;volatile
  2560  027B  00F3               	movwf	??_chselect
  2561  027C  0C73               	rrf	??_chselect,w
  2562  027D  390F               	andlw	15
  2563  027E  00F4               	movwf	??_chselect+1
  2564  027F  01F5               	clrf	??_chselect+2
  2565                           
  2566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2567                           ; Switch size 1, requested type "simple"
  2568                           ; Number of cases is 1, Range of values is 0 to 0
  2569                           ; switch strategies available:
  2570                           ; Name         Instructions Cycles
  2571                           ; simple_byte            4     3 (average)
  2572                           ; direct_byte           11     8 (fixed)
  2573                           ; jumptable            260     6 (fixed)
  2574                           ;	Chosen strategy is simple_byte
  2575  0280  0875               	movf	??_chselect+2,w
  2576  0281  3A00               	xorlw	0	; case 0
  2577  0282  1903               	skipnz
  2578  0283  2A85               	goto	l2080
  2579  0284  2AB1               	goto	l1588
  2580  0285                     l2080:
  2581                           
  2582                           ; Switch size 1, requested type "simple"
  2583                           ; Number of cases is 14, Range of values is 0 to 13
  2584                           ; switch strategies available:
  2585                           ; Name         Instructions Cycles
  2586                           ; simple_byte           43    22 (average)
  2587                           ; direct_byte           50     8 (fixed)
  2588                           ; jumptable            260     6 (fixed)
  2589                           ;	Chosen strategy is simple_byte
  2590  0285  0874               	movf	??_chselect+1,w
  2591  0286  3A00               	xorlw	0	; case 0
  2592  0287  1903               	skipnz
  2593  0288  29C2               	goto	l1504
  2594  0289  3A01               	xorlw	1	; case 1
  2595  028A  1903               	skipnz
  2596  028B  29CF               	goto	l1510
  2597  028C  3A03               	xorlw	3	; case 2
  2598  028D  1903               	skipnz
  2599  028E  29DD               	goto	l1516
  2600  028F  3A01               	xorlw	1	; case 3
  2601  0290  1903               	skipnz
  2602  0291  29EB               	goto	l1522
  2603  0292  3A07               	xorlw	7	; case 4
  2604  0293  1903               	skipnz
  2605  0294  29F9               	goto	l1528
  2606  0295  3A01               	xorlw	1	; case 5
  2607  0296  1903               	skipnz
  2608  0297  2A07               	goto	l1534
  2609  0298  3A03               	xorlw	3	; case 6
  2610  0299  1903               	skipnz
  2611  029A  2A15               	goto	l1540
  2612  029B  3A01               	xorlw	1	; case 7
  2613  029C  1903               	skipnz
  2614  029D  2A23               	goto	l1546
  2615  029E  3A0F               	xorlw	15	; case 8
  2616  029F  1903               	skipnz
  2617  02A0  2A31               	goto	l1552
  2618  02A1  3A01               	xorlw	1	; case 9
  2619  02A2  1903               	skipnz
  2620  02A3  2A3F               	goto	l1558
  2621  02A4  3A03               	xorlw	3	; case 10
  2622  02A5  1903               	skipnz
  2623  02A6  2A4D               	goto	l1564
  2624  02A7  3A01               	xorlw	1	; case 11
  2625  02A8  1903               	skipnz
  2626  02A9  2A5B               	goto	l1570
  2627  02AA  3A07               	xorlw	7	; case 12
  2628  02AB  1903               	skipnz
  2629  02AC  2A69               	goto	l1576
  2630  02AD  3A01               	xorlw	1	; case 13
  2631  02AE  1903               	skipnz
  2632  02AF  2A77               	goto	l1582
  2633  02B0  2AB1               	goto	l1588
  2634  02B1                     l1588:
  2635                           
  2636                           ;./config_ADC.h: 207:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  2637  02B1  3031               	movlw	49
  2638  02B2  00F3               	movwf	??_chselect
  2639  02B3                     u1317:
  2640  02B3  0BF3               	decfsz	??_chselect,f
  2641  02B4  2AB3               	goto	u1317
  2642  02B5  2AB6               	nop2
  2643  02B6                     l1590:
  2644                           
  2645                           ;./config_ADC.h: 208:     ADCON0bits.GO = 1;
  2646  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2647  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2648  02B8  149F               	bsf	31,1	;volatile
  2649  02B9                     l137:
  2650  02B9  0008               	return
  2651  02BA                     __end_of_chselect:
  2652                           
  2653                           	psect	text9
  2654  04F2                     __ptext9:	
  2655 ;; *************** function _Lcd_Write_String *****************
  2656 ;; Defined at:
  2657 ;;		line 78 in file "LCD.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  a               1    wreg     PTR unsigned char 
  2660 ;;		 -> STR_8(3), STR_6(3), STR_5(2), STR_3(3), 
  2661 ;;		 -> STR_2(2), STR_1(16), 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2664 ;;		 -> STR_8(3), STR_6(3), STR_5(2), STR_3(3), 
  2665 ;;		 -> STR_2(2), STR_1(16), 
  2666 ;;  i               2    0[BANK0 ] int 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2676 ;;      Params:         0       0       0       0       0
  2677 ;;      Locals:         0       3       0       0       0
  2678 ;;      Temps:          0       0       0       0       0
  2679 ;;      Totals:         0       3       0       0       0
  2680 ;;Total ram usage:        3 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    3
  2683 ;; This function calls:
  2684 ;;		_Lcd_Write_Char
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _Lcd_Write_String
  2692  04F2                     _Lcd_Write_String:
  2693                           
  2694                           ;incstack = 0
  2695                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2696                           ;Lcd_Write_String@a stored from wreg
  2697  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2698  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2699  04F4  00A2               	movwf	Lcd_Write_String@a
  2700  04F5                     l1928:
  2701                           
  2702                           ;LCD.c: 79:     int i;;LCD.c: 80:     for (i = 0; a[i] != '\0'; i++)
  2703  04F5  01A0               	clrf	Lcd_Write_String@i
  2704  04F6  01A1               	clrf	Lcd_Write_String@i+1
  2705  04F7  2D0D               	goto	l1934
  2706  04F8                     l1930:
  2707                           
  2708                           ;LCD.c: 81:         Lcd_Write_Char(a[i]);
  2709  04F8  0820               	movf	Lcd_Write_String@i,w
  2710  04F9  0722               	addwf	Lcd_Write_String@a,w
  2711  04FA  0084               	movwf	4
  2712  04FB  120A  118A  24B3  120A  118A  	fcall	stringdir
  2713  0500  120A  118A  255E  120A  118A  	fcall	_Lcd_Write_Char
  2714  0505                     l1932:
  2715  0505  3001               	movlw	1
  2716  0506  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0507  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0508  07A0               	addwf	Lcd_Write_String@i,f
  2719  0509  1803               	skipnc
  2720  050A  0AA1               	incf	Lcd_Write_String@i+1,f
  2721  050B  3000               	movlw	0
  2722  050C  07A1               	addwf	Lcd_Write_String@i+1,f
  2723  050D                     l1934:
  2724  050D  0820               	movf	Lcd_Write_String@i,w
  2725  050E  0722               	addwf	Lcd_Write_String@a,w
  2726  050F  0084               	movwf	4
  2727  0510  120A  118A  24B3  120A  118A  	fcall	stringdir
  2728  0515  3A00               	xorlw	0
  2729  0516  1D03               	skipz
  2730  0517  2D19               	goto	u1031
  2731  0518  2D1A               	goto	u1030
  2732  0519                     u1031:
  2733  0519  2CF8               	goto	l1930
  2734  051A                     u1030:
  2735  051A                     l252:
  2736  051A  0008               	return
  2737  051B                     __end_of_Lcd_Write_String:
  2738                           
  2739                           	psect	text10
  2740  055E                     __ptext10:	
  2741 ;; *************** function _Lcd_Write_Char *****************
  2742 ;; Defined at:
  2743 ;;		line 67 in file "LCD.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  a               1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  a               1    5[COMMON] unsigned char 
  2748 ;;  y               1    7[COMMON] unsigned char 
  2749 ;;  temp            1    6[COMMON] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, pclath, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2759 ;;      Params:         0       0       0       0       0
  2760 ;;      Locals:         3       0       0       0       0
  2761 ;;      Temps:          1       0       0       0       0
  2762 ;;      Totals:         4       0       0       0       0
  2763 ;;Total ram usage:        4 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    2
  2766 ;; This function calls:
  2767 ;;		_Lcd_Port
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;;		_Lcd_Write_String
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           
  2775                           ;psect for function _Lcd_Write_Char
  2776  055E                     _Lcd_Write_Char:
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2780                           ;Lcd_Write_Char@a stored from wreg
  2781  055E  00F5               	movwf	Lcd_Write_Char@a
  2782  055F                     l1874:
  2783                           
  2784                           ;LCD.c: 68:     char temp, y;;LCD.c: 69:     temp = a;
  2785  055F  0875               	movf	Lcd_Write_Char@a,w
  2786  0560  00F4               	movwf	??_Lcd_Write_Char
  2787  0561  0874               	movf	??_Lcd_Write_Char,w
  2788  0562  00F6               	movwf	Lcd_Write_Char@temp
  2789                           
  2790                           ;LCD.c: 70:     y = temp;
  2791  0563  0876               	movf	Lcd_Write_Char@temp,w
  2792  0564  00F4               	movwf	??_Lcd_Write_Char
  2793  0565  0874               	movf	??_Lcd_Write_Char,w
  2794  0566  00F7               	movwf	Lcd_Write_Char@y
  2795  0567                     l1876:
  2796                           
  2797                           ;LCD.c: 71:     RE0 = 1;
  2798  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0569  1409               	bsf	9,0	;volatile
  2801  056A                     l1878:
  2802                           
  2803                           ;LCD.c: 72:     Lcd_Port(y);
  2804  056A  0877               	movf	Lcd_Write_Char@y,w
  2805  056B  120A  118A  25C1  120A  118A  	fcall	_Lcd_Port
  2806  0570                     l1880:
  2807                           
  2808                           ;LCD.c: 73:     RE1 = 1;
  2809  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0572  1489               	bsf	9,1	;volatile
  2812  0573                     l1882:
  2813                           
  2814                           ;LCD.c: 74:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2815  0573  300D               	movlw	13
  2816  0574  00F4               	movwf	??_Lcd_Write_Char
  2817  0575                     u1327:
  2818  0575  0BF4               	decfsz	??_Lcd_Write_Char,f
  2819  0576  2D75               	goto	u1327
  2820  0577                     l1884:
  2821                           
  2822                           ;LCD.c: 75:     RE1 = 0;
  2823  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0579  1089               	bcf	9,1	;volatile
  2826  057A                     l246:
  2827  057A  0008               	return
  2828  057B                     __end_of_Lcd_Write_Char:
  2829                           
  2830                           	psect	text11
  2831  038A                     __ptext11:	
  2832 ;; *************** function _Lcd_Set_Cursor *****************
  2833 ;; Defined at:
  2834 ;;		line 33 in file "LCD.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  a               1    wreg     unsigned char 
  2837 ;;  b               1    7[COMMON] unsigned char 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  a               1    2[BANK0 ] unsigned char 
  2840 ;;  temp            1    5[BANK0 ] unsigned char 
  2841 ;;  y               1    4[BANK0 ] unsigned char 
  2842 ;;  z               1    3[BANK0 ] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, pclath, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         1       0       0       0       0
  2853 ;;      Locals:         0       4       0       0       0
  2854 ;;      Temps:          0       2       0       0       0
  2855 ;;      Totals:         1       6       0       0       0
  2856 ;;Total ram usage:        7 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    3
  2859 ;; This function calls:
  2860 ;;		_Lcd_Cmd
  2861 ;; This function is called by:
  2862 ;;		_main
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           
  2867                           ;psect for function _Lcd_Set_Cursor
  2868  038A                     _Lcd_Set_Cursor:
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2872                           ;Lcd_Set_Cursor@a stored from wreg
  2873  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2874  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2875  038C  00A2               	movwf	Lcd_Set_Cursor@a
  2876  038D                     l1908:
  2877                           
  2878                           ;LCD.c: 34:     char temp, z, y;;LCD.c: 35:     if (a == 1) {
  2879  038D  0322               	decf	Lcd_Set_Cursor@a,w
  2880  038E  1D03               	btfss	3,2
  2881  038F  2B91               	goto	u991
  2882  0390  2B92               	goto	u990
  2883  0391                     u991:
  2884  0391  2BB7               	goto	l1918
  2885  0392                     u990:
  2886  0392                     l1910:
  2887                           
  2888                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  2889  0392  0877               	movf	Lcd_Set_Cursor@b,w
  2890  0393  3E7F               	addlw	127
  2891  0394  00A0               	movwf	??_Lcd_Set_Cursor
  2892  0395  0820               	movf	??_Lcd_Set_Cursor,w
  2893  0396  00A5               	movwf	Lcd_Set_Cursor@temp
  2894                           
  2895                           ;LCD.c: 37:         z = temp >> 4;
  2896  0397  0825               	movf	Lcd_Set_Cursor@temp,w
  2897  0398  00A0               	movwf	??_Lcd_Set_Cursor
  2898  0399  3004               	movlw	4
  2899  039A                     u1005:
  2900  039A  1003               	clrc
  2901  039B  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2902  039C  3EFF               	addlw	-1
  2903  039D  1D03               	skipz
  2904  039E  2B9A               	goto	u1005
  2905  039F  0820               	movf	??_Lcd_Set_Cursor,w
  2906  03A0  00A1               	movwf	??_Lcd_Set_Cursor+1
  2907  03A1  0821               	movf	??_Lcd_Set_Cursor+1,w
  2908  03A2  00A3               	movwf	Lcd_Set_Cursor@z
  2909  03A3                     l1912:
  2910                           
  2911                           ;LCD.c: 38:         y = temp & 0x0F;
  2912  03A3  0825               	movf	Lcd_Set_Cursor@temp,w
  2913  03A4  390F               	andlw	15
  2914  03A5  00A0               	movwf	??_Lcd_Set_Cursor
  2915  03A6  0820               	movf	??_Lcd_Set_Cursor,w
  2916  03A7  00A4               	movwf	Lcd_Set_Cursor@y
  2917  03A8                     l1914:
  2918                           
  2919                           ;LCD.c: 39:         Lcd_Cmd(z);
  2920  03A8  0823               	movf	Lcd_Set_Cursor@z,w
  2921  03A9  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  2922  03AE                     l1916:
  2923                           
  2924                           ;LCD.c: 40:         Lcd_Cmd(y);
  2925  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2926  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2927  03B0  0824               	movf	Lcd_Set_Cursor@y,w
  2928  03B1  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  2929                           
  2930                           ;LCD.c: 41:     } else if (a == 2) {
  2931  03B6  2BE1               	goto	l240
  2932  03B7                     l1918:
  2933  03B7  3002               	movlw	2
  2934  03B8  0622               	xorwf	Lcd_Set_Cursor@a,w
  2935  03B9  1D03               	btfss	3,2
  2936  03BA  2BBC               	goto	u1011
  2937  03BB  2BBD               	goto	u1010
  2938  03BC                     u1011:
  2939  03BC  2BE1               	goto	l240
  2940  03BD                     u1010:
  2941  03BD                     l1920:
  2942                           
  2943                           ;LCD.c: 42:         temp = 0xC0 + b - 1;
  2944  03BD  0877               	movf	Lcd_Set_Cursor@b,w
  2945  03BE  3EBF               	addlw	191
  2946  03BF  00A0               	movwf	??_Lcd_Set_Cursor
  2947  03C0  0820               	movf	??_Lcd_Set_Cursor,w
  2948  03C1  00A5               	movwf	Lcd_Set_Cursor@temp
  2949                           
  2950                           ;LCD.c: 43:         z = temp >> 4;
  2951  03C2  0825               	movf	Lcd_Set_Cursor@temp,w
  2952  03C3  00A0               	movwf	??_Lcd_Set_Cursor
  2953  03C4  3004               	movlw	4
  2954  03C5                     u1025:
  2955  03C5  1003               	clrc
  2956  03C6  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2957  03C7  3EFF               	addlw	-1
  2958  03C8  1D03               	skipz
  2959  03C9  2BC5               	goto	u1025
  2960  03CA  0820               	movf	??_Lcd_Set_Cursor,w
  2961  03CB  00A1               	movwf	??_Lcd_Set_Cursor+1
  2962  03CC  0821               	movf	??_Lcd_Set_Cursor+1,w
  2963  03CD  00A3               	movwf	Lcd_Set_Cursor@z
  2964  03CE                     l1922:
  2965                           
  2966                           ;LCD.c: 44:         y = temp & 0xF0;
  2967  03CE  0825               	movf	Lcd_Set_Cursor@temp,w
  2968  03CF  39F0               	andlw	240
  2969  03D0  00A0               	movwf	??_Lcd_Set_Cursor
  2970  03D1  0820               	movf	??_Lcd_Set_Cursor,w
  2971  03D2  00A4               	movwf	Lcd_Set_Cursor@y
  2972  03D3                     l1924:
  2973                           
  2974                           ;LCD.c: 45:         Lcd_Cmd(z);
  2975  03D3  0823               	movf	Lcd_Set_Cursor@z,w
  2976  03D4  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  2977  03D9                     l1926:
  2978                           
  2979                           ;LCD.c: 46:         Lcd_Cmd(y);
  2980  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2981  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2982  03DB  0824               	movf	Lcd_Set_Cursor@y,w
  2983  03DC  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  2984  03E1                     l240:
  2985  03E1  0008               	return
  2986  03E2                     __end_of_Lcd_Set_Cursor:
  2987                           
  2988                           	psect	text12
  2989  03E2                     __ptext12:	
  2990 ;; *************** function _Lcd_Init *****************
  2991 ;; Defined at:
  2992 ;;		line 50 in file "LCD.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3006 ;;      Params:         0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0
  3008 ;;      Temps:          0       2       0       0       0
  3009 ;;      Totals:         0       2       0       0       0
  3010 ;;Total ram usage:        2 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    3
  3013 ;; This function calls:
  3014 ;;		_Lcd_Cmd
  3015 ;;		_Lcd_Port
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           
  3022                           ;psect for function _Lcd_Init
  3023  03E2                     _Lcd_Init:
  3024  03E2                     l1896:	
  3025                           ;incstack = 0
  3026                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3027                           
  3028                           
  3029                           ;LCD.c: 51:     Lcd_Port(0x00);
  3030  03E2  3000               	movlw	0
  3031  03E3  120A  118A  25C1  120A  118A  	fcall	_Lcd_Port
  3032  03E8                     l1898:
  3033                           
  3034                           ;LCD.c: 52:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3035  03E8  301A               	movlw	26
  3036  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3037  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3038  03EB  00A1               	movwf	??_Lcd_Init+1
  3039  03EC  30F7               	movlw	247
  3040  03ED  00A0               	movwf	??_Lcd_Init
  3041  03EE                     u1337:
  3042  03EE  0BA0               	decfsz	??_Lcd_Init,f
  3043  03EF  2BEE               	goto	u1337
  3044  03F0  0BA1               	decfsz	??_Lcd_Init+1,f
  3045  03F1  2BEE               	goto	u1337
  3046  03F2  2BF3               	nop2
  3047  03F3                     l1900:
  3048                           
  3049                           ;LCD.c: 53:     Lcd_Cmd(0x30);
  3050  03F3  3030               	movlw	48
  3051  03F4  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3052                           
  3053                           ;LCD.c: 54:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3054  03F9  3007               	movlw	7
  3055  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3056  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3057  03FC  00A1               	movwf	??_Lcd_Init+1
  3058  03FD  307C               	movlw	124
  3059  03FE  00A0               	movwf	??_Lcd_Init
  3060  03FF                     u1347:
  3061  03FF  0BA0               	decfsz	??_Lcd_Init,f
  3062  0400  2BFF               	goto	u1347
  3063  0401  0BA1               	decfsz	??_Lcd_Init+1,f
  3064  0402  2BFF               	goto	u1347
  3065  0403  0000               	nop
  3066  0404                     l1902:
  3067                           
  3068                           ;LCD.c: 55:     Lcd_Cmd(0x30);
  3069  0404  3030               	movlw	48
  3070  0405  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3071  040A                     l1904:
  3072                           
  3073                           ;LCD.c: 56:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  3074  040A  3041               	movlw	65
  3075  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3076  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3077  040D  00A0               	movwf	??_Lcd_Init
  3078  040E                     u1357:
  3079  040E  0BA0               	decfsz	??_Lcd_Init,f
  3080  040F  2C0E               	goto	u1357
  3081  0410  2C11               	nop2
  3082                           
  3083                           ;LCD.c: 57:     Lcd_Cmd(0x30);
  3084  0411  3030               	movlw	48
  3085  0412  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3086                           
  3087                           ;LCD.c: 58:     Lcd_Cmd(0x3C);
  3088  0417  303C               	movlw	60
  3089  0418  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3090                           
  3091                           ;LCD.c: 60:     Lcd_Cmd(0x08);
  3092  041D  3008               	movlw	8
  3093  041E  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3094                           
  3095                           ;LCD.c: 62:     Lcd_Cmd(0x01);
  3096  0423  3001               	movlw	1
  3097  0424  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3098                           
  3099                           ;LCD.c: 64:     Lcd_Cmd(0x06);
  3100  0429  3006               	movlw	6
  3101  042A  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3102  042F                     l243:
  3103  042F  0008               	return
  3104  0430                     __end_of_Lcd_Init:
  3105                           
  3106                           	psect	text13
  3107  05AA                     __ptext13:	
  3108 ;; *************** function _Lcd_Clear *****************
  3109 ;; Defined at:
  3110 ;;		line 28 in file "LCD.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, pclath, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         0       0       0       0       0
  3125 ;;      Locals:         0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0
  3127 ;;      Totals:         0       0       0       0       0
  3128 ;;Total ram usage:        0 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    3
  3131 ;; This function calls:
  3132 ;;		_Lcd_Cmd
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           
  3139                           ;psect for function _Lcd_Clear
  3140  05AA                     _Lcd_Clear:
  3141  05AA                     l1906:	
  3142                           ;incstack = 0
  3143                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3144                           
  3145                           
  3146                           ;LCD.c: 29:     Lcd_Cmd(0);
  3147  05AA  3000               	movlw	0
  3148  05AB  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3149                           
  3150                           ;LCD.c: 30:     Lcd_Cmd(1);
  3151  05B0  3001               	movlw	1
  3152  05B1  120A  118A  257B  120A  118A  	fcall	_Lcd_Cmd
  3153  05B6                     l234:
  3154  05B6  0008               	return
  3155  05B7                     __end_of_Lcd_Clear:
  3156                           
  3157                           	psect	text14
  3158  057B                     __ptext14:	
  3159 ;; *************** function _Lcd_Cmd *****************
  3160 ;; Defined at:
  3161 ;;		line 20 in file "LCD.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  a               1    wreg     unsigned char 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  a               1    6[COMMON] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3175 ;;      Params:         0       0       0       0       0
  3176 ;;      Locals:         1       0       0       0       0
  3177 ;;      Temps:          2       0       0       0       0
  3178 ;;      Totals:         3       0       0       0       0
  3179 ;;Total ram usage:        3 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    2
  3182 ;; This function calls:
  3183 ;;		_Lcd_Port
  3184 ;; This function is called by:
  3185 ;;		_Lcd_Clear
  3186 ;;		_Lcd_Set_Cursor
  3187 ;;		_Lcd_Init
  3188 ;;		_Lcd_Shift_Right
  3189 ;;		_Lcd_Shift_Left
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function _Lcd_Cmd
  3195  057B                     _Lcd_Cmd:
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3199                           ;Lcd_Cmd@a stored from wreg
  3200  057B  00F6               	movwf	Lcd_Cmd@a
  3201  057C                     l1886:
  3202                           
  3203                           ;LCD.c: 21:     RE0 = 0;
  3204  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3205  057D  1303               	bcf	3,6	;RP1=0, select bank0
  3206  057E  1009               	bcf	9,0	;volatile
  3207  057F                     l1888:
  3208                           
  3209                           ;LCD.c: 22:     Lcd_Port(a);
  3210  057F  0876               	movf	Lcd_Cmd@a,w
  3211  0580  120A  118A  25C1  120A  118A  	fcall	_Lcd_Port
  3212  0585                     l1890:
  3213                           
  3214                           ;LCD.c: 23:     RE1 = 1;
  3215  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0587  1489               	bsf	9,1	;volatile
  3218  0588                     l1892:
  3219                           
  3220                           ;LCD.c: 24:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3221  0588  3006               	movlw	6
  3222  0589  00F5               	movwf	??_Lcd_Cmd+1
  3223  058A  3030               	movlw	48
  3224  058B  00F4               	movwf	??_Lcd_Cmd
  3225  058C                     u1367:
  3226  058C  0BF4               	decfsz	??_Lcd_Cmd,f
  3227  058D  2D8C               	goto	u1367
  3228  058E  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3229  058F  2D8C               	goto	u1367
  3230  0590  0000               	nop
  3231  0591                     l1894:
  3232                           
  3233                           ;LCD.c: 25:     RE1 = 0;
  3234  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0592  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0593  1089               	bcf	9,1	;volatile
  3237  0594                     l231:
  3238  0594  0008               	return
  3239  0595                     __end_of_Lcd_Cmd:
  3240                           
  3241                           	psect	text15
  3242  05C1                     __ptext15:	
  3243 ;; *************** function _Lcd_Port *****************
  3244 ;; Defined at:
  3245 ;;		line 16 in file "LCD.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  a               1    wreg     unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  a               1    3[COMMON] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3259 ;;      Params:         0       0       0       0       0
  3260 ;;      Locals:         1       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0
  3262 ;;      Totals:         1       0       0       0       0
  3263 ;;Total ram usage:        1 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_Lcd_Cmd
  3270 ;;		_Lcd_Init
  3271 ;;		_Lcd_Write_Char
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _Lcd_Port
  3277  05C1                     _Lcd_Port:
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in _Lcd_Port: [wreg]
  3281                           ;Lcd_Port@a stored from wreg
  3282  05C1  00F3               	movwf	Lcd_Port@a
  3283  05C2                     l1872:
  3284                           
  3285                           ;LCD.c: 17:     PORTD = a;
  3286  05C2  0873               	movf	Lcd_Port@a,w
  3287  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3288  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3289  05C5  0088               	movwf	8	;volatile
  3290  05C6                     l228:
  3291  05C6  0008               	return
  3292  05C7                     __end_of_Lcd_Port:
  3293                           
  3294                           	psect	text16
  3295  0473                     __ptext16:	
  3296 ;; *************** function _isr *****************
  3297 ;; Defined at:
  3298 ;;		line 70 in file "Lab02.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3312 ;;      Params:         0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0
  3314 ;;      Temps:          3       0       0       0       0
  3315 ;;      Totals:         3       0       0       0       0
  3316 ;;Total ram usage:        3 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		Interrupt level 1
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _isr
  3327  0473                     _isr:
  3328  0473                     i1l1720:
  3329                           
  3330                           ;Lab02.c: 71:     if (T0IF==1){
  3331  0473  1D0B               	btfss	11,2	;volatile
  3332  0474  2C76               	goto	u83_21
  3333  0475  2C77               	goto	u83_20
  3334  0476                     u83_21:
  3335  0476  2C78               	goto	i1l180
  3336  0477                     u83_20:
  3337  0477                     i1l1722:
  3338                           
  3339                           ;Lab02.c: 72:     INTCONbits.T0IF = 0;
  3340  0477  110B               	bcf	11,2	;volatile
  3341  0478                     i1l180:	
  3342                           ;Lab02.c: 73:     }
  3343                           
  3344                           
  3345                           ;Lab02.c: 75:     if(PIR1bits.ADIF == 1){
  3346  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3348  047A  1F0C               	btfss	12,6	;volatile
  3349  047B  2C7D               	goto	u84_21
  3350  047C  2C7E               	goto	u84_20
  3351  047D                     u84_21:
  3352  047D  2C91               	goto	i1l1732
  3353  047E                     u84_20:
  3354  047E                     i1l1724:
  3355                           
  3356                           ;Lab02.c: 76:         if(ADCON0bits.CHS == 0){
  3357  047E  0C1F               	rrf	31,w	;volatile
  3358  047F  00F0               	movwf	??_isr
  3359  0480  0C70               	rrf	??_isr,w
  3360  0481  390F               	andlw	15
  3361  0482  3A00               	xorlw	0
  3362  0483  1D03               	skipz
  3363  0484  2C86               	goto	u85_21
  3364  0485  2C87               	goto	u85_20
  3365  0486                     u85_21:
  3366  0486  2C8C               	goto	i1l1728
  3367  0487                     u85_20:
  3368  0487                     i1l1726:
  3369                           
  3370                           ;Lab02.c: 77:             VAL1 = ADRESH;
  3371  0487  081E               	movf	30,w	;volatile
  3372  0488  00F0               	movwf	??_isr
  3373  0489  0870               	movf	??_isr,w
  3374  048A  00AC               	movwf	_VAL1
  3375                           
  3376                           ;Lab02.c: 78:         }
  3377  048B  2C90               	goto	i1l1730
  3378  048C                     i1l1728:
  3379                           
  3380                           ;Lab02.c: 80:             VAL2 = ADRESH;
  3381  048C  081E               	movf	30,w	;volatile
  3382  048D  00F0               	movwf	??_isr
  3383  048E  0870               	movf	??_isr,w
  3384  048F  00AB               	movwf	_VAL2
  3385  0490                     i1l1730:
  3386                           
  3387                           ;Lab02.c: 82:         PIR1bits.ADIF = 0;
  3388  0490  130C               	bcf	12,6	;volatile
  3389  0491                     i1l1732:
  3390                           
  3391                           ;Lab02.c: 85:     if(PIR1bits.RCIF == 1){
  3392  0491  1E8C               	btfss	12,5	;volatile
  3393  0492  2C94               	goto	u86_21
  3394  0493  2C95               	goto	u86_20
  3395  0494                     u86_21:
  3396  0494  2CAC               	goto	i1l187
  3397  0495                     u86_20:
  3398  0495                     i1l1734:
  3399                           
  3400                           ;Lab02.c: 86:         RXREC = RCREG;
  3401  0495  081A               	movf	26,w	;volatile
  3402  0496  00F0               	movwf	??_isr
  3403  0497  0870               	movf	??_isr,w
  3404  0498  00AD               	movwf	_RXREC
  3405  0499                     i1l1736:
  3406                           
  3407                           ;Lab02.c: 87:         if (RXREC == 43){
  3408  0499  302B               	movlw	43
  3409  049A  062D               	xorwf	_RXREC,w
  3410  049B  1D03               	btfss	3,2
  3411  049C  2C9E               	goto	u87_21
  3412  049D  2C9F               	goto	u87_20
  3413  049E                     u87_21:
  3414  049E  2CA3               	goto	i1l185
  3415  049F                     u87_20:
  3416  049F                     i1l1738:
  3417                           
  3418                           ;Lab02.c: 88:             CONTADOR++;
  3419  049F  3001               	movlw	1
  3420  04A0  00F0               	movwf	??_isr
  3421  04A1  0870               	movf	??_isr,w
  3422  04A2  07AF               	addwf	_CONTADOR,f
  3423  04A3                     i1l185:	
  3424                           ;Lab02.c: 89:         }
  3425                           
  3426                           
  3427                           ;Lab02.c: 90:         if (RXREC == 45){
  3428  04A3  302D               	movlw	45
  3429  04A4  062D               	xorwf	_RXREC,w
  3430  04A5  1D03               	btfss	3,2
  3431  04A6  2CA8               	goto	u88_21
  3432  04A7  2CA9               	goto	u88_20
  3433  04A8                     u88_21:
  3434  04A8  2CAB               	goto	i1l1742
  3435  04A9                     u88_20:
  3436  04A9                     i1l1740:
  3437                           
  3438                           ;Lab02.c: 91:             CONTADOR--;
  3439  04A9  3001               	movlw	1
  3440  04AA  02AF               	subwf	_CONTADOR,f
  3441  04AB                     i1l1742:
  3442                           
  3443                           ;Lab02.c: 93:         PIR1bits.RCIF = 0;
  3444  04AB  128C               	bcf	12,5	;volatile
  3445  04AC                     i1l187:
  3446  04AC  0872               	movf	??_isr+2,w
  3447  04AD  008A               	movwf	10
  3448  04AE  0E71               	swapf	??_isr+1,w
  3449  04AF  0083               	movwf	3
  3450  04B0  0EFE               	swapf	btemp,f
  3451  04B1  0E7E               	swapf	btemp,w
  3452  04B2  0009               	retfie
  3453  04B3                     __end_of_isr:
  3454  007E                     btemp	set	126	;btemp
  3455  007E                     wtemp0	set	126
  3456                           
  3457                           	psect	intentry
  3458  0004                     __pintentry:	
  3459                           ;incstack = 0
  3460                           ; Regs used in _isr: [wreg+status,2+status,0]
  3461                           
  3462  0004                     interrupt_function:
  3463  007E                     saved_w	set	btemp
  3464  0004  00FE               	movwf	btemp
  3465  0005  0E03               	swapf	3,w
  3466  0006  00F1               	movwf	??_isr+1
  3467  0007  080A               	movf	10,w
  3468  0008  00F2               	movwf	??_isr+2
  3469  0009  120A  118A  2C73   	ljmp	_isr
  3470                           
  3471                           	psect	config
  3472                           
  3473                           ;Config register CONFIG1 @ 0x2007
  3474                           ;	Oscillator Selection bits
  3475                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3476                           ;	Watchdog Timer Enable bit
  3477                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3478                           ;	Power-up Timer Enable bit
  3479                           ;	PWRTE = OFF, PWRT disabled
  3480                           ;	RE3/MCLR pin function select bit
  3481                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3482                           ;	Code Protection bit
  3483                           ;	CP = OFF, Program memory code protection is disabled
  3484                           ;	Data Code Protection bit
  3485                           ;	CPD = OFF, Data memory code protection is disabled
  3486                           ;	Brown Out Reset Selection bits
  3487                           ;	BOREN = OFF, BOR disabled
  3488                           ;	Internal External Switchover bit
  3489                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3490                           ;	Fail-Safe Clock Monitor Enabled bit
  3491                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3492                           ;	Low Voltage Programming Enable bit
  3493                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3494                           ;	In-Circuit Debugger Mode bit
  3495                           ;	DEBUG = 0x1, unprogrammed default
  3496  2007                     	org	8199
  3497  2007  20D4               	dw	8404
  3498                           
  3499                           ;Config register CONFIG2 @ 0x2008
  3500                           ;	Brown-out Reset Selection bit
  3501                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3502                           ;	Flash Program Memory Self Write Enable bits
  3503                           ;	WRT = OFF, Write protection off
  3504  2008                     	org	8200
  3505  2008  3FFF               	dw	16383

Data Sizes:
    Strings     57
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     11      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_7(CODE[18]), STR_4(CODE[18]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_8(CODE[3]), STR_6(CODE[3]), STR_5(CODE[2]), STR_3(CODE[3]), 
		 -> STR_2(CODE[2]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _main->_printf
    _setup->_initAN
    _printf->_putch
    _decimal->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_decimal
    _decimal->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2998
                                              9 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _chselect
                            _decimal
                             _printf
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     142
                             _initAN
 ---------------------------------------------------------------------------------
 (2) _initAN                                               3     2      1     142
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    16      0     134
                                              4 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decimal                                              5     5      0    1043
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _chselect                                             4     4      0     286
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     476
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _chselect
   _decimal
     ___awdiv
     ___bmul
   _printf
     _putch
   _setup
     _initAN

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 17:23:48 2021

                        pc 0002             ___bmul@product 0075                         l91 053E  
             ___awdiv@sign 0021                         _un 007A                         fsr 0004  
                      l200 015E                        l201 0170                        l202 0182  
                      l211 0389                        l214 05B8                        l231 0594  
                      l240 03E1                        l208 0472                        l137 02B9  
                      l217 05C0                        l234 05B6                        l243 042F  
                      l228 05C6                        l252 051A                        l246 057A  
                      l350 055D                        l194 00A6                        l507 0322  
                      l195 00B8                        l380 05A9                        l196 00CA  
                      l197 00DC                        l199 014C                        _RE0 0048  
                      _RE1 0049                        u500 05BE                        u501 05BD  
                      u510 059B                        u511 059A                        u520 05A8  
                      u521 05A7                        u610 0314                        u530 02C1  
                      u611 0313                        u531 02C0                        u700 021B  
                      u620 0319                        u540 02CC                        u701 021A  
                      u621 0318                        u605 0308                        u541 02CB  
                      u710 0229                        u630 01C1                        u550 02DD  
                      u711 0228                        u631 01C0                        u551 02DC  
                      u720 0237                        u640 01C7                        u721 0236  
                      u641 01C6                        u730 0245                        u650 01D5  
                      u570 02EF                        u731 0244                        u651 01D4  
                      u571 02EE                        u740 0253                        u660 01E3  
                      u820 055D                        u741 0252                        u661 01E2  
                      u565 02E1                        u821 055C                        u750 0261  
                      u670 01F1                        u590 0300                        u751 0260  
                      u671 01F0                        u591 02FF                        u760 026F  
                      u680 01FF                        u761 026E                        u681 01FE  
                      u585 02F0                        u690 020D                        u691 020C  
                      u595 02FC                        u990 0392                        u991 0391  
                      _dec 0079                        _cen 0078                        _isr 0473  
                      fsr0 0004                       l2000 00FA                       l2010 0125  
                     l2002 0100                       l2020 014A                       l2012 012B  
                     l2004 0106                       l2030 017A                       l2022 0156  
                     l2014 0136                       l2006 0114                       l1400 0525  
                     l2040 01A0                       l2032 0180                       l2024 015C  
                     l2008 011A                       l2016 013A                       l1410 053B  
                     l1402 0529                       l2042 01A6                       l2034 018C  
                     l2026 0168                       l2018 0144                       l1500 01BB  
                     l1412 053C                       l1404 052D                       l2044 01AC  
                     l2036 0194                       l2028 016E                       l1510 01CF  
                     l1430 05BE                       l1414 053D                       l1406 0530  
                     l2038 019A                       l2080 0285                       l1520 01E6  
                     l1512 01D5                       l1504 01C2                       l1408 0534  
                     l1600 0433                       l1530 01FF                       l1522 01EB  
                     l1514 01D8                       l1506 01C7                       l1450 05A1  
                     l1442 0596                       l1610 044B                       l1602 0435  
                     l1540 0215                       l1532 0202                       l1524 01F1  
                     l1516 01DD                       l1508 01CA                       l1460 02C1  
                     l1452 05A8                       l1444 0597                       l1428 05B8  
                     l1620 0453                       l1612 044E                       l1604 0439  
                     l1550 022C                       l1542 021B                       l1534 0207  
                     l1526 01F4                       l1518 01E3                       l1470 02D5  
                     l1462 02C6                       l1446 059B                       l1630 0458  
                     l1622 0454                       l1614 044F                       l1606 043A  
                     l1560 0245                       l1552 0231                       l1544 021E  
                     l1536 020D                       l1528 01F9                       l1480 02EB  
                     l1472 02D7                       l1464 02C8                       l1456 02BA  
                     l1448 059F                       l1640 0461                       l1632 045B  
                     l1624 0455                       l1616 0450                       l1608 0444  
                     l1570 025B                       l1562 0248                       l1554 0237  
                     l1546 0223                       l1538 0210                       l1490 030E  
                     l1482 02EF                       l1474 02DD                       l1466 02CC  
                     l1458 02BD                       l1714 0540                       l1394 051C  
                     l1650 0468                       l1642 0462                       l1634 045C  
                     l1626 0456                       l1618 0451                       l1900 03F3  
                     l1580 0272                       l1572 0261                       l1564 024D  
                     l1556 023A                       l1548 0229                       l1484 0300  
                     l1476 02E0                       l1492 0314                       l1468 02D1  
                     l1716 0545                       l1396 0520                       l1652 0469  
                     l1644 0463                       l1636 045F                       l1628 0457  
                     l1902 0404                       l1910 0392                       l1590 02B6  
                     l1582 0277                       l1574 0264                       l1566 0253  
                     l1558 023F                       l1494 0319                       l1486 0306  
                     l1478 02E7                       l1718 054B                       l1398 0521  
                     l1654 046C                       l1646 0464                       l1638 0460  
                     l1904 040A                       l1920 03BD                       l1912 03A3  
                     l1576 0269                       l1568 0256                       l1496 031E  
                     l1488 0307                       l1656 0470                       l1648 0467  
                     l1906 05AA                       l1922 03CE                       l1914 03A8  
                     l1930 04F8                       l1578 026F                       l1586 027A  
                     l1924 03D3                       l1916 03AE                       l1908 038D  
                     l1932 0505                       l1588 02B1                       l1940 0340  
                     l1926 03D9                       l1918 03B7                       l1934 050D  
                     l1950 0384                       l1942 0350                       l1598 0430  
                     l1872 05C2                       l1880 0570                       l1928 04F5  
                     l1944 0366                       l1936 0326                       l1960 005C  
                     l1952 001D                       l1890 0585                       l1882 0573  
                     l1874 055F                       l1946 037A                       l1938 032A  
                     l1970 007F                       l1962 0062                       l1954 0034  
                     l1892 0588                       l1884 0577                       l1876 0567  
                     l1948 037F                       l1980 00A4                       l1972 0085  
                     l1964 0068                       l1956 003A                       l1894 0591  
                     l1886 057C                       l1878 056A                       l1990 00D4  
                     l1982 00B0                       l1974 0090                       l1966 006E  
                     l1958 0056                       l1888 057F                       l1896 03E2  
                     l1992 00DA                       l1984 00B6                       l1968 0074  
                     l1976 0094                       l1898 03E8                       l1994 00E6  
                     l1986 00C2                       l1978 009E                       l1996 00EE  
                     l1988 00C8                       l1998 00F4                       ?_isr 0070  
                     STR_1 04DD                       STR_2 04F0                       STR_3 04ED  
                     STR_4 04B9                       STR_5 04F0                       STR_6 04ED  
                     STR_7 04CB                       STR_8 04ED                       _T0IF 005A  
                     u1010 03BD                       u1011 03BC                       u1100 014A  
                     u1005 039A                       u1101 0149                       u1030 051A  
                     u1110 015C                       u1031 0519                       u1111 015B  
                     u1120 016E                       u1040 0074                       u1025 03C5  
                     u1121 016D                       u1041 0073                       u1130 0180  
                     u1050 00A4                       u1131 017F                       u1051 00A3  
                     u1060 00B6                       u1061 00B5                       u1070 00C8  
                     u1207 00E2                       u1071 00C7                       u1080 00DA  
                     u1217 0110                       u1081 00D9                       u1090 011A  
                     u1307 052B                       u1227 0120                       u1091 0119  
                     u1147 007A                       u1317 02B3                       u1237 0131  
                     u1157 008B                       u1327 0575                       u1247 0140  
                     u1167 009A                       u1337 03EE                       u1257 0152  
                     u1177 00AC                       u1347 03FF                       u1267 0164  
                     u1187 00BE                       u1357 040E                       u1277 0176  
                     u1197 00D0                       u1367 058C                       u1287 0188  
                     u1297 01B2                       _VAL1 002C                       _VAL2 002B  
                     _TXIF 0064          ?_Lcd_Write_String 0070                       _main 001D  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0078  
          __end_of_Lcd_Cmd 0595          ___bmul@multiplier 0076                      ??_isr 0070  
                    ?_main 0070            __end_of___awdiv 0323                      _ANSEL 0188  
          ___awdiv@divisor 0073                      i1l180 0478                      i1l185 04A3  
                    i1l187 04AC            ___awdiv@counter 0020                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISD 0088  
                    _TRISE 0089                      u83_20 0477                      u83_21 0476  
                    u84_20 047E                      u84_21 047D                      _RXREC 002D  
                    u85_20 0487                      u85_21 0486                      u86_20 0495  
                    u86_21 0494                      _VUART 002E            __end_of_decimal 038A  
                    u87_20 049F                      u87_21 049E                      u88_20 04A9  
                    u88_21 04A8                      _TXREG 0019                      _setup 0430  
                    _putch 05B7                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0430           __end_of_Lcd_Port 05C7  
          __initialization 000F               __end_of_main 01BA                     ??_main 0029  
       __size_of_Lcd_Clear 000D                     _ADRESH 001E           ___awdiv@dividend 0075  
                   ?_setup 0070                     ?_putch 0070                     _ANSELH 0189  
                   i1l1720 0473                     i1l1730 0490                     i1l1722 0477  
                   i1l1740 04A9                     i1l1724 047E                     i1l1732 0491  
                   i1l1742 04AB                     i1l1734 0495                     i1l1726 0487  
                   i1l1736 0499                     i1l1728 048C                     i1l1738 049F  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 001D  
         __end_of_chselect 02BA                     ___bmul 0595                  ??___awdiv 0077  
                   _initAN 051B                  ??_decimal 0024           ___awdiv@quotient 0022  
                   _printf 053F                     saved_w 007E            Lcd_Set_Cursor@a 0022  
          Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 0024            Lcd_Set_Cursor@z 0023  
  __end_of__initialization 0019          __end_of_Lcd_Clear 05B7        ___bmul@multiplicand 0073  
           __pcstackCOMMON 0070              __end_of_setup 0473              __end_of_putch 05C1  
           _Lcd_Set_Cursor 038A                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0076                    ??_putch 0073                 __pbssBANK0 002B  
               __pmaintext 001D                    ?___bmul 0073                 __pintentry 0004  
                  ?_initAN 0073  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 03E2  
                  ?_printf 0070                 ??_Lcd_Init 0020                  ?_chselect 0070  
               ??_Lcd_Port 0073                 __stringtab 04B3             _Lcd_Write_Char 055E  
                  _Lcd_Cmd 057B                 decimal@VAL 0028            __size_of___bmul 0015  
                  ___awdiv 02BA                 decimal@var 0027            __size_of_initAN 0024  
                  _decimal 0323            ?_Lcd_Set_Cursor 0077                    __ptext1 0430  
                  __ptext2 051B                    __ptext3 053F                    __ptext4 05B7  
                  __ptext5 0323                    __ptext6 0595                    __ptext7 02BA  
                  __ptext8 01BA                    __ptext9 04F2            __size_of_printf 001F  
             __size_of_isr 0040                 ??_chselect 0073     __end_of_Lcd_Write_Char 057B  
     end_of_initialization 0019                  _RCSTAbits 0018                    printf@c 0076  
                  printf@f 0077                  Lcd_Port@a 0073                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022          Lcd_Write_String@i 0020  
                _TXSTAbits 0098                  _Lcd_Clear 05AA             __end_of___bmul 05AA  
         _Lcd_Write_String 04F2                _BAUDCTLbits 0187             __end_of_initAN 053F  
               initAN@just 0073             __end_of_printf 055E        start_initialization 000F  
              __end_of_isr 04B3          __size_of_Lcd_Init 004E          __size_of_Lcd_Port 0006  
               ?_Lcd_Clear 0070                   ??___bmul 0074                   ??_initAN 0074  
          Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0077                   ??_printf 0074  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of_chselect 0100                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0020  
                 ?___awdiv 0073                   ?_decimal 0070                  __pstrings 04B3  
                 _CONTADOR 002F             __size_of_setup 0043             __size_of_putch 000A  
        interrupt_function 0004                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                ??_Lcd_Clear 0077                 _ADCON0bits 001F  
              __stringbase 04B8                 _ADCON1bits 009F           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 03E2                   _Lcd_Port 05C1                  initAN@bin 0075  
 __end_of_Lcd_Write_String 051B           __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069  
       __end_of__stringtab 04B9           __size_of_decimal 0067                   _chselect 01BA  
                 __ptext10 055E                   __ptext11 038A                   __ptext12 03E2  
                 __ptext13 05AA                   __ptext14 057B                   __ptext15 05C1  
                 __ptext16 0473              __size_of_main 019D                  putch@info 0073  
               _INTCONbits 000B               chselect@cant 0076         Lcd_Write_Char@temp 0076  
                 intlevel1 0000                  stringcode 04B3                 _OSCCONbits 008F  
                 printf@ap 0075         Lcd_Set_Cursor@temp 0025                 _OPTION_REG 0081  
                 stringdir 04B3                   stringtab 04B3  
