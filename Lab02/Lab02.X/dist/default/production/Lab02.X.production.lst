

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 22:38:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0018                     _RCSTAbits	set	24
   300  0009                     _PORTE	set	9
   301  0008                     _PORTD	set	8
   302  0007                     _PORTC	set	7
   303  0006                     _PORTB	set	6
   304  0005                     _PORTA	set	5
   305  0019                     _TXREG	set	25
   306  001A                     _RCREG	set	26
   307  001E                     _ADRESH	set	30
   308  000C                     _PIR1bits	set	12
   309  000B                     _INTCONbits	set	11
   310  001F                     _ADCON0bits	set	31
   311  0049                     _RE1	set	73
   312  0048                     _RE0	set	72
   313  0064                     _TXIF	set	100
   314  005A                     _T0IF	set	90
   315  009A                     _SPBRGH	set	154
   316  0099                     _SPBRG	set	153
   317  0098                     _TXSTAbits	set	152
   318  0081                     _OPTION_REG	set	129
   319  0089                     _TRISE	set	137
   320  0088                     _TRISD	set	136
   321  0087                     _TRISCbits	set	135
   322  008C                     _PIE1bits	set	140
   323  009F                     _ADCON1bits	set	159
   324  0085                     _TRISA	set	133
   325  008F                     _OSCCONbits	set	143
   326  0187                     _BAUDCTLbits	set	391
   327  0189                     _ANSELH	set	393
   328  0188                     _ANSEL	set	392
   329                           
   330                           	psect	strings
   331  046C                     __pstrings:
   332  046C                     stringtab:
   333  046C                     __stringtab:
   334  046C                     stringcode:	
   335                           ;	String table - string pointers are 1 byte each
   336                           
   337  046C                     stringdir:
   338  046C  3004               	movlw	high stringdir
   339  046D  008A               	movwf	10
   340  046E  0804               	movf	4,w
   341  046F  0A84               	incf	4,f
   342  0470  0782               	addwf	2,f
   343  0471                     __stringbase:
   344  0471  3400               	retlw	0
   345  0472                     __end_of__stringtab:
   346  0472                     STR_3:
   347  0472  3456               	retlw	86	;'V'
   348  0473  3441               	retlw	65	;'A'
   349  0474  344C               	retlw	76	;'L'
   350  0475  344F               	retlw	79	;'O'
   351  0476  3452               	retlw	82	;'R'
   352  0477  3420               	retlw	32	;' '
   353  0478  3444               	retlw	68	;'D'
   354  0479  3445               	retlw	69	;'E'
   355  047A  3420               	retlw	32	;' '
   356  047B  3450               	retlw	80	;'P'
   357  047C  344F               	retlw	79	;'O'
   358  047D  3454               	retlw	84	;'T'
   359  047E  3420               	retlw	32	;' '
   360  047F  3431               	retlw	49	;'1'
   361  0480  343A               	retlw	58	;':'
   362  0481  3420               	retlw	32	;' '
   363  0482  340D               	retlw	13
   364  0483  3400               	retlw	0
   365  0484                     STR_4:
   366  0484  3456               	retlw	86	;'V'
   367  0485  3441               	retlw	65	;'A'
   368  0486  344C               	retlw	76	;'L'
   369  0487  344F               	retlw	79	;'O'
   370  0488  3452               	retlw	82	;'R'
   371  0489  3420               	retlw	32	;' '
   372  048A  3444               	retlw	68	;'D'
   373  048B  3445               	retlw	69	;'E'
   374  048C  3420               	retlw	32	;' '
   375  048D  3450               	retlw	80	;'P'
   376  048E  344F               	retlw	79	;'O'
   377  048F  3454               	retlw	84	;'T'
   378  0490  3420               	retlw	32	;' '
   379  0491  3432               	retlw	50	;'2'
   380  0492  343A               	retlw	58	;':'
   381  0493  3420               	retlw	32	;' '
   382  0494  340D               	retlw	13
   383  0495  3400               	retlw	0
   384  0496                     STR_1:
   385  0496  3453               	retlw	83	;'S'
   386  0497  3431               	retlw	49	;'1'
   387  0498  343A               	retlw	58	;':'
   388  0499  3420               	retlw	32	;' '
   389  049A  3420               	retlw	32	;' '
   390  049B  3420               	retlw	32	;' '
   391  049C  3453               	retlw	83	;'S'
   392  049D  3432               	retlw	50	;'2'
   393  049E  343A               	retlw	58	;':'
   394  049F  3420               	retlw	32	;' '
   395  04A0  3420               	retlw	32	;' '
   396  04A1  3420               	retlw	32	;' '
   397  04A2  3453               	retlw	83	;'S'
   398  04A3  3433               	retlw	51	;'3'
   399  04A4  343A               	retlw	58	;':'
   400  04A5  3400               	retlw	0
   401  04A6                     STR_2:
   402  04A6  3420               	retlw	32	;' '
   403  04A7  3420               	retlw	32	;' '
   404  04A8  3420               	retlw	32	;' '
   405  04A9  3400               	retlw	0
   406  04AA                     STR_5:
   407  04AA  342E               	retlw	46	;'.'
   408  04AB  3400               	retlw	0
   409                           
   410                           	psect	cinit
   411  000F                     start_initialization:	
   412                           ; #config settings
   413                           
   414  000F                     __initialization:
   415                           
   416                           ; Clear objects allocated to COMMON
   417  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   418  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   419  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   420                           
   421                           ; Clear objects allocated to BANK0
   422  0012  1283               	bcf	3,5	;RP0=0, select bank0
   423  0013  1303               	bcf	3,6	;RP1=0, select bank0
   424  0014  01A0               	clrf	__pbssBANK0& (0+127)
   425  0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   426  0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   427  0017  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   428  0018  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   429  0019  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   430  001A  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   431  001B  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   432  001C  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   433  001D  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   434  001E  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   435  001F                     end_of_initialization:	
   436                           ;End of C runtime variable initialization code
   437                           
   438  001F                     __end_of__initialization:
   439  001F  0183               	clrf	3
   440  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   441                           
   442                           	psect	bssCOMMON
   443  0078                     __pbssCOMMON:
   444  0078                     _cen:
   445  0078                     	ds	1
   446  0079                     _dec:
   447  0079                     	ds	1
   448  007A                     _un:
   449  007A                     	ds	1
   450                           
   451                           	psect	bssBANK0
   452  0020                     __pbssBANK0:
   453  0020                     _VAL2:
   454  0020                     	ds	1
   455  0021                     _VAL1:
   456  0021                     	ds	1
   457  0022                     _RXREC:
   458  0022                     	ds	1
   459  0023                     _VUART:
   460  0023                     	ds	1
   461  0024                     _tempo1:
   462  0024                     	ds	1
   463  0025                     _disp1:
   464  0025                     	ds	1
   465  0026                     _disp0:
   466  0026                     	ds	1
   467  0027                     _contador:
   468  0027                     	ds	1
   469  0028                     _start:
   470  0028                     	ds	1
   471  0029                     _startfinal:
   472  0029                     	ds	1
   473  002A                     _FLAG:
   474  002A                     	ds	1
   475                           
   476                           	psect	cstackCOMMON
   477  0070                     __pcstackCOMMON:
   478  0070                     ?_setup:
   479  0070                     ?_Lcd_Init:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_Lcd_Clear:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_Lcd_Write_String:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_decimal:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_Lcd_Write_Char:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_chselect:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_isr:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ??_isr:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_main:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_putch:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_Lcd_Port:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_Lcd_Cmd:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_printf:	
   516                           ; 1 bytes @ 0x0
   517                           
   518                           
   519                           ; 2 bytes @ 0x0
   520  0070                     	ds	3
   521  0073                     ?_initAN:
   522  0073                     ??_chselect:	
   523                           ; 1 bytes @ 0x3
   524                           
   525  0073                     ??_putch:	
   526                           ; 1 bytes @ 0x3
   527                           
   528  0073                     ??_Lcd_Port:	
   529                           ; 1 bytes @ 0x3
   530                           
   531  0073                     ?___bmul:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     ?___awdiv:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0073                     initAN@just:	
   538                           ; 2 bytes @ 0x3
   539                           
   540  0073                     putch@info:	
   541                           ; 1 bytes @ 0x3
   542                           
   543  0073                     Lcd_Port@a:	
   544                           ; 1 bytes @ 0x3
   545                           
   546  0073                     ___bmul@multiplicand:	
   547                           ; 1 bytes @ 0x3
   548                           
   549  0073                     ___awdiv@divisor:	
   550                           ; 1 bytes @ 0x3
   551                           
   552                           
   553                           ; 2 bytes @ 0x3
   554  0073                     	ds	1
   555  0074                     ??_Lcd_Write_Char:
   556  0074                     ??_printf:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0074                     ??_initAN:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0074                     ??_Lcd_Cmd:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0074                     ??___bmul:	
   566                           ; 1 bytes @ 0x4
   567                           
   568                           
   569                           ; 1 bytes @ 0x4
   570  0074                     	ds	1
   571  0075                     initAN@bin:
   572  0075                     Lcd_Write_Char@a:	
   573                           ; 1 bytes @ 0x5
   574                           
   575  0075                     printf@ap:	
   576                           ; 1 bytes @ 0x5
   577                           
   578  0075                     ___bmul@product:	
   579                           ; 1 bytes @ 0x5
   580                           
   581  0075                     ___awdiv@dividend:	
   582                           ; 1 bytes @ 0x5
   583                           
   584                           
   585                           ; 2 bytes @ 0x5
   586  0075                     	ds	1
   587  0076                     ??_setup:
   588  0076                     chselect@cant:	
   589                           ; 1 bytes @ 0x6
   590                           
   591  0076                     Lcd_Cmd@a:	
   592                           ; 1 bytes @ 0x6
   593                           
   594  0076                     Lcd_Write_Char@temp:	
   595                           ; 1 bytes @ 0x6
   596                           
   597  0076                     printf@c:	
   598                           ; 1 bytes @ 0x6
   599                           
   600  0076                     ___bmul@multiplier:	
   601                           ; 1 bytes @ 0x6
   602                           
   603                           
   604                           ; 1 bytes @ 0x6
   605  0076                     	ds	1
   606  0077                     ??_Lcd_Clear:
   607  0077                     ?_Lcd_Set_Cursor:	
   608                           ; 1 bytes @ 0x7
   609                           
   610  0077                     ??___awdiv:	
   611                           ; 1 bytes @ 0x7
   612                           
   613  0077                     Lcd_Set_Cursor@b:	
   614                           ; 1 bytes @ 0x7
   615                           
   616  0077                     Lcd_Write_Char@y:	
   617                           ; 1 bytes @ 0x7
   618                           
   619  0077                     printf@f:	
   620                           ; 1 bytes @ 0x7
   621                           
   622                           
   623                           ; 1 bytes @ 0x7
   624  0077                     	ds	1
   625  0078                     ??_Lcd_Write_String:
   626                           
   627                           	psect	cstackBANK0
   628  002B                     __pcstackBANK0:	
   629                           ; 1 bytes @ 0x8
   630                           
   631  002B                     ??_Lcd_Init:
   632  002B                     ??_Lcd_Set_Cursor:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  002B                     ___awdiv@counter:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  002B                     Lcd_Write_String@i:	
   639                           ; 1 bytes @ 0x0
   640                           
   641                           
   642                           ; 2 bytes @ 0x0
   643  002B                     	ds	1
   644  002C                     ___awdiv@sign:
   645                           
   646                           ; 1 bytes @ 0x1
   647  002C                     	ds	1
   648  002D                     Lcd_Set_Cursor@a:
   649  002D                     Lcd_Write_String@a:	
   650                           ; 1 bytes @ 0x2
   651                           
   652  002D                     ___awdiv@quotient:	
   653                           ; 1 bytes @ 0x2
   654                           
   655                           
   656                           ; 2 bytes @ 0x2
   657  002D                     	ds	1
   658  002E                     Lcd_Set_Cursor@z:
   659                           
   660                           ; 1 bytes @ 0x3
   661  002E                     	ds	1
   662  002F                     ??_decimal:
   663  002F                     Lcd_Set_Cursor@y:	
   664                           ; 1 bytes @ 0x4
   665                           
   666                           
   667                           ; 1 bytes @ 0x4
   668  002F                     	ds	1
   669  0030                     Lcd_Set_Cursor@temp:
   670                           
   671                           ; 1 bytes @ 0x5
   672  0030                     	ds	2
   673  0032                     decimal@var:
   674                           
   675                           ; 1 bytes @ 0x7
   676  0032                     	ds	1
   677  0033                     decimal@VAL:
   678                           
   679                           ; 1 bytes @ 0x8
   680  0033                     	ds	1
   681  0034                     ??_main:
   682                           
   683                           ; 1 bytes @ 0x9
   684  0034                     	ds	2
   685                           
   686                           	psect	maintext
   687  0023                     __pmaintext:	
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 109 in file "Lab02.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : B00/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0
   709 ;;      Temps:          0       2       0       0       0
   710 ;;      Totals:         0       2       0       0       0
   711 ;;Total ram usage:        2 bytes
   712 ;; Hardware stack levels required when called:    4
   713 ;; This function calls:
   714 ;;		_Lcd_Clear
   715 ;;		_Lcd_Init
   716 ;;		_Lcd_Set_Cursor
   717 ;;		_Lcd_Write_Char
   718 ;;		_Lcd_Write_String
   719 ;;		_chselect
   720 ;;		_decimal
   721 ;;		_printf
   722 ;;		_setup
   723 ;; This function is called by:
   724 ;;		Startup code after reset
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _main
   730  0023                     _main:
   731  0023                     l1944:	
   732                           ;incstack = 0
   733                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   734                           
   735                           
   736                           ;Lab02.c: 110:     setup();
   737  0023  120A  118A  2429  120A  118A  	fcall	_setup
   738                           
   739                           ;Lab02.c: 111:     Lcd_Init();
   740  0028  120A  118A  23DB  120A  118A  	fcall	_Lcd_Init
   741                           
   742                           ;Lab02.c: 112:     Lcd_Clear();
   743  002D  120A  118A  25A4  120A  118A  	fcall	_Lcd_Clear
   744                           
   745                           ;Lab02.c: 113:     Lcd_Set_Cursor(1,1);
   746  0032  01F7               	clrf	Lcd_Set_Cursor@b
   747  0033  0AF7               	incf	Lcd_Set_Cursor@b,f
   748  0034  3001               	movlw	1
   749  0035  120A  118A  2383  120A  118A  	fcall	_Lcd_Set_Cursor
   750  003A                     l1946:
   751                           
   752                           ;Lab02.c: 114:     Lcd_Write_String("S1:   S2:   S3:");
   753  003A  3025               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   754  003B  120A  118A  24EC  120A  118A  	fcall	_Lcd_Write_String
   755  0040                     l1948:
   756                           
   757                           ;Lab02.c: 117:     chselect(2);
   758  0040  3002               	movlw	2
   759  0041  120A  118A  21B3  120A  118A  	fcall	_chselect
   760                           
   761                           ;Lab02.c: 119:     decimal(VAL1);
   762  0046  1283               	bcf	3,5	;RP0=0, select bank0
   763  0047  1303               	bcf	3,6	;RP1=0, select bank0
   764  0048  0821               	movf	_VAL1,w
   765  0049  120A  118A  231C  120A  118A  	fcall	_decimal
   766                           
   767                           ;Lab02.c: 120:     Lcd_Set_Cursor(2,1);
   768  004E  01F7               	clrf	Lcd_Set_Cursor@b
   769  004F  0AF7               	incf	Lcd_Set_Cursor@b,f
   770  0050  3002               	movlw	2
   771  0051  120A  118A  2383  120A  118A  	fcall	_Lcd_Set_Cursor
   772                           
   773                           ;Lab02.c: 121:     Lcd_Write_Char(cen);
   774  0056  0878               	movf	_cen,w
   775  0057  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
   776                           
   777                           ;Lab02.c: 122:     Lcd_Write_Char(dec);
   778  005C  0879               	movf	_dec,w
   779  005D  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
   780                           
   781                           ;Lab02.c: 123:     Lcd_Write_Char(un);
   782  0062  087A               	movf	_un,w
   783  0063  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
   784  0068                     l1950:
   785                           
   786                           ;Lab02.c: 124:     Lcd_Write_String("   ");
   787  0068  3035               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   788  0069  120A  118A  24EC  120A  118A  	fcall	_Lcd_Write_String
   789  006E                     l1952:
   790                           
   791                           ;Lab02.c: 126:     if(PIR1bits.TXIF == 1){
   792  006E  1283               	bcf	3,5	;RP0=0, select bank0
   793  006F  1303               	bcf	3,6	;RP1=0, select bank0
   794  0070  1E0C               	btfss	12,4	;volatile
   795  0071  2873               	goto	u1041
   796  0072  2874               	goto	u1040
   797  0073                     u1041:
   798  0073  2894               	goto	l1962
   799  0074                     u1040:
   800  0074                     l1954:
   801                           
   802                           ;Lab02.c: 127:         _delay((unsigned long)((150)*(4000000/4000.0)));
   803  0074  30C3               	movlw	195
   804  0075  1283               	bcf	3,5	;RP0=0, select bank0
   805  0076  1303               	bcf	3,6	;RP1=0, select bank0
   806  0077  00B5               	movwf	??_main+1
   807  0078  30CC               	movlw	204
   808  0079  00B4               	movwf	??_main
   809  007A                     u1147:
   810  007A  0BB4               	decfsz	??_main,f
   811  007B  287A               	goto	u1147
   812  007C  0BB5               	decfsz	??_main+1,f
   813  007D  287A               	goto	u1147
   814  007E  0000               	nop
   815  007F                     l1956:
   816                           
   817                           ;Lab02.c: 128:         printf("VALOR DE POT 1: \r");
   818  007F  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   819  0080  120A  118A  2539  120A  118A  	fcall	_printf
   820  0085                     l1958:
   821                           
   822                           ;Lab02.c: 129:         _delay((unsigned long)((150)*(4000000/4000.0)));
   823  0085  30C3               	movlw	195
   824  0086  1283               	bcf	3,5	;RP0=0, select bank0
   825  0087  1303               	bcf	3,6	;RP1=0, select bank0
   826  0088  00B5               	movwf	??_main+1
   827  0089  30CC               	movlw	204
   828  008A  00B4               	movwf	??_main
   829  008B                     u1157:
   830  008B  0BB4               	decfsz	??_main,f
   831  008C  288B               	goto	u1157
   832  008D  0BB5               	decfsz	??_main+1,f
   833  008E  288B               	goto	u1157
   834  008F  0000               	nop
   835  0090                     l1960:
   836                           
   837                           ;Lab02.c: 130:         TXREG = cen;
   838  0090  0878               	movf	_cen,w
   839  0091  1283               	bcf	3,5	;RP0=0, select bank0
   840  0092  1303               	bcf	3,6	;RP1=0, select bank0
   841  0093  0099               	movwf	25	;volatile
   842  0094                     l1962:
   843                           
   844                           ;Lab02.c: 132:         _delay((unsigned long)((10)*(4000000/4000.0)));
   845  0094  300D               	movlw	13
   846  0095  1283               	bcf	3,5	;RP0=0, select bank0
   847  0096  1303               	bcf	3,6	;RP1=0, select bank0
   848  0097  00B5               	movwf	??_main+1
   849  0098  30FB               	movlw	251
   850  0099  00B4               	movwf	??_main
   851  009A                     u1167:
   852  009A  0BB4               	decfsz	??_main,f
   853  009B  289A               	goto	u1167
   854  009C  0BB5               	decfsz	??_main+1,f
   855  009D  289A               	goto	u1167
   856  009E                     l1964:
   857                           
   858                           ;Lab02.c: 133:         if(PIR1bits.TXIF == 1){
   859  009E  1283               	bcf	3,5	;RP0=0, select bank0
   860  009F  1303               	bcf	3,6	;RP1=0, select bank0
   861  00A0  1E0C               	btfss	12,4	;volatile
   862  00A1  28A3               	goto	u1051
   863  00A2  28A4               	goto	u1050
   864  00A3                     u1051:
   865  00A3  28A6               	goto	l206
   866  00A4                     u1050:
   867  00A4                     l1966:
   868                           
   869                           ;Lab02.c: 134:             TXREG = 46;
   870  00A4  302E               	movlw	46
   871  00A5  0099               	movwf	25	;volatile
   872  00A6                     l206:	
   873                           ;Lab02.c: 135:            }
   874                           
   875                           
   876                           ;Lab02.c: 136:         _delay((unsigned long)((10)*(4000000/4000.0)));
   877  00A6  300D               	movlw	13
   878  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   879  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   880  00A9  00B5               	movwf	??_main+1
   881  00AA  30FB               	movlw	251
   882  00AB  00B4               	movwf	??_main
   883  00AC                     u1177:
   884  00AC  0BB4               	decfsz	??_main,f
   885  00AD  28AC               	goto	u1177
   886  00AE  0BB5               	decfsz	??_main+1,f
   887  00AF  28AC               	goto	u1177
   888  00B0                     l1968:
   889                           
   890                           ;Lab02.c: 137:         if(PIR1bits.TXIF == 1){
   891  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   892  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   893  00B2  1E0C               	btfss	12,4	;volatile
   894  00B3  28B5               	goto	u1061
   895  00B4  28B6               	goto	u1060
   896  00B5                     u1061:
   897  00B5  28B8               	goto	l207
   898  00B6                     u1060:
   899  00B6                     l1970:
   900                           
   901                           ;Lab02.c: 138:             TXREG = dec;
   902  00B6  0879               	movf	_dec,w
   903  00B7  0099               	movwf	25	;volatile
   904  00B8                     l207:	
   905                           ;Lab02.c: 139:            }
   906                           
   907                           
   908                           ;Lab02.c: 140:         _delay((unsigned long)((10)*(4000000/4000.0)));
   909  00B8  300D               	movlw	13
   910  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   911  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   912  00BB  00B5               	movwf	??_main+1
   913  00BC  30FB               	movlw	251
   914  00BD  00B4               	movwf	??_main
   915  00BE                     u1187:
   916  00BE  0BB4               	decfsz	??_main,f
   917  00BF  28BE               	goto	u1187
   918  00C0  0BB5               	decfsz	??_main+1,f
   919  00C1  28BE               	goto	u1187
   920  00C2                     l1972:
   921                           
   922                           ;Lab02.c: 141:         if(PIR1bits.TXIF == 1){
   923  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   924  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   925  00C4  1E0C               	btfss	12,4	;volatile
   926  00C5  28C7               	goto	u1071
   927  00C6  28C8               	goto	u1070
   928  00C7                     u1071:
   929  00C7  28CA               	goto	l208
   930  00C8                     u1070:
   931  00C8                     l1974:
   932                           
   933                           ;Lab02.c: 142:             TXREG = un;
   934  00C8  087A               	movf	_un,w
   935  00C9  0099               	movwf	25	;volatile
   936  00CA                     l208:	
   937                           ;Lab02.c: 143:            }
   938                           
   939                           
   940                           ;Lab02.c: 144:         _delay((unsigned long)((10)*(4000000/4000.0)));
   941  00CA  300D               	movlw	13
   942  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   943  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   944  00CD  00B5               	movwf	??_main+1
   945  00CE  30FB               	movlw	251
   946  00CF  00B4               	movwf	??_main
   947  00D0                     u1197:
   948  00D0  0BB4               	decfsz	??_main,f
   949  00D1  28D0               	goto	u1197
   950  00D2  0BB5               	decfsz	??_main+1,f
   951  00D3  28D0               	goto	u1197
   952  00D4                     l1976:
   953                           
   954                           ;Lab02.c: 145:         if(PIR1bits.TXIF == 1){
   955  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   956  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   957  00D6  1E0C               	btfss	12,4	;volatile
   958  00D7  28D9               	goto	u1081
   959  00D8  28DA               	goto	u1080
   960  00D9                     u1081:
   961  00D9  28DC               	goto	l209
   962  00DA                     u1080:
   963  00DA                     l1978:
   964                           
   965                           ;Lab02.c: 146:             TXREG = 13;
   966  00DA  300D               	movlw	13
   967  00DB  0099               	movwf	25	;volatile
   968  00DC                     l209:	
   969                           ;Lab02.c: 147:            }
   970                           
   971                           
   972                           ;Lab02.c: 148:         _delay((unsigned long)((150)*(4000000/4000.0)));
   973  00DC  30C3               	movlw	195
   974  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   975  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   976  00DF  00B5               	movwf	??_main+1
   977  00E0  30CC               	movlw	204
   978  00E1  00B4               	movwf	??_main
   979  00E2                     u1207:
   980  00E2  0BB4               	decfsz	??_main,f
   981  00E3  28E2               	goto	u1207
   982  00E4  0BB5               	decfsz	??_main+1,f
   983  00E5  28E2               	goto	u1207
   984  00E6  0000               	nop
   985  00E7                     l1980:
   986                           
   987                           ;Lab02.c: 152:     decimal(VAL2);
   988  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   989  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   990  00E9  0820               	movf	_VAL2,w
   991  00EA  120A  118A  231C  120A  118A  	fcall	_decimal
   992  00EF                     l1982:
   993                           
   994                           ;Lab02.c: 153:     Lcd_Write_Char(cen);
   995  00EF  0878               	movf	_cen,w
   996  00F0  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
   997  00F5                     l1984:
   998                           
   999                           ;Lab02.c: 154:     Lcd_Write_Char(dec);
  1000  00F5  0879               	movf	_dec,w
  1001  00F6  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
  1002  00FB                     l1986:
  1003                           
  1004                           ;Lab02.c: 155:     Lcd_Write_Char(un);
  1005  00FB  087A               	movf	_un,w
  1006  00FC  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
  1007                           
  1008                           ;Lab02.c: 156:     _delay((unsigned long)((1500)*(4000000/4000000.0)));
  1009  0101  30D5               	movlw	213
  1010  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0104  00B4               	movwf	??_main
  1013  0105                     u1217:
  1014  0105  2906               	nop2
  1015  0106  2907               	nop2
  1016  0107  0BB4               	decfsz	??_main,f
  1017  0108  2905               	goto	u1217
  1018  0109  290A               	nop2
  1019  010A  290B               	nop2
  1020  010B  290C               	nop2
  1021  010C                     l1988:
  1022                           
  1023                           ;Lab02.c: 158:     if(PIR1bits.TXIF == 1){
  1024  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1025  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1026  010E  1E0C               	btfss	12,4	;volatile
  1027  010F  2911               	goto	u1091
  1028  0110  2912               	goto	u1090
  1029  0111                     u1091:
  1030  0111  2932               	goto	l1998
  1031  0112                     u1090:
  1032  0112                     l1990:
  1033                           
  1034                           ;Lab02.c: 159:         _delay((unsigned long)((150)*(4000000/4000.0)));
  1035  0112  30C3               	movlw	195
  1036  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0115  00B5               	movwf	??_main+1
  1039  0116  30CC               	movlw	204
  1040  0117  00B4               	movwf	??_main
  1041  0118                     u1227:
  1042  0118  0BB4               	decfsz	??_main,f
  1043  0119  2918               	goto	u1227
  1044  011A  0BB5               	decfsz	??_main+1,f
  1045  011B  2918               	goto	u1227
  1046  011C  0000               	nop
  1047  011D                     l1992:
  1048                           
  1049                           ;Lab02.c: 160:         printf("VALOR DE POT 2: \r");
  1050  011D  3013               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1051  011E  120A  118A  2539  120A  118A  	fcall	_printf
  1052  0123                     l1994:
  1053                           
  1054                           ;Lab02.c: 161:         _delay((unsigned long)((150)*(4000000/4000.0)));
  1055  0123  30C3               	movlw	195
  1056  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0126  00B5               	movwf	??_main+1
  1059  0127  30CC               	movlw	204
  1060  0128  00B4               	movwf	??_main
  1061  0129                     u1237:
  1062  0129  0BB4               	decfsz	??_main,f
  1063  012A  2929               	goto	u1237
  1064  012B  0BB5               	decfsz	??_main+1,f
  1065  012C  2929               	goto	u1237
  1066  012D  0000               	nop
  1067  012E                     l1996:
  1068                           
  1069                           ;Lab02.c: 162:             TXREG = cen;
  1070  012E  0878               	movf	_cen,w
  1071  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0131  0099               	movwf	25	;volatile
  1074  0132                     l1998:
  1075                           
  1076                           ;Lab02.c: 164:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1077  0132  300D               	movlw	13
  1078  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0135  00B5               	movwf	??_main+1
  1081  0136  30FB               	movlw	251
  1082  0137  00B4               	movwf	??_main
  1083  0138                     u1247:
  1084  0138  0BB4               	decfsz	??_main,f
  1085  0139  2938               	goto	u1247
  1086  013A  0BB5               	decfsz	??_main+1,f
  1087  013B  2938               	goto	u1247
  1088  013C                     l2000:
  1089                           
  1090                           ;Lab02.c: 165:         if(PIR1bits.TXIF == 1){
  1091  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1092  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1093  013E  1E0C               	btfss	12,4	;volatile
  1094  013F  2941               	goto	u1101
  1095  0140  2942               	goto	u1100
  1096  0141                     u1101:
  1097  0141  2944               	goto	l211
  1098  0142                     u1100:
  1099  0142                     l2002:
  1100                           
  1101                           ;Lab02.c: 166:             TXREG = 46;
  1102  0142  302E               	movlw	46
  1103  0143  0099               	movwf	25	;volatile
  1104  0144                     l211:	
  1105                           ;Lab02.c: 167:            }
  1106                           
  1107                           
  1108                           ;Lab02.c: 168:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1109  0144  300D               	movlw	13
  1110  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0147  00B5               	movwf	??_main+1
  1113  0148  30FB               	movlw	251
  1114  0149  00B4               	movwf	??_main
  1115  014A                     u1257:
  1116  014A  0BB4               	decfsz	??_main,f
  1117  014B  294A               	goto	u1257
  1118  014C  0BB5               	decfsz	??_main+1,f
  1119  014D  294A               	goto	u1257
  1120  014E                     l2004:
  1121                           
  1122                           ;Lab02.c: 169:         if(PIR1bits.TXIF == 1){
  1123  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1124  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0150  1E0C               	btfss	12,4	;volatile
  1126  0151  2953               	goto	u1111
  1127  0152  2954               	goto	u1110
  1128  0153                     u1111:
  1129  0153  2956               	goto	l212
  1130  0154                     u1110:
  1131  0154                     l2006:
  1132                           
  1133                           ;Lab02.c: 170:             TXREG = dec;
  1134  0154  0879               	movf	_dec,w
  1135  0155  0099               	movwf	25	;volatile
  1136  0156                     l212:	
  1137                           ;Lab02.c: 171:            }
  1138                           
  1139                           
  1140                           ;Lab02.c: 172:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1141  0156  300D               	movlw	13
  1142  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0159  00B5               	movwf	??_main+1
  1145  015A  30FB               	movlw	251
  1146  015B  00B4               	movwf	??_main
  1147  015C                     u1267:
  1148  015C  0BB4               	decfsz	??_main,f
  1149  015D  295C               	goto	u1267
  1150  015E  0BB5               	decfsz	??_main+1,f
  1151  015F  295C               	goto	u1267
  1152  0160                     l2008:
  1153                           
  1154                           ;Lab02.c: 173:         if(PIR1bits.TXIF == 1){
  1155  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0162  1E0C               	btfss	12,4	;volatile
  1158  0163  2965               	goto	u1121
  1159  0164  2966               	goto	u1120
  1160  0165                     u1121:
  1161  0165  2968               	goto	l213
  1162  0166                     u1120:
  1163  0166                     l2010:
  1164                           
  1165                           ;Lab02.c: 174:             TXREG = un;
  1166  0166  087A               	movf	_un,w
  1167  0167  0099               	movwf	25	;volatile
  1168  0168                     l213:	
  1169                           ;Lab02.c: 175:            }
  1170                           
  1171                           
  1172                           ;Lab02.c: 176:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1173  0168  300D               	movlw	13
  1174  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1175  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1176  016B  00B5               	movwf	??_main+1
  1177  016C  30FB               	movlw	251
  1178  016D  00B4               	movwf	??_main
  1179  016E                     u1277:
  1180  016E  0BB4               	decfsz	??_main,f
  1181  016F  296E               	goto	u1277
  1182  0170  0BB5               	decfsz	??_main+1,f
  1183  0171  296E               	goto	u1277
  1184  0172                     l2012:
  1185                           
  1186                           ;Lab02.c: 177:         if(PIR1bits.TXIF == 1){
  1187  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0174  1E0C               	btfss	12,4	;volatile
  1190  0175  2977               	goto	u1131
  1191  0176  2978               	goto	u1130
  1192  0177                     u1131:
  1193  0177  297A               	goto	l214
  1194  0178                     u1130:
  1195  0178                     l2014:
  1196                           
  1197                           ;Lab02.c: 178:             TXREG = 13;
  1198  0178  300D               	movlw	13
  1199  0179  0099               	movwf	25	;volatile
  1200  017A                     l214:	
  1201                           ;Lab02.c: 179:            }
  1202                           
  1203                           
  1204                           ;Lab02.c: 180:         _delay((unsigned long)((150)*(4000000/4000.0)));
  1205  017A  30C3               	movlw	195
  1206  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1207  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1208  017D  00B5               	movwf	??_main+1
  1209  017E  30CC               	movlw	204
  1210  017F  00B4               	movwf	??_main
  1211  0180                     u1287:
  1212  0180  0BB4               	decfsz	??_main,f
  1213  0181  2980               	goto	u1287
  1214  0182  0BB5               	decfsz	??_main+1,f
  1215  0183  2980               	goto	u1287
  1216  0184  0000               	nop
  1217  0185                     l2016:
  1218                           
  1219                           ;Lab02.c: 184:     decimal(contador);
  1220  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0187  0827               	movf	_contador,w
  1223  0188  120A  118A  231C  120A  118A  	fcall	_decimal
  1224  018D                     l2018:
  1225                           
  1226                           ;Lab02.c: 185:     Lcd_Write_Char(cen);
  1227  018D  0878               	movf	_cen,w
  1228  018E  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
  1229  0193                     l2020:
  1230                           
  1231                           ;Lab02.c: 186:     Lcd_Write_String(".");
  1232  0193  3039               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1233  0194  120A  118A  24EC  120A  118A  	fcall	_Lcd_Write_String
  1234  0199                     l2022:
  1235                           
  1236                           ;Lab02.c: 187:     Lcd_Write_Char(dec);
  1237  0199  0879               	movf	_dec,w
  1238  019A  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
  1239  019F                     l2024:
  1240                           
  1241                           ;Lab02.c: 188:     Lcd_Write_Char(un);
  1242  019F  087A               	movf	_un,w
  1243  01A0  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
  1244  01A5                     l2026:
  1245                           
  1246                           ;Lab02.c: 189:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1247  01A5  3082               	movlw	130
  1248  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1249  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1250  01A8  00B5               	movwf	??_main+1
  1251  01A9  30DD               	movlw	221
  1252  01AA  00B4               	movwf	??_main
  1253  01AB                     u1297:
  1254  01AB  0BB4               	decfsz	??_main,f
  1255  01AC  29AB               	goto	u1297
  1256  01AD  0BB5               	decfsz	??_main+1,f
  1257  01AE  29AB               	goto	u1297
  1258  01AF  2840               	goto	l1948
  1259  01B0  120A  118A  280C   	ljmp	start
  1260  01B3                     __end_of_main:
  1261                           
  1262                           	psect	text1
  1263  0429                     __ptext1:	
  1264 ;; *************** function _setup *****************
  1265 ;; Defined at:
  1266 ;;		line 196 in file "Lab02.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		_initAN
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _setup
  1296  0429                     _setup:
  1297  0429                     l1600:	
  1298                           ;incstack = 0
  1299                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1300                           
  1301                           
  1302                           ;Lab02.c: 199:   ANSELH = 0x00;
  1303  0429  1683               	bsf	3,5	;RP0=1, select bank3
  1304  042A  1703               	bsf	3,6	;RP1=1, select bank3
  1305  042B  0189               	clrf	9	;volatile
  1306  042C                     l1602:
  1307                           
  1308                           ;Lab02.c: 200:   ANSEL = 0B00000011;
  1309  042C  3003               	movlw	3
  1310  042D  0088               	movwf	8	;volatile
  1311  042E                     l1604:
  1312                           
  1313                           ;Lab02.c: 202:   TRISA = 0B00000011;
  1314  042E  3003               	movlw	3
  1315  042F  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0430  1303               	bcf	3,6	;RP1=0, select bank1
  1317  0431  0085               	movwf	5	;volatile
  1318  0432                     l1606:
  1319                           
  1320                           ;Lab02.c: 203:   TRISCbits.TRISC6 = 0;
  1321  0432  1307               	bcf	7,6	;volatile
  1322  0433                     l1608:
  1323                           
  1324                           ;Lab02.c: 204:   TRISCbits.TRISC7 = 1;
  1325  0433  1787               	bsf	7,7	;volatile
  1326                           
  1327                           ;Lab02.c: 205:   TRISD = 0X00;
  1328  0434  0188               	clrf	8	;volatile
  1329                           
  1330                           ;Lab02.c: 206:   TRISE = 0X00;
  1331  0435  0189               	clrf	9	;volatile
  1332                           
  1333                           ;Lab02.c: 208:   PORTA = 0X00;
  1334  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0438  0185               	clrf	5	;volatile
  1337                           
  1338                           ;Lab02.c: 209:   PORTB = 0X00;
  1339  0439  0186               	clrf	6	;volatile
  1340                           
  1341                           ;Lab02.c: 210:   PORTC = 0X00;
  1342  043A  0187               	clrf	7	;volatile
  1343                           
  1344                           ;Lab02.c: 211:   PORTD = 0X00;
  1345  043B  0188               	clrf	8	;volatile
  1346                           
  1347                           ;Lab02.c: 212:   PORTE = 0X00;
  1348  043C  0189               	clrf	9	;volatile
  1349  043D                     l1610:
  1350                           
  1351                           ;Lab02.c: 214:   initAN(0b00000011, 0);
  1352  043D  01F3               	clrf	initAN@just
  1353  043E  3003               	movlw	3
  1354  043F  120A  118A  2515  120A  118A  	fcall	_initAN
  1355  0444                     l1612:
  1356                           
  1357                           ;Lab02.c: 217:   OSCCONbits.SCS = 1;
  1358  0444  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0445  1303               	bcf	3,6	;RP1=0, select bank1
  1360  0446  140F               	bsf	15,0	;volatile
  1361  0447                     l1614:
  1362                           
  1363                           ;Lab02.c: 218:   OSCCONbits.IRCF2 = 1;
  1364  0447  170F               	bsf	15,6	;volatile
  1365  0448                     l1616:
  1366                           
  1367                           ;Lab02.c: 219:   OSCCONbits.IRCF1 = 1;
  1368  0448  168F               	bsf	15,5	;volatile
  1369  0449                     l1618:
  1370                           
  1371                           ;Lab02.c: 220:   OSCCONbits.IRCF0 = 0;
  1372  0449  120F               	bcf	15,4	;volatile
  1373  044A                     l1620:
  1374                           
  1375                           ;Lab02.c: 223:   OPTION_REG = 0B11000100;
  1376  044A  30C4               	movlw	196
  1377  044B  0081               	movwf	1	;volatile
  1378  044C                     l1622:
  1379                           
  1380                           ;Lab02.c: 224:   INTCONbits.GIE = 1;
  1381  044C  178B               	bsf	11,7	;volatile
  1382  044D                     l1624:
  1383                           
  1384                           ;Lab02.c: 225:   INTCONbits.PEIE = 1;
  1385  044D  170B               	bsf	11,6	;volatile
  1386  044E                     l1626:
  1387                           
  1388                           ;Lab02.c: 226:   INTCONbits.T0IE = 1;
  1389  044E  168B               	bsf	11,5	;volatile
  1390  044F                     l1628:
  1391                           
  1392                           ;Lab02.c: 227:   INTCONbits.T0IF = 0;
  1393  044F  110B               	bcf	11,2	;volatile
  1394  0450                     l1630:
  1395                           
  1396                           ;Lab02.c: 228:   PIE1bits.ADIE = 1;
  1397  0450  170C               	bsf	12,6	;volatile
  1398  0451                     l1632:
  1399                           
  1400                           ;Lab02.c: 229:   PIR1bits.ADIF = 0;
  1401  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0452  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0453  130C               	bcf	12,6	;volatile
  1404  0454                     l1634:
  1405                           
  1406                           ;Lab02.c: 232:   PIR1bits.RCIF = 0;
  1407  0454  128C               	bcf	12,5	;volatile
  1408  0455                     l1636:
  1409                           
  1410                           ;Lab02.c: 233:   PIE1bits.RCIE = 0;
  1411  0455  1683               	bsf	3,5	;RP0=1, select bank1
  1412  0456  1303               	bcf	3,6	;RP1=0, select bank1
  1413  0457  128C               	bcf	12,5	;volatile
  1414  0458                     l1638:
  1415                           
  1416                           ;Lab02.c: 234:   PIE1bits.TXIE = 0;
  1417  0458  120C               	bcf	12,4	;volatile
  1418  0459                     l1640:
  1419                           
  1420                           ;Lab02.c: 235:   TXSTAbits.TX9 = 0;
  1421  0459  1318               	bcf	24,6	;volatile
  1422  045A                     l1642:
  1423                           
  1424                           ;Lab02.c: 236:   TXSTAbits.TXEN = 1;
  1425  045A  1698               	bsf	24,5	;volatile
  1426  045B                     l1644:
  1427                           
  1428                           ;Lab02.c: 237:   TXSTAbits.SYNC = 0;
  1429  045B  1218               	bcf	24,4	;volatile
  1430  045C                     l1646:
  1431                           
  1432                           ;Lab02.c: 238:   TXSTAbits.BRGH = 1;
  1433  045C  1518               	bsf	24,2	;volatile
  1434  045D                     l1648:
  1435                           
  1436                           ;Lab02.c: 239:   RCSTAbits.RX9 = 0;
  1437  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1438  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1439  045F  1318               	bcf	24,6	;volatile
  1440  0460                     l1650:
  1441                           
  1442                           ;Lab02.c: 240:   RCSTAbits.CREN = 1;
  1443  0460  1618               	bsf	24,4	;volatile
  1444  0461                     l1652:
  1445                           
  1446                           ;Lab02.c: 241:   RCSTAbits.SPEN = 1;
  1447  0461  1798               	bsf	24,7	;volatile
  1448  0462                     l1654:
  1449                           
  1450                           ;Lab02.c: 245:   BAUDCTLbits.BRG16 = 0;
  1451  0462  1683               	bsf	3,5	;RP0=1, select bank3
  1452  0463  1703               	bsf	3,6	;RP1=1, select bank3
  1453  0464  1187               	bcf	7,3	;volatile
  1454  0465                     l1656:
  1455                           
  1456                           ;Lab02.c: 246:   SPBRG = 25;
  1457  0465  3019               	movlw	25
  1458  0466  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0467  1303               	bcf	3,6	;RP1=0, select bank1
  1460  0468  0099               	movwf	25	;volatile
  1461  0469                     l1658:
  1462                           
  1463                           ;Lab02.c: 247:   SPBRGH = 1;
  1464  0469  3001               	movlw	1
  1465  046A  009A               	movwf	26	;volatile
  1466  046B                     l220:
  1467  046B  0008               	return
  1468  046C                     __end_of_setup:
  1469                           
  1470                           	psect	text2
  1471  0515                     __ptext2:	
  1472 ;; *************** function _initAN *****************
  1473 ;; Defined at:
  1474 ;;		line 76 in file "./config_ADC.h"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  bin             1    wreg     unsigned char 
  1477 ;;  just            1    3[COMMON] unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  bin             1    5[COMMON] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         1       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0
  1491 ;;      Temps:          1       0       0       0       0
  1492 ;;      Totals:         3       0       0       0       0
  1493 ;;Total ram usage:        3 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_setup
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _initAN
  1505  0515                     _initAN:
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _initAN: [wreg+status,2+status,0]
  1509                           ;initAN@bin stored from wreg
  1510  0515  00F5               	movwf	initAN@bin
  1511  0516                     l1396:
  1512                           
  1513                           ;./config_ADC.h: 77:      ANSEL = bin;
  1514  0516  0875               	movf	initAN@bin,w
  1515  0517  1683               	bsf	3,5	;RP0=1, select bank3
  1516  0518  1703               	bsf	3,6	;RP1=1, select bank3
  1517  0519  0088               	movwf	8	;volatile
  1518  051A                     l1398:
  1519                           
  1520                           ;./config_ADC.h: 78:      ANSELH = 0x00;
  1521  051A  0189               	clrf	9	;volatile
  1522  051B                     l1400:
  1523                           
  1524                           ;./config_ADC.h: 79:      TRISA = bin;
  1525  051B  0875               	movf	initAN@bin,w
  1526  051C  1683               	bsf	3,5	;RP0=1, select bank1
  1527  051D  1303               	bcf	3,6	;RP1=0, select bank1
  1528  051E  0085               	movwf	5	;volatile
  1529  051F                     l1402:
  1530                           
  1531                           ;./config_ADC.h: 81:      ADCON0bits.CHS= 0;
  1532  051F  30C3               	movlw	-61
  1533  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0522  059F               	andwf	31,f	;volatile
  1536  0523                     l1404:
  1537                           
  1538                           ;./config_ADC.h: 82:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1539  0523  3021               	movlw	33
  1540  0524  00F4               	movwf	??_initAN
  1541  0525                     u1307:
  1542  0525  0BF4               	decfsz	??_initAN,f
  1543  0526  2D25               	goto	u1307
  1544  0527                     l1406:
  1545                           
  1546                           ;./config_ADC.h: 84:      ADCON0bits.ADON = 1;
  1547  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0529  141F               	bsf	31,0	;volatile
  1550  052A                     l1408:
  1551                           
  1552                           ;./config_ADC.h: 85:      ADCON0bits.ADCS = 1;
  1553  052A  081F               	movf	31,w	;volatile
  1554  052B  393F               	andlw	-193
  1555  052C  3840               	iorlw	64
  1556  052D  009F               	movwf	31	;volatile
  1557  052E                     l1410:
  1558                           
  1559                           ;./config_ADC.h: 86:      ADCON1bits.ADFM = just;
  1560  052E  0C73               	rrf	initAN@just,w
  1561  052F  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0530  1303               	bcf	3,6	;RP1=0, select bank1
  1563  0531  1C03               	skipc
  1564  0532  139F               	bcf	31,7	;volatile
  1565  0533  1803               	skipnc
  1566  0534  179F               	bsf	31,7	;volatile
  1567  0535                     l1412:
  1568                           
  1569                           ;./config_ADC.h: 87:      ADCON1bits.VCFG0 = 0;
  1570  0535  121F               	bcf	31,4	;volatile
  1571  0536                     l1414:
  1572                           
  1573                           ;./config_ADC.h: 88:      ADCON1bits.VCFG1 = 0;
  1574  0536  129F               	bcf	31,5	;volatile
  1575  0537                     l1416:
  1576                           
  1577                           ;./config_ADC.h: 90:      PIE1bits.ADIE= 1;
  1578  0537  170C               	bsf	12,6	;volatile
  1579  0538                     l91:
  1580  0538  0008               	return
  1581  0539                     __end_of_initAN:
  1582                           
  1583                           	psect	text3
  1584  0539                     __ptext3:	
  1585 ;; *************** function _printf *****************
  1586 ;; Defined at:
  1587 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  f               1    wreg     PTR const unsigned char 
  1590 ;;		 -> STR_4(18), STR_3(18), 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  f               1    7[COMMON] PTR const unsigned char 
  1593 ;;		 -> STR_4(18), STR_3(18), 
  1594 ;;  tmpval          4    0        struct .
  1595 ;;  cp              2    0        PTR const unsigned char 
  1596 ;;  len             2    0        unsigned int 
  1597 ;;  val             2    0        unsigned int 
  1598 ;;  c               1    6[COMMON] unsigned char 
  1599 ;;  ap              1    5[COMMON] PTR void [1]
  1600 ;;		 -> ?_printf(2), 
  1601 ;;  flag            1    0        unsigned char 
  1602 ;;  prec            1    0        char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  2   42[None  ] int 
  1605 ;; Registers used:
  1606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         0       0       0       0       0
  1613 ;;      Locals:         3       0       0       0       0
  1614 ;;      Temps:          1       0       0       0       0
  1615 ;;      Totals:         4       0       0       0       0
  1616 ;;Total ram usage:        4 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    2
  1619 ;; This function calls:
  1620 ;;		_putch
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function _printf
  1628  0539                     _printf:
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1632                           ;printf@f stored from wreg
  1633  0539  00F7               	movwf	printf@f
  1634  053A                     l1716:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1637  053A  3070               	movlw	(low (?_printf| 0))& (0+255)
  1638  053B  00F4               	movwf	??_printf
  1639  053C  0874               	movf	??_printf,w
  1640  053D  00F5               	movwf	printf@ap
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1643  053E  2D45               	goto	l1720
  1644  053F                     l1718:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1647  053F  0876               	movf	printf@c,w
  1648  0540  120A  118A  25B1  120A  118A  	fcall	_putch
  1649  0545                     l1720:	
  1650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1651                           
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1654  0545  3001               	movlw	1
  1655  0546  07F7               	addwf	printf@f,f
  1656  0547  30FF               	movlw	-1
  1657  0548  0777               	addwf	printf@f,w
  1658  0549  0084               	movwf	4
  1659  054A  120A  118A  246C  120A  118A  	fcall	stringdir
  1660  054F  00F4               	movwf	??_printf
  1661  0550  0874               	movf	??_printf,w
  1662  0551  00F6               	movwf	printf@c
  1663  0552  0876               	movf	printf@c,w
  1664  0553  1D03               	btfss	3,2
  1665  0554  2D56               	goto	u821
  1666  0555  2D57               	goto	u820
  1667  0556                     u821:
  1668  0556  2D3F               	goto	l1718
  1669  0557                     u820:
  1670  0557                     l362:
  1671  0557  0008               	return
  1672  0558                     __end_of_printf:
  1673                           
  1674                           	psect	text4
  1675  05B1                     __ptext4:	
  1676 ;; *************** function _putch *****************
  1677 ;; Defined at:
  1678 ;;		line 268 in file "Lab02.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  info            1    wreg     unsigned char 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  info            1    3[COMMON] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0
  1695 ;;      Totals:         1       0       0       0       0
  1696 ;;Total ram usage:        1 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_printf
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _putch
  1708  05B1                     _putch:
  1709                           
  1710                           ;incstack = 0
  1711                           ; Regs used in _putch: [wreg]
  1712                           ;putch@info stored from wreg
  1713  05B1  00F3               	movwf	putch@info
  1714  05B2                     l1430:
  1715  05B2                     l226:	
  1716                           ;Lab02.c: 269:     while (TXIF == 0);
  1717                           
  1718  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1719  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1720  05B4  1E0C               	btfss	12,4	;volatile
  1721  05B5  2DB7               	goto	u501
  1722  05B6  2DB8               	goto	u500
  1723  05B7                     u501:
  1724  05B7  2DB2               	goto	l226
  1725  05B8                     u500:
  1726  05B8                     l1432:
  1727                           
  1728                           ;Lab02.c: 270:     TXREG = info;
  1729  05B8  0873               	movf	putch@info,w
  1730  05B9  0099               	movwf	25	;volatile
  1731  05BA                     l229:
  1732  05BA  0008               	return
  1733  05BB                     __end_of_putch:
  1734                           
  1735                           	psect	text5
  1736  031C                     __ptext5:	
  1737 ;; *************** function _decimal *****************
  1738 ;; Defined at:
  1739 ;;		line 254 in file "Lab02.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  var             1    wreg     unsigned char 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  var             1    7[BANK0 ] unsigned char 
  1744 ;;  VAL             1    8[BANK0 ] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0, pclath, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1754 ;;      Params:         0       0       0       0       0
  1755 ;;      Locals:         0       2       0       0       0
  1756 ;;      Temps:          0       3       0       0       0
  1757 ;;      Totals:         0       5       0       0       0
  1758 ;;Total ram usage:        5 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    2
  1761 ;; This function calls:
  1762 ;;		___awdiv
  1763 ;;		___bmul
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           
  1770                           ;psect for function _decimal
  1771  031C                     _decimal:
  1772                           
  1773                           ;incstack = 0
  1774                           ; Regs used in _decimal: [wreg+status,2+status,0+pclath+cstack]
  1775                           ;decimal@var stored from wreg
  1776  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1777  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1778  031E  00B2               	movwf	decimal@var
  1779  031F                     l1928:
  1780                           
  1781                           ;Lab02.c: 255:     uint8_t VAL;;Lab02.c: 256:     VAL = var;
  1782  031F  0832               	movf	decimal@var,w
  1783  0320  00AF               	movwf	??_decimal
  1784  0321  082F               	movf	??_decimal,w
  1785  0322  00B3               	movwf	decimal@VAL
  1786  0323                     l1930:
  1787                           
  1788                           ;Lab02.c: 257:     cen = (VAL/100) ;
  1789  0323  3064               	movlw	100
  1790  0324  00F3               	movwf	___awdiv@divisor
  1791  0325  3000               	movlw	0
  1792  0326  00F4               	movwf	___awdiv@divisor+1
  1793  0327  0833               	movf	decimal@VAL,w
  1794  0328  00AF               	movwf	??_decimal
  1795  0329  01B0               	clrf	??_decimal+1
  1796  032A  082F               	movf	??_decimal,w
  1797  032B  00F5               	movwf	___awdiv@dividend
  1798  032C  0830               	movf	??_decimal+1,w
  1799  032D  00F6               	movwf	___awdiv@dividend+1
  1800  032E  120A  118A  22B3  120A  118A  	fcall	___awdiv
  1801  0333  0873               	movf	?___awdiv,w
  1802  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0336  00B1               	movwf	??_decimal+2
  1805  0337  0831               	movf	??_decimal+2,w
  1806  0338  00F8               	movwf	_cen
  1807  0339                     l1932:
  1808                           
  1809                           ;Lab02.c: 258:     VAL = (VAL - (cen*100));
  1810  0339  309C               	movlw	156
  1811  033A  00AF               	movwf	??_decimal
  1812  033B  082F               	movf	??_decimal,w
  1813  033C  00F3               	movwf	___bmul@multiplicand
  1814  033D  0878               	movf	_cen,w
  1815  033E  120A  118A  258F  120A  118A  	fcall	___bmul
  1816  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0345  0733               	addwf	decimal@VAL,w
  1819  0346  00B0               	movwf	??_decimal+1
  1820  0347  0830               	movf	??_decimal+1,w
  1821  0348  00B3               	movwf	decimal@VAL
  1822  0349                     l1934:
  1823                           
  1824                           ;Lab02.c: 259:     dec = (VAL/10);
  1825  0349  300A               	movlw	10
  1826  034A  00F3               	movwf	___awdiv@divisor
  1827  034B  3000               	movlw	0
  1828  034C  00F4               	movwf	___awdiv@divisor+1
  1829  034D  0833               	movf	decimal@VAL,w
  1830  034E  00AF               	movwf	??_decimal
  1831  034F  01B0               	clrf	??_decimal+1
  1832  0350  082F               	movf	??_decimal,w
  1833  0351  00F5               	movwf	___awdiv@dividend
  1834  0352  0830               	movf	??_decimal+1,w
  1835  0353  00F6               	movwf	___awdiv@dividend+1
  1836  0354  120A  118A  22B3  120A  118A  	fcall	___awdiv
  1837  0359  0873               	movf	?___awdiv,w
  1838  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1839  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1840  035C  00B1               	movwf	??_decimal+2
  1841  035D  0831               	movf	??_decimal+2,w
  1842  035E  00F9               	movwf	_dec
  1843  035F                     l1936:
  1844                           
  1845                           ;Lab02.c: 260:     VAL = (VAL - (dec*10));
  1846  035F  30F6               	movlw	246
  1847  0360  00AF               	movwf	??_decimal
  1848  0361  082F               	movf	??_decimal,w
  1849  0362  00F3               	movwf	___bmul@multiplicand
  1850  0363  0879               	movf	_dec,w
  1851  0364  120A  118A  258F  120A  118A  	fcall	___bmul
  1852  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1853  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1854  036B  0733               	addwf	decimal@VAL,w
  1855  036C  00B0               	movwf	??_decimal+1
  1856  036D  0830               	movf	??_decimal+1,w
  1857  036E  00B3               	movwf	decimal@VAL
  1858                           
  1859                           ;Lab02.c: 261:     un = (VAL);
  1860  036F  0833               	movf	decimal@VAL,w
  1861  0370  00AF               	movwf	??_decimal
  1862  0371  082F               	movf	??_decimal,w
  1863  0372  00FA               	movwf	_un
  1864  0373                     l1938:
  1865                           
  1866                           ;Lab02.c: 263:     cen = cen + 48;
  1867  0373  0878               	movf	_cen,w
  1868  0374  3E30               	addlw	48
  1869  0375  00AF               	movwf	??_decimal
  1870  0376  082F               	movf	??_decimal,w
  1871  0377  00F8               	movwf	_cen
  1872  0378                     l1940:
  1873                           
  1874                           ;Lab02.c: 264:     dec = dec + 48;
  1875  0378  0879               	movf	_dec,w
  1876  0379  3E30               	addlw	48
  1877  037A  00AF               	movwf	??_decimal
  1878  037B  082F               	movf	??_decimal,w
  1879  037C  00F9               	movwf	_dec
  1880  037D                     l1942:
  1881                           
  1882                           ;Lab02.c: 265:     un = un + 48;
  1883  037D  087A               	movf	_un,w
  1884  037E  3E30               	addlw	48
  1885  037F  00AF               	movwf	??_decimal
  1886  0380  082F               	movf	??_decimal,w
  1887  0381  00FA               	movwf	_un
  1888  0382                     l223:
  1889  0382  0008               	return
  1890  0383                     __end_of_decimal:
  1891                           
  1892                           	psect	text6
  1893  058F                     __ptext6:	
  1894 ;; *************** function ___bmul *****************
  1895 ;; Defined at:
  1896 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  multiplier      1    wreg     unsigned char 
  1899 ;;  multiplicand    1    3[COMMON] unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  multiplier      1    6[COMMON] unsigned char 
  1902 ;;  product         1    5[COMMON] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      unsigned char 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         1       0       0       0       0
  1913 ;;      Locals:         2       0       0       0       0
  1914 ;;      Temps:          1       0       0       0       0
  1915 ;;      Totals:         4       0       0       0       0
  1916 ;;Total ram usage:        4 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_decimal
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function ___bmul
  1928  058F                     ___bmul:
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1932                           ;___bmul@multiplier stored from wreg
  1933  058F  00F6               	movwf	___bmul@multiplier
  1934  0590                     l1444:
  1935  0590  01F5               	clrf	___bmul@product
  1936  0591                     l1446:
  1937  0591  1C76               	btfss	___bmul@multiplier,0
  1938  0592  2D94               	goto	u511
  1939  0593  2D95               	goto	u510
  1940  0594                     u511:
  1941  0594  2D99               	goto	l1450
  1942  0595                     u510:
  1943  0595                     l1448:
  1944  0595  0873               	movf	___bmul@multiplicand,w
  1945  0596  00F4               	movwf	??___bmul
  1946  0597  0874               	movf	??___bmul,w
  1947  0598  07F5               	addwf	___bmul@product,f
  1948  0599                     l1450:
  1949  0599  1003               	clrc
  1950  059A  0DF3               	rlf	___bmul@multiplicand,f
  1951  059B                     l1452:
  1952  059B  1003               	clrc
  1953  059C  0CF6               	rrf	___bmul@multiplier,f
  1954  059D  0876               	movf	___bmul@multiplier,w
  1955  059E  1D03               	btfss	3,2
  1956  059F  2DA1               	goto	u521
  1957  05A0  2DA2               	goto	u520
  1958  05A1                     u521:
  1959  05A1  2D91               	goto	l1446
  1960  05A2                     u520:
  1961  05A2                     l1454:
  1962  05A2  0875               	movf	___bmul@product,w
  1963  05A3                     l392:
  1964  05A3  0008               	return
  1965  05A4                     __end_of___bmul:
  1966                           
  1967                           	psect	text7
  1968  02B3                     __ptext7:	
  1969 ;; *************** function ___awdiv *****************
  1970 ;; Defined at:
  1971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  divisor         2    3[COMMON] int 
  1974 ;;  dividend        2    5[COMMON] int 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  quotient        2    2[BANK0 ] int 
  1977 ;;  sign            1    1[BANK0 ] unsigned char 
  1978 ;;  counter         1    0[BANK0 ] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2    3[COMMON] int 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         4       0       0       0       0
  1989 ;;      Locals:         0       4       0       0       0
  1990 ;;      Temps:          1       0       0       0       0
  1991 ;;      Totals:         5       4       0       0       0
  1992 ;;Total ram usage:        9 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_decimal
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           
  2003                           ;psect for function ___awdiv
  2004  02B3                     ___awdiv:
  2005  02B3                     l1458:	
  2006                           ;incstack = 0
  2007                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2008                           
  2009  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2010  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2011  02B5  01AC               	clrf	___awdiv@sign
  2012  02B6                     l1460:
  2013  02B6  1FF4               	btfss	___awdiv@divisor+1,7
  2014  02B7  2AB9               	goto	u531
  2015  02B8  2ABA               	goto	u530
  2016  02B9                     u531:
  2017  02B9  2AC1               	goto	l1466
  2018  02BA                     u530:
  2019  02BA                     l1462:
  2020  02BA  09F3               	comf	___awdiv@divisor,f
  2021  02BB  09F4               	comf	___awdiv@divisor+1,f
  2022  02BC  0AF3               	incf	___awdiv@divisor,f
  2023  02BD  1903               	skipnz
  2024  02BE  0AF4               	incf	___awdiv@divisor+1,f
  2025  02BF                     l1464:
  2026  02BF  01AC               	clrf	___awdiv@sign
  2027  02C0  0AAC               	incf	___awdiv@sign,f
  2028  02C1                     l1466:
  2029  02C1  1FF6               	btfss	___awdiv@dividend+1,7
  2030  02C2  2AC4               	goto	u541
  2031  02C3  2AC5               	goto	u540
  2032  02C4                     u541:
  2033  02C4  2ACE               	goto	l1472
  2034  02C5                     u540:
  2035  02C5                     l1468:
  2036  02C5  09F5               	comf	___awdiv@dividend,f
  2037  02C6  09F6               	comf	___awdiv@dividend+1,f
  2038  02C7  0AF5               	incf	___awdiv@dividend,f
  2039  02C8  1903               	skipnz
  2040  02C9  0AF6               	incf	___awdiv@dividend+1,f
  2041  02CA                     l1470:
  2042  02CA  3001               	movlw	1
  2043  02CB  00F7               	movwf	??___awdiv
  2044  02CC  0877               	movf	??___awdiv,w
  2045  02CD  06AC               	xorwf	___awdiv@sign,f
  2046  02CE                     l1472:
  2047  02CE  01AD               	clrf	___awdiv@quotient
  2048  02CF  01AE               	clrf	___awdiv@quotient+1
  2049  02D0                     l1474:
  2050  02D0  0873               	movf	___awdiv@divisor,w
  2051  02D1  0474               	iorwf	___awdiv@divisor+1,w
  2052  02D2  1903               	btfsc	3,2
  2053  02D3  2AD5               	goto	u551
  2054  02D4  2AD6               	goto	u550
  2055  02D5                     u551:
  2056  02D5  2B0D               	goto	l1494
  2057  02D6                     u550:
  2058  02D6                     l1476:
  2059  02D6  01AB               	clrf	___awdiv@counter
  2060  02D7  0AAB               	incf	___awdiv@counter,f
  2061  02D8  2AE4               	goto	l1482
  2062  02D9                     l1478:
  2063  02D9  3001               	movlw	1
  2064  02DA                     u565:
  2065  02DA  1003               	clrc
  2066  02DB  0DF3               	rlf	___awdiv@divisor,f
  2067  02DC  0DF4               	rlf	___awdiv@divisor+1,f
  2068  02DD  3EFF               	addlw	-1
  2069  02DE  1D03               	skipz
  2070  02DF  2ADA               	goto	u565
  2071  02E0                     l1480:
  2072  02E0  3001               	movlw	1
  2073  02E1  00F7               	movwf	??___awdiv
  2074  02E2  0877               	movf	??___awdiv,w
  2075  02E3  07AB               	addwf	___awdiv@counter,f
  2076  02E4                     l1482:
  2077  02E4  1FF4               	btfss	___awdiv@divisor+1,7
  2078  02E5  2AE7               	goto	u571
  2079  02E6  2AE8               	goto	u570
  2080  02E7                     u571:
  2081  02E7  2AD9               	goto	l1478
  2082  02E8                     u570:
  2083  02E8                     l1484:
  2084  02E8  3001               	movlw	1
  2085  02E9                     u585:
  2086  02E9  1003               	clrc
  2087  02EA  0DAD               	rlf	___awdiv@quotient,f
  2088  02EB  0DAE               	rlf	___awdiv@quotient+1,f
  2089  02EC  3EFF               	addlw	-1
  2090  02ED  1D03               	skipz
  2091  02EE  2AE9               	goto	u585
  2092  02EF  0874               	movf	___awdiv@divisor+1,w
  2093  02F0  0276               	subwf	___awdiv@dividend+1,w
  2094  02F1  1D03               	skipz
  2095  02F2  2AF5               	goto	u595
  2096  02F3  0873               	movf	___awdiv@divisor,w
  2097  02F4  0275               	subwf	___awdiv@dividend,w
  2098  02F5                     u595:
  2099  02F5  1C03               	skipc
  2100  02F6  2AF8               	goto	u591
  2101  02F7  2AF9               	goto	u590
  2102  02F8                     u591:
  2103  02F8  2B00               	goto	l1490
  2104  02F9                     u590:
  2105  02F9                     l1486:
  2106  02F9  0873               	movf	___awdiv@divisor,w
  2107  02FA  02F5               	subwf	___awdiv@dividend,f
  2108  02FB  0874               	movf	___awdiv@divisor+1,w
  2109  02FC  1C03               	skipc
  2110  02FD  03F6               	decf	___awdiv@dividend+1,f
  2111  02FE  02F6               	subwf	___awdiv@dividend+1,f
  2112  02FF                     l1488:
  2113  02FF  142D               	bsf	___awdiv@quotient,0
  2114  0300                     l1490:
  2115  0300  3001               	movlw	1
  2116  0301                     u605:
  2117  0301  1003               	clrc
  2118  0302  0CF4               	rrf	___awdiv@divisor+1,f
  2119  0303  0CF3               	rrf	___awdiv@divisor,f
  2120  0304  3EFF               	addlw	-1
  2121  0305  1D03               	skipz
  2122  0306  2B01               	goto	u605
  2123  0307                     l1492:
  2124  0307  3001               	movlw	1
  2125  0308  02AB               	subwf	___awdiv@counter,f
  2126  0309  1D03               	btfss	3,2
  2127  030A  2B0C               	goto	u611
  2128  030B  2B0D               	goto	u610
  2129  030C                     u611:
  2130  030C  2AE8               	goto	l1484
  2131  030D                     u610:
  2132  030D                     l1494:
  2133  030D  082C               	movf	___awdiv@sign,w
  2134  030E  1903               	btfsc	3,2
  2135  030F  2B11               	goto	u621
  2136  0310  2B12               	goto	u620
  2137  0311                     u621:
  2138  0311  2B17               	goto	l1498
  2139  0312                     u620:
  2140  0312                     l1496:
  2141  0312  09AD               	comf	___awdiv@quotient,f
  2142  0313  09AE               	comf	___awdiv@quotient+1,f
  2143  0314  0AAD               	incf	___awdiv@quotient,f
  2144  0315  1903               	skipnz
  2145  0316  0AAE               	incf	___awdiv@quotient+1,f
  2146  0317                     l1498:
  2147  0317  082E               	movf	___awdiv@quotient+1,w
  2148  0318  00F4               	movwf	?___awdiv+1
  2149  0319  082D               	movf	___awdiv@quotient,w
  2150  031A  00F3               	movwf	?___awdiv
  2151  031B                     l519:
  2152  031B  0008               	return
  2153  031C                     __end_of___awdiv:
  2154                           
  2155                           	psect	text8
  2156  01B3                     __ptext8:	
  2157 ;; *************** function _chselect *****************
  2158 ;; Defined at:
  2159 ;;		line 94 in file "./config_ADC.h"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  cant            1    wreg     unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  cant            1    6[COMMON] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2173 ;;      Params:         0       0       0       0       0
  2174 ;;      Locals:         1       0       0       0       0
  2175 ;;      Temps:          3       0       0       0       0
  2176 ;;      Totals:         4       0       0       0       0
  2177 ;;Total ram usage:        4 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _chselect
  2189  01B3                     _chselect:
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _chselect: [wreg-fsr0h+status,2+status,0]
  2193                           ;chselect@cant stored from wreg
  2194  01B3  00F6               	movwf	chselect@cant
  2195  01B4                     l1502:
  2196                           
  2197                           ;./config_ADC.h: 95:     if(ADCON0bits.GO == 0){
  2198  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2199  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2200  01B6  189F               	btfsc	31,1	;volatile
  2201  01B7  29B9               	goto	u631
  2202  01B8  29BA               	goto	u630
  2203  01B9                     u631:
  2204  01B9  2AAA               	goto	l1590
  2205  01BA                     u630:
  2206  01BA  2A73               	goto	l1588
  2207  01BB                     l1506:
  2208                           
  2209                           ;./config_ADC.h: 99:             if (cant == 1){
  2210  01BB  0376               	decf	chselect@cant,w
  2211  01BC  1D03               	btfss	3,2
  2212  01BD  29BF               	goto	u641
  2213  01BE  29C0               	goto	u640
  2214  01BF                     u641:
  2215  01BF  29C3               	goto	l1510
  2216  01C0                     u640:
  2217  01C0                     l1508:
  2218                           
  2219                           ;./config_ADC.h: 100:                 ADCON0bits.CHS = 0;
  2220  01C0  30C3               	movlw	-61
  2221  01C1  059F               	andwf	31,f	;volatile
  2222                           
  2223                           ;./config_ADC.h: 101:             }
  2224  01C2  2AAA               	goto	l1590
  2225  01C3                     l1510:
  2226                           
  2227                           ;./config_ADC.h: 103:                 ADCON0bits.CHS = 1;
  2228  01C3  081F               	movf	31,w	;volatile
  2229  01C4  39C3               	andlw	-61
  2230  01C5  3804               	iorlw	4
  2231  01C6  009F               	movwf	31	;volatile
  2232  01C7  2AAA               	goto	l1590
  2233  01C8                     l1512:
  2234                           
  2235                           ;./config_ADC.h: 107:             if (cant == 2){
  2236  01C8  3002               	movlw	2
  2237  01C9  0676               	xorwf	chselect@cant,w
  2238  01CA  1D03               	btfss	3,2
  2239  01CB  29CD               	goto	u651
  2240  01CC  29CE               	goto	u650
  2241  01CD                     u651:
  2242  01CD  29D1               	goto	l1516
  2243  01CE                     u650:
  2244  01CE                     l1514:
  2245                           
  2246                           ;./config_ADC.h: 108:                 ADCON0bits.CHS = 0;
  2247  01CE  30C3               	movlw	-61
  2248  01CF  059F               	andwf	31,f	;volatile
  2249                           
  2250                           ;./config_ADC.h: 109:             }
  2251  01D0  2AAA               	goto	l1590
  2252  01D1                     l1516:
  2253                           
  2254                           ;./config_ADC.h: 111:                 ADCON0bits.CHS = 2;
  2255  01D1  081F               	movf	31,w	;volatile
  2256  01D2  39C3               	andlw	-61
  2257  01D3  3808               	iorlw	8
  2258  01D4  009F               	movwf	31	;volatile
  2259  01D5  2AAA               	goto	l1590
  2260  01D6                     l1518:
  2261                           
  2262                           ;./config_ADC.h: 115:             if (cant == 3){
  2263  01D6  3003               	movlw	3
  2264  01D7  0676               	xorwf	chselect@cant,w
  2265  01D8  1D03               	btfss	3,2
  2266  01D9  29DB               	goto	u661
  2267  01DA  29DC               	goto	u660
  2268  01DB                     u661:
  2269  01DB  29DF               	goto	l1522
  2270  01DC                     u660:
  2271  01DC                     l1520:
  2272                           
  2273                           ;./config_ADC.h: 116:                 ADCON0bits.CHS = 0;
  2274  01DC  30C3               	movlw	-61
  2275  01DD  059F               	andwf	31,f	;volatile
  2276                           
  2277                           ;./config_ADC.h: 117:             }
  2278  01DE  2AAA               	goto	l1590
  2279  01DF                     l1522:
  2280                           
  2281                           ;./config_ADC.h: 119:                 ADCON0bits.CHS = 3;
  2282  01DF  081F               	movf	31,w	;volatile
  2283  01E0  39C3               	andlw	-61
  2284  01E1  380C               	iorlw	12
  2285  01E2  009F               	movwf	31	;volatile
  2286  01E3  2AAA               	goto	l1590
  2287  01E4                     l1524:
  2288                           
  2289                           ;./config_ADC.h: 123:             if (cant == 4){
  2290  01E4  3004               	movlw	4
  2291  01E5  0676               	xorwf	chselect@cant,w
  2292  01E6  1D03               	btfss	3,2
  2293  01E7  29E9               	goto	u671
  2294  01E8  29EA               	goto	u670
  2295  01E9                     u671:
  2296  01E9  29ED               	goto	l1528
  2297  01EA                     u670:
  2298  01EA                     l1526:
  2299                           
  2300                           ;./config_ADC.h: 124:                 ADCON0bits.CHS = 0;
  2301  01EA  30C3               	movlw	-61
  2302  01EB  059F               	andwf	31,f	;volatile
  2303                           
  2304                           ;./config_ADC.h: 125:             }
  2305  01EC  2AAA               	goto	l1590
  2306  01ED                     l1528:
  2307                           
  2308                           ;./config_ADC.h: 127:                 ADCON0bits.CHS = 4;
  2309  01ED  081F               	movf	31,w	;volatile
  2310  01EE  39C3               	andlw	-61
  2311  01EF  3810               	iorlw	16
  2312  01F0  009F               	movwf	31	;volatile
  2313  01F1  2AAA               	goto	l1590
  2314  01F2                     l1530:
  2315                           
  2316                           ;./config_ADC.h: 131:             if (cant == 5){
  2317  01F2  3005               	movlw	5
  2318  01F3  0676               	xorwf	chselect@cant,w
  2319  01F4  1D03               	btfss	3,2
  2320  01F5  29F7               	goto	u681
  2321  01F6  29F8               	goto	u680
  2322  01F7                     u681:
  2323  01F7  29FB               	goto	l1534
  2324  01F8                     u680:
  2325  01F8                     l1532:
  2326                           
  2327                           ;./config_ADC.h: 132:                 ADCON0bits.CHS = 0;
  2328  01F8  30C3               	movlw	-61
  2329  01F9  059F               	andwf	31,f	;volatile
  2330                           
  2331                           ;./config_ADC.h: 133:             }
  2332  01FA  2AAA               	goto	l1590
  2333  01FB                     l1534:
  2334                           
  2335                           ;./config_ADC.h: 135:                 ADCON0bits.CHS = 5;
  2336  01FB  081F               	movf	31,w	;volatile
  2337  01FC  39C3               	andlw	-61
  2338  01FD  3814               	iorlw	20
  2339  01FE  009F               	movwf	31	;volatile
  2340  01FF  2AAA               	goto	l1590
  2341  0200                     l1536:
  2342                           
  2343                           ;./config_ADC.h: 139:             if (cant == 6){
  2344  0200  3006               	movlw	6
  2345  0201  0676               	xorwf	chselect@cant,w
  2346  0202  1D03               	btfss	3,2
  2347  0203  2A05               	goto	u691
  2348  0204  2A06               	goto	u690
  2349  0205                     u691:
  2350  0205  2A09               	goto	l1540
  2351  0206                     u690:
  2352  0206                     l1538:
  2353                           
  2354                           ;./config_ADC.h: 140:                 ADCON0bits.CHS = 0;
  2355  0206  30C3               	movlw	-61
  2356  0207  059F               	andwf	31,f	;volatile
  2357                           
  2358                           ;./config_ADC.h: 141:             }
  2359  0208  2AAA               	goto	l1590
  2360  0209                     l1540:
  2361                           
  2362                           ;./config_ADC.h: 143:                 ADCON0bits.CHS = 6;
  2363  0209  081F               	movf	31,w	;volatile
  2364  020A  39C3               	andlw	-61
  2365  020B  3818               	iorlw	24
  2366  020C  009F               	movwf	31	;volatile
  2367  020D  2AAA               	goto	l1590
  2368  020E                     l1542:
  2369                           
  2370                           ;./config_ADC.h: 147:             if (cant == 7){
  2371  020E  3007               	movlw	7
  2372  020F  0676               	xorwf	chselect@cant,w
  2373  0210  1D03               	btfss	3,2
  2374  0211  2A13               	goto	u701
  2375  0212  2A14               	goto	u700
  2376  0213                     u701:
  2377  0213  2A17               	goto	l1546
  2378  0214                     u700:
  2379  0214                     l1544:
  2380                           
  2381                           ;./config_ADC.h: 148:                 ADCON0bits.CHS = 0;
  2382  0214  30C3               	movlw	-61
  2383  0215  059F               	andwf	31,f	;volatile
  2384                           
  2385                           ;./config_ADC.h: 149:             }
  2386  0216  2AAA               	goto	l1590
  2387  0217                     l1546:
  2388                           
  2389                           ;./config_ADC.h: 151:                 ADCON0bits.CHS = 7;
  2390  0217  081F               	movf	31,w	;volatile
  2391  0218  39C3               	andlw	-61
  2392  0219  381C               	iorlw	28
  2393  021A  009F               	movwf	31	;volatile
  2394  021B  2AAA               	goto	l1590
  2395  021C                     l1548:
  2396                           
  2397                           ;./config_ADC.h: 155:             if (cant == 8){
  2398  021C  3008               	movlw	8
  2399  021D  0676               	xorwf	chselect@cant,w
  2400  021E  1D03               	btfss	3,2
  2401  021F  2A21               	goto	u711
  2402  0220  2A22               	goto	u710
  2403  0221                     u711:
  2404  0221  2A25               	goto	l1552
  2405  0222                     u710:
  2406  0222                     l1550:
  2407                           
  2408                           ;./config_ADC.h: 156:                 ADCON0bits.CHS = 0;
  2409  0222  30C3               	movlw	-61
  2410  0223  059F               	andwf	31,f	;volatile
  2411                           
  2412                           ;./config_ADC.h: 157:             }
  2413  0224  2AAA               	goto	l1590
  2414  0225                     l1552:
  2415                           
  2416                           ;./config_ADC.h: 159:                 ADCON0bits.CHS = 8;
  2417  0225  081F               	movf	31,w	;volatile
  2418  0226  39C3               	andlw	-61
  2419  0227  3820               	iorlw	32
  2420  0228  009F               	movwf	31	;volatile
  2421  0229  2AAA               	goto	l1590
  2422  022A                     l1554:
  2423                           
  2424                           ;./config_ADC.h: 163:             if (cant == 9){
  2425  022A  3009               	movlw	9
  2426  022B  0676               	xorwf	chselect@cant,w
  2427  022C  1D03               	btfss	3,2
  2428  022D  2A2F               	goto	u721
  2429  022E  2A30               	goto	u720
  2430  022F                     u721:
  2431  022F  2A33               	goto	l1558
  2432  0230                     u720:
  2433  0230                     l1556:
  2434                           
  2435                           ;./config_ADC.h: 164:                 ADCON0bits.CHS = 0;
  2436  0230  30C3               	movlw	-61
  2437  0231  059F               	andwf	31,f	;volatile
  2438                           
  2439                           ;./config_ADC.h: 165:             }
  2440  0232  2AAA               	goto	l1590
  2441  0233                     l1558:
  2442                           
  2443                           ;./config_ADC.h: 167:                 ADCON0bits.CHS = 9;
  2444  0233  081F               	movf	31,w	;volatile
  2445  0234  39C3               	andlw	-61
  2446  0235  3824               	iorlw	36
  2447  0236  009F               	movwf	31	;volatile
  2448  0237  2AAA               	goto	l1590
  2449  0238                     l1560:
  2450                           
  2451                           ;./config_ADC.h: 171:             if (cant == 10){
  2452  0238  300A               	movlw	10
  2453  0239  0676               	xorwf	chselect@cant,w
  2454  023A  1D03               	btfss	3,2
  2455  023B  2A3D               	goto	u731
  2456  023C  2A3E               	goto	u730
  2457  023D                     u731:
  2458  023D  2A41               	goto	l1564
  2459  023E                     u730:
  2460  023E                     l1562:
  2461                           
  2462                           ;./config_ADC.h: 172:                 ADCON0bits.CHS = 0;
  2463  023E  30C3               	movlw	-61
  2464  023F  059F               	andwf	31,f	;volatile
  2465                           
  2466                           ;./config_ADC.h: 173:             }
  2467  0240  2AAA               	goto	l1590
  2468  0241                     l1564:
  2469                           
  2470                           ;./config_ADC.h: 175:                 ADCON0bits.CHS = 10;
  2471  0241  081F               	movf	31,w	;volatile
  2472  0242  39C3               	andlw	-61
  2473  0243  3828               	iorlw	40
  2474  0244  009F               	movwf	31	;volatile
  2475  0245  2AAA               	goto	l1590
  2476  0246                     l1566:
  2477                           
  2478                           ;./config_ADC.h: 179:             if (cant == 11){
  2479  0246  300B               	movlw	11
  2480  0247  0676               	xorwf	chselect@cant,w
  2481  0248  1D03               	btfss	3,2
  2482  0249  2A4B               	goto	u741
  2483  024A  2A4C               	goto	u740
  2484  024B                     u741:
  2485  024B  2A4F               	goto	l1570
  2486  024C                     u740:
  2487  024C                     l1568:
  2488                           
  2489                           ;./config_ADC.h: 180:                 ADCON0bits.CHS = 0;
  2490  024C  30C3               	movlw	-61
  2491  024D  059F               	andwf	31,f	;volatile
  2492                           
  2493                           ;./config_ADC.h: 181:             }
  2494  024E  2AAA               	goto	l1590
  2495  024F                     l1570:
  2496                           
  2497                           ;./config_ADC.h: 183:                 ADCON0bits.CHS = 11;
  2498  024F  081F               	movf	31,w	;volatile
  2499  0250  39C3               	andlw	-61
  2500  0251  382C               	iorlw	44
  2501  0252  009F               	movwf	31	;volatile
  2502  0253  2AAA               	goto	l1590
  2503  0254                     l1572:
  2504                           
  2505                           ;./config_ADC.h: 187:             if (cant == 12){
  2506  0254  300C               	movlw	12
  2507  0255  0676               	xorwf	chselect@cant,w
  2508  0256  1D03               	btfss	3,2
  2509  0257  2A59               	goto	u751
  2510  0258  2A5A               	goto	u750
  2511  0259                     u751:
  2512  0259  2A5D               	goto	l1576
  2513  025A                     u750:
  2514  025A                     l1574:
  2515                           
  2516                           ;./config_ADC.h: 188:                 ADCON0bits.CHS = 0;
  2517  025A  30C3               	movlw	-61
  2518  025B  059F               	andwf	31,f	;volatile
  2519                           
  2520                           ;./config_ADC.h: 189:             }
  2521  025C  2AAA               	goto	l1590
  2522  025D                     l1576:
  2523                           
  2524                           ;./config_ADC.h: 191:                 ADCON0bits.CHS = 12;
  2525  025D  081F               	movf	31,w	;volatile
  2526  025E  39C3               	andlw	-61
  2527  025F  3830               	iorlw	48
  2528  0260  009F               	movwf	31	;volatile
  2529  0261  2AAA               	goto	l1590
  2530  0262                     l1578:
  2531                           
  2532                           ;./config_ADC.h: 195:             if (cant == 13){
  2533  0262  300D               	movlw	13
  2534  0263  0676               	xorwf	chselect@cant,w
  2535  0264  1D03               	btfss	3,2
  2536  0265  2A67               	goto	u761
  2537  0266  2A68               	goto	u760
  2538  0267                     u761:
  2539  0267  2A6B               	goto	l1582
  2540  0268                     u760:
  2541  0268                     l1580:
  2542                           
  2543                           ;./config_ADC.h: 196:                 ADCON0bits.CHS = 0;
  2544  0268  30C3               	movlw	-61
  2545  0269  059F               	andwf	31,f	;volatile
  2546                           
  2547                           ;./config_ADC.h: 197:             }
  2548  026A  2AAA               	goto	l1590
  2549  026B                     l1582:
  2550                           
  2551                           ;./config_ADC.h: 199:                 ADCON0bits.CHS = 13;
  2552  026B  081F               	movf	31,w	;volatile
  2553  026C  39C3               	andlw	-61
  2554  026D  3834               	iorlw	52
  2555  026E  009F               	movwf	31	;volatile
  2556  026F  2AAA               	goto	l1590
  2557  0270                     l1584:
  2558                           
  2559                           ;./config_ADC.h: 203:                 ADCON0bits.CHS = 0;
  2560  0270  30C3               	movlw	-61
  2561  0271  059F               	andwf	31,f	;volatile
  2562                           
  2563                           ;./config_ADC.h: 204:             break;
  2564  0272  2AAA               	goto	l1590
  2565  0273                     l1588:
  2566  0273  0C1F               	rrf	31,w	;volatile
  2567  0274  00F3               	movwf	??_chselect
  2568  0275  0C73               	rrf	??_chselect,w
  2569  0276  390F               	andlw	15
  2570  0277  00F4               	movwf	??_chselect+1
  2571  0278  01F5               	clrf	??_chselect+2
  2572                           
  2573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2574                           ; Switch size 1, requested type "simple"
  2575                           ; Number of cases is 1, Range of values is 0 to 0
  2576                           ; switch strategies available:
  2577                           ; Name         Instructions Cycles
  2578                           ; simple_byte            4     3 (average)
  2579                           ; direct_byte           11     8 (fixed)
  2580                           ; jumptable            260     6 (fixed)
  2581                           ;	Chosen strategy is simple_byte
  2582  0279  0875               	movf	??_chselect+2,w
  2583  027A  3A00               	xorlw	0	; case 0
  2584  027B  1903               	skipnz
  2585  027C  2A7E               	goto	l2062
  2586  027D  2AAA               	goto	l1590
  2587  027E                     l2062:
  2588                           
  2589                           ; Switch size 1, requested type "simple"
  2590                           ; Number of cases is 14, Range of values is 0 to 13
  2591                           ; switch strategies available:
  2592                           ; Name         Instructions Cycles
  2593                           ; simple_byte           43    22 (average)
  2594                           ; direct_byte           50     8 (fixed)
  2595                           ; jumptable            260     6 (fixed)
  2596                           ;	Chosen strategy is simple_byte
  2597  027E  0874               	movf	??_chselect+1,w
  2598  027F  3A00               	xorlw	0	; case 0
  2599  0280  1903               	skipnz
  2600  0281  29BB               	goto	l1506
  2601  0282  3A01               	xorlw	1	; case 1
  2602  0283  1903               	skipnz
  2603  0284  29C8               	goto	l1512
  2604  0285  3A03               	xorlw	3	; case 2
  2605  0286  1903               	skipnz
  2606  0287  29D6               	goto	l1518
  2607  0288  3A01               	xorlw	1	; case 3
  2608  0289  1903               	skipnz
  2609  028A  29E4               	goto	l1524
  2610  028B  3A07               	xorlw	7	; case 4
  2611  028C  1903               	skipnz
  2612  028D  29F2               	goto	l1530
  2613  028E  3A01               	xorlw	1	; case 5
  2614  028F  1903               	skipnz
  2615  0290  2A00               	goto	l1536
  2616  0291  3A03               	xorlw	3	; case 6
  2617  0292  1903               	skipnz
  2618  0293  2A0E               	goto	l1542
  2619  0294  3A01               	xorlw	1	; case 7
  2620  0295  1903               	skipnz
  2621  0296  2A1C               	goto	l1548
  2622  0297  3A0F               	xorlw	15	; case 8
  2623  0298  1903               	skipnz
  2624  0299  2A2A               	goto	l1554
  2625  029A  3A01               	xorlw	1	; case 9
  2626  029B  1903               	skipnz
  2627  029C  2A38               	goto	l1560
  2628  029D  3A03               	xorlw	3	; case 10
  2629  029E  1903               	skipnz
  2630  029F  2A46               	goto	l1566
  2631  02A0  3A01               	xorlw	1	; case 11
  2632  02A1  1903               	skipnz
  2633  02A2  2A54               	goto	l1572
  2634  02A3  3A07               	xorlw	7	; case 12
  2635  02A4  1903               	skipnz
  2636  02A5  2A62               	goto	l1578
  2637  02A6  3A01               	xorlw	1	; case 13
  2638  02A7  1903               	skipnz
  2639  02A8  2A70               	goto	l1584
  2640  02A9  2AAA               	goto	l1590
  2641  02AA                     l1590:
  2642                           
  2643                           ;./config_ADC.h: 207:     _delay((unsigned long)((150)*(4000000/4000000.0)));
  2644  02AA  3031               	movlw	49
  2645  02AB  00F3               	movwf	??_chselect
  2646  02AC                     u1317:
  2647  02AC  0BF3               	decfsz	??_chselect,f
  2648  02AD  2AAC               	goto	u1317
  2649  02AE  2AAF               	nop2
  2650  02AF                     l1592:
  2651                           
  2652                           ;./config_ADC.h: 208:     ADCON0bits.GO = 1;
  2653  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2654  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2655  02B1  149F               	bsf	31,1	;volatile
  2656  02B2                     l137:
  2657  02B2  0008               	return
  2658  02B3                     __end_of_chselect:
  2659                           
  2660                           	psect	text9
  2661  04EC                     __ptext9:	
  2662 ;; *************** function _Lcd_Write_String *****************
  2663 ;; Defined at:
  2664 ;;		line 78 in file "LCD.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  a               1    wreg     PTR unsigned char 
  2667 ;;		 -> STR_5(2), STR_2(4), STR_1(16), 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2670 ;;		 -> STR_5(2), STR_2(4), STR_1(16), 
  2671 ;;  i               2    0[BANK0 ] int 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         0       3       0       0       0
  2683 ;;      Temps:          0       0       0       0       0
  2684 ;;      Totals:         0       3       0       0       0
  2685 ;;Total ram usage:        3 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    3
  2688 ;; This function calls:
  2689 ;;		_Lcd_Write_Char
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _Lcd_Write_String
  2697  04EC                     _Lcd_Write_String:
  2698                           
  2699                           ;incstack = 0
  2700                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2701                           ;Lcd_Write_String@a stored from wreg
  2702  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2703  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2704  04EE  00AD               	movwf	Lcd_Write_String@a
  2705  04EF                     l1920:
  2706                           
  2707                           ;LCD.c: 79:     int i;;LCD.c: 80:     for (i = 0; a[i] != '\0'; i++)
  2708  04EF  01AB               	clrf	Lcd_Write_String@i
  2709  04F0  01AC               	clrf	Lcd_Write_String@i+1
  2710  04F1  2D07               	goto	l1926
  2711  04F2                     l1922:
  2712                           
  2713                           ;LCD.c: 81:         Lcd_Write_Char(a[i]);
  2714  04F2  082B               	movf	Lcd_Write_String@i,w
  2715  04F3  072D               	addwf	Lcd_Write_String@a,w
  2716  04F4  0084               	movwf	4
  2717  04F5  120A  118A  246C  120A  118A  	fcall	stringdir
  2718  04FA  120A  118A  2558  120A  118A  	fcall	_Lcd_Write_Char
  2719  04FF                     l1924:
  2720  04FF  3001               	movlw	1
  2721  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0502  07AB               	addwf	Lcd_Write_String@i,f
  2724  0503  1803               	skipnc
  2725  0504  0AAC               	incf	Lcd_Write_String@i+1,f
  2726  0505  3000               	movlw	0
  2727  0506  07AC               	addwf	Lcd_Write_String@i+1,f
  2728  0507                     l1926:
  2729  0507  082B               	movf	Lcd_Write_String@i,w
  2730  0508  072D               	addwf	Lcd_Write_String@a,w
  2731  0509  0084               	movwf	4
  2732  050A  120A  118A  246C  120A  118A  	fcall	stringdir
  2733  050F  3A00               	xorlw	0
  2734  0510  1D03               	skipz
  2735  0511  2D13               	goto	u1031
  2736  0512  2D14               	goto	u1030
  2737  0513                     u1031:
  2738  0513  2CF2               	goto	l1922
  2739  0514                     u1030:
  2740  0514                     l264:
  2741  0514  0008               	return
  2742  0515                     __end_of_Lcd_Write_String:
  2743                           
  2744                           	psect	text10
  2745  0558                     __ptext10:	
  2746 ;; *************** function _Lcd_Write_Char *****************
  2747 ;; Defined at:
  2748 ;;		line 67 in file "LCD.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  a               1    wreg     unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  a               1    5[COMMON] unsigned char 
  2753 ;;  y               1    7[COMMON] unsigned char 
  2754 ;;  temp            1    6[COMMON] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, pclath, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2764 ;;      Params:         0       0       0       0       0
  2765 ;;      Locals:         3       0       0       0       0
  2766 ;;      Temps:          1       0       0       0       0
  2767 ;;      Totals:         4       0       0       0       0
  2768 ;;Total ram usage:        4 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    2
  2771 ;; This function calls:
  2772 ;;		_Lcd_Port
  2773 ;; This function is called by:
  2774 ;;		_main
  2775 ;;		_Lcd_Write_String
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           
  2780                           ;psect for function _Lcd_Write_Char
  2781  0558                     _Lcd_Write_Char:
  2782                           
  2783                           ;incstack = 0
  2784                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2785                           ;Lcd_Write_Char@a stored from wreg
  2786  0558  00F5               	movwf	Lcd_Write_Char@a
  2787  0559                     l1866:
  2788                           
  2789                           ;LCD.c: 68:     char temp, y;;LCD.c: 69:     temp = a;
  2790  0559  0875               	movf	Lcd_Write_Char@a,w
  2791  055A  00F4               	movwf	??_Lcd_Write_Char
  2792  055B  0874               	movf	??_Lcd_Write_Char,w
  2793  055C  00F6               	movwf	Lcd_Write_Char@temp
  2794                           
  2795                           ;LCD.c: 70:     y = temp;
  2796  055D  0876               	movf	Lcd_Write_Char@temp,w
  2797  055E  00F4               	movwf	??_Lcd_Write_Char
  2798  055F  0874               	movf	??_Lcd_Write_Char,w
  2799  0560  00F7               	movwf	Lcd_Write_Char@y
  2800  0561                     l1868:
  2801                           
  2802                           ;LCD.c: 71:     RE0 = 1;
  2803  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0562  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0563  1409               	bsf	9,0	;volatile
  2806  0564                     l1870:
  2807                           
  2808                           ;LCD.c: 72:     Lcd_Port(y);
  2809  0564  0877               	movf	Lcd_Write_Char@y,w
  2810  0565  120A  118A  25BB  120A  118A  	fcall	_Lcd_Port
  2811  056A                     l1872:
  2812                           
  2813                           ;LCD.c: 73:     RE1 = 1;
  2814  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2815  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2816  056C  1489               	bsf	9,1	;volatile
  2817  056D                     l1874:
  2818                           
  2819                           ;LCD.c: 74:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2820  056D  300D               	movlw	13
  2821  056E  00F4               	movwf	??_Lcd_Write_Char
  2822  056F                     u1327:
  2823  056F  0BF4               	decfsz	??_Lcd_Write_Char,f
  2824  0570  2D6F               	goto	u1327
  2825  0571                     l1876:
  2826                           
  2827                           ;LCD.c: 75:     RE1 = 0;
  2828  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2830  0573  1089               	bcf	9,1	;volatile
  2831  0574                     l258:
  2832  0574  0008               	return
  2833  0575                     __end_of_Lcd_Write_Char:
  2834                           
  2835                           	psect	text11
  2836  0383                     __ptext11:	
  2837 ;; *************** function _Lcd_Set_Cursor *****************
  2838 ;; Defined at:
  2839 ;;		line 33 in file "LCD.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  a               1    wreg     unsigned char 
  2842 ;;  b               1    7[COMMON] unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  a               1    2[BANK0 ] unsigned char 
  2845 ;;  temp            1    5[BANK0 ] unsigned char 
  2846 ;;  y               1    4[BANK0 ] unsigned char 
  2847 ;;  z               1    3[BANK0 ] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0, pclath, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         1       0       0       0       0
  2858 ;;      Locals:         0       4       0       0       0
  2859 ;;      Temps:          0       2       0       0       0
  2860 ;;      Totals:         1       6       0       0       0
  2861 ;;Total ram usage:        7 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    3
  2864 ;; This function calls:
  2865 ;;		_Lcd_Cmd
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _Lcd_Set_Cursor
  2873  0383                     _Lcd_Set_Cursor:
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2877                           ;Lcd_Set_Cursor@a stored from wreg
  2878  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0385  00AD               	movwf	Lcd_Set_Cursor@a
  2881  0386                     l1900:
  2882                           
  2883                           ;LCD.c: 34:     char temp, z, y;;LCD.c: 35:     if (a == 1) {
  2884  0386  032D               	decf	Lcd_Set_Cursor@a,w
  2885  0387  1D03               	btfss	3,2
  2886  0388  2B8A               	goto	u991
  2887  0389  2B8B               	goto	u990
  2888  038A                     u991:
  2889  038A  2BB0               	goto	l1910
  2890  038B                     u990:
  2891  038B                     l1902:
  2892                           
  2893                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  2894  038B  0877               	movf	Lcd_Set_Cursor@b,w
  2895  038C  3E7F               	addlw	127
  2896  038D  00AB               	movwf	??_Lcd_Set_Cursor
  2897  038E  082B               	movf	??_Lcd_Set_Cursor,w
  2898  038F  00B0               	movwf	Lcd_Set_Cursor@temp
  2899                           
  2900                           ;LCD.c: 37:         z = temp >> 4;
  2901  0390  0830               	movf	Lcd_Set_Cursor@temp,w
  2902  0391  00AB               	movwf	??_Lcd_Set_Cursor
  2903  0392  3004               	movlw	4
  2904  0393                     u1005:
  2905  0393  1003               	clrc
  2906  0394  0CAB               	rrf	??_Lcd_Set_Cursor,f
  2907  0395  3EFF               	addlw	-1
  2908  0396  1D03               	skipz
  2909  0397  2B93               	goto	u1005
  2910  0398  082B               	movf	??_Lcd_Set_Cursor,w
  2911  0399  00AC               	movwf	??_Lcd_Set_Cursor+1
  2912  039A  082C               	movf	??_Lcd_Set_Cursor+1,w
  2913  039B  00AE               	movwf	Lcd_Set_Cursor@z
  2914  039C                     l1904:
  2915                           
  2916                           ;LCD.c: 38:         y = temp & 0x0F;
  2917  039C  0830               	movf	Lcd_Set_Cursor@temp,w
  2918  039D  390F               	andlw	15
  2919  039E  00AB               	movwf	??_Lcd_Set_Cursor
  2920  039F  082B               	movf	??_Lcd_Set_Cursor,w
  2921  03A0  00AF               	movwf	Lcd_Set_Cursor@y
  2922  03A1                     l1906:
  2923                           
  2924                           ;LCD.c: 39:         Lcd_Cmd(z);
  2925  03A1  082E               	movf	Lcd_Set_Cursor@z,w
  2926  03A2  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  2927  03A7                     l1908:
  2928                           
  2929                           ;LCD.c: 40:         Lcd_Cmd(y);
  2930  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2931  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2932  03A9  082F               	movf	Lcd_Set_Cursor@y,w
  2933  03AA  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  2934                           
  2935                           ;LCD.c: 41:     } else if (a == 2) {
  2936  03AF  2BDA               	goto	l252
  2937  03B0                     l1910:
  2938  03B0  3002               	movlw	2
  2939  03B1  062D               	xorwf	Lcd_Set_Cursor@a,w
  2940  03B2  1D03               	btfss	3,2
  2941  03B3  2BB5               	goto	u1011
  2942  03B4  2BB6               	goto	u1010
  2943  03B5                     u1011:
  2944  03B5  2BDA               	goto	l252
  2945  03B6                     u1010:
  2946  03B6                     l1912:
  2947                           
  2948                           ;LCD.c: 42:         temp = 0xC0 + b - 1;
  2949  03B6  0877               	movf	Lcd_Set_Cursor@b,w
  2950  03B7  3EBF               	addlw	191
  2951  03B8  00AB               	movwf	??_Lcd_Set_Cursor
  2952  03B9  082B               	movf	??_Lcd_Set_Cursor,w
  2953  03BA  00B0               	movwf	Lcd_Set_Cursor@temp
  2954                           
  2955                           ;LCD.c: 43:         z = temp >> 4;
  2956  03BB  0830               	movf	Lcd_Set_Cursor@temp,w
  2957  03BC  00AB               	movwf	??_Lcd_Set_Cursor
  2958  03BD  3004               	movlw	4
  2959  03BE                     u1025:
  2960  03BE  1003               	clrc
  2961  03BF  0CAB               	rrf	??_Lcd_Set_Cursor,f
  2962  03C0  3EFF               	addlw	-1
  2963  03C1  1D03               	skipz
  2964  03C2  2BBE               	goto	u1025
  2965  03C3  082B               	movf	??_Lcd_Set_Cursor,w
  2966  03C4  00AC               	movwf	??_Lcd_Set_Cursor+1
  2967  03C5  082C               	movf	??_Lcd_Set_Cursor+1,w
  2968  03C6  00AE               	movwf	Lcd_Set_Cursor@z
  2969  03C7                     l1914:
  2970                           
  2971                           ;LCD.c: 44:         y = temp & 0xF0;
  2972  03C7  0830               	movf	Lcd_Set_Cursor@temp,w
  2973  03C8  39F0               	andlw	240
  2974  03C9  00AB               	movwf	??_Lcd_Set_Cursor
  2975  03CA  082B               	movf	??_Lcd_Set_Cursor,w
  2976  03CB  00AF               	movwf	Lcd_Set_Cursor@y
  2977  03CC                     l1916:
  2978                           
  2979                           ;LCD.c: 45:         Lcd_Cmd(z);
  2980  03CC  082E               	movf	Lcd_Set_Cursor@z,w
  2981  03CD  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  2982  03D2                     l1918:
  2983                           
  2984                           ;LCD.c: 46:         Lcd_Cmd(y);
  2985  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2986  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2987  03D4  082F               	movf	Lcd_Set_Cursor@y,w
  2988  03D5  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  2989  03DA                     l252:
  2990  03DA  0008               	return
  2991  03DB                     __end_of_Lcd_Set_Cursor:
  2992                           
  2993                           	psect	text12
  2994  03DB                     __ptext12:	
  2995 ;; *************** function _Lcd_Init *****************
  2996 ;; Defined at:
  2997 ;;		line 50 in file "LCD.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0
  3013 ;;      Temps:          0       2       0       0       0
  3014 ;;      Totals:         0       2       0       0       0
  3015 ;;Total ram usage:        2 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    3
  3018 ;; This function calls:
  3019 ;;		_Lcd_Cmd
  3020 ;;		_Lcd_Port
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           
  3027                           ;psect for function _Lcd_Init
  3028  03DB                     _Lcd_Init:
  3029  03DB                     l1888:	
  3030                           ;incstack = 0
  3031                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3032                           
  3033                           
  3034                           ;LCD.c: 51:     Lcd_Port(0x00);
  3035  03DB  3000               	movlw	0
  3036  03DC  120A  118A  25BB  120A  118A  	fcall	_Lcd_Port
  3037  03E1                     l1890:
  3038                           
  3039                           ;LCD.c: 52:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3040  03E1  301A               	movlw	26
  3041  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3042  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3043  03E4  00AC               	movwf	??_Lcd_Init+1
  3044  03E5  30F7               	movlw	247
  3045  03E6  00AB               	movwf	??_Lcd_Init
  3046  03E7                     u1337:
  3047  03E7  0BAB               	decfsz	??_Lcd_Init,f
  3048  03E8  2BE7               	goto	u1337
  3049  03E9  0BAC               	decfsz	??_Lcd_Init+1,f
  3050  03EA  2BE7               	goto	u1337
  3051  03EB  2BEC               	nop2
  3052  03EC                     l1892:
  3053                           
  3054                           ;LCD.c: 53:     Lcd_Cmd(0x30);
  3055  03EC  3030               	movlw	48
  3056  03ED  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3057                           
  3058                           ;LCD.c: 54:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3059  03F2  3007               	movlw	7
  3060  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3061  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3062  03F5  00AC               	movwf	??_Lcd_Init+1
  3063  03F6  307C               	movlw	124
  3064  03F7  00AB               	movwf	??_Lcd_Init
  3065  03F8                     u1347:
  3066  03F8  0BAB               	decfsz	??_Lcd_Init,f
  3067  03F9  2BF8               	goto	u1347
  3068  03FA  0BAC               	decfsz	??_Lcd_Init+1,f
  3069  03FB  2BF8               	goto	u1347
  3070  03FC  0000               	nop
  3071  03FD                     l1894:
  3072                           
  3073                           ;LCD.c: 55:     Lcd_Cmd(0x30);
  3074  03FD  3030               	movlw	48
  3075  03FE  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3076  0403                     l1896:
  3077                           
  3078                           ;LCD.c: 56:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  3079  0403  3041               	movlw	65
  3080  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0405  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0406  00AB               	movwf	??_Lcd_Init
  3083  0407                     u1357:
  3084  0407  0BAB               	decfsz	??_Lcd_Init,f
  3085  0408  2C07               	goto	u1357
  3086  0409  2C0A               	nop2
  3087                           
  3088                           ;LCD.c: 57:     Lcd_Cmd(0x30);
  3089  040A  3030               	movlw	48
  3090  040B  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3091                           
  3092                           ;LCD.c: 58:     Lcd_Cmd(0x3C);
  3093  0410  303C               	movlw	60
  3094  0411  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3095                           
  3096                           ;LCD.c: 60:     Lcd_Cmd(0x08);
  3097  0416  3008               	movlw	8
  3098  0417  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3099                           
  3100                           ;LCD.c: 62:     Lcd_Cmd(0x01);
  3101  041C  3001               	movlw	1
  3102  041D  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3103                           
  3104                           ;LCD.c: 64:     Lcd_Cmd(0x06);
  3105  0422  3006               	movlw	6
  3106  0423  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3107  0428                     l255:
  3108  0428  0008               	return
  3109  0429                     __end_of_Lcd_Init:
  3110                           
  3111                           	psect	text13
  3112  05A4                     __ptext13:	
  3113 ;; *************** function _Lcd_Clear *****************
  3114 ;; Defined at:
  3115 ;;		line 28 in file "LCD.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    3
  3136 ;; This function calls:
  3137 ;;		_Lcd_Cmd
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _Lcd_Clear
  3145  05A4                     _Lcd_Clear:
  3146  05A4                     l1898:	
  3147                           ;incstack = 0
  3148                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3149                           
  3150                           
  3151                           ;LCD.c: 29:     Lcd_Cmd(0);
  3152  05A4  3000               	movlw	0
  3153  05A5  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3154                           
  3155                           ;LCD.c: 30:     Lcd_Cmd(1);
  3156  05AA  3001               	movlw	1
  3157  05AB  120A  118A  2575  120A  118A  	fcall	_Lcd_Cmd
  3158  05B0                     l246:
  3159  05B0  0008               	return
  3160  05B1                     __end_of_Lcd_Clear:
  3161                           
  3162                           	psect	text14
  3163  0575                     __ptext14:	
  3164 ;; *************** function _Lcd_Cmd *****************
  3165 ;; Defined at:
  3166 ;;		line 20 in file "LCD.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  a               1    wreg     unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  a               1    6[COMMON] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         0       0       0       0       0
  3181 ;;      Locals:         1       0       0       0       0
  3182 ;;      Temps:          2       0       0       0       0
  3183 ;;      Totals:         3       0       0       0       0
  3184 ;;Total ram usage:        3 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    2
  3187 ;; This function calls:
  3188 ;;		_Lcd_Port
  3189 ;; This function is called by:
  3190 ;;		_Lcd_Clear
  3191 ;;		_Lcd_Set_Cursor
  3192 ;;		_Lcd_Init
  3193 ;;		_Lcd_Shift_Right
  3194 ;;		_Lcd_Shift_Left
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function _Lcd_Cmd
  3200  0575                     _Lcd_Cmd:
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3204                           ;Lcd_Cmd@a stored from wreg
  3205  0575  00F6               	movwf	Lcd_Cmd@a
  3206  0576                     l1878:
  3207                           
  3208                           ;LCD.c: 21:     RE0 = 0;
  3209  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0578  1009               	bcf	9,0	;volatile
  3212  0579                     l1880:
  3213                           
  3214                           ;LCD.c: 22:     Lcd_Port(a);
  3215  0579  0876               	movf	Lcd_Cmd@a,w
  3216  057A  120A  118A  25BB  120A  118A  	fcall	_Lcd_Port
  3217  057F                     l1882:
  3218                           
  3219                           ;LCD.c: 23:     RE1 = 1;
  3220  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0581  1489               	bsf	9,1	;volatile
  3223  0582                     l1884:
  3224                           
  3225                           ;LCD.c: 24:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3226  0582  3006               	movlw	6
  3227  0583  00F5               	movwf	??_Lcd_Cmd+1
  3228  0584  3030               	movlw	48
  3229  0585  00F4               	movwf	??_Lcd_Cmd
  3230  0586                     u1367:
  3231  0586  0BF4               	decfsz	??_Lcd_Cmd,f
  3232  0587  2D86               	goto	u1367
  3233  0588  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3234  0589  2D86               	goto	u1367
  3235  058A  0000               	nop
  3236  058B                     l1886:
  3237                           
  3238                           ;LCD.c: 25:     RE1 = 0;
  3239  058B  1283               	bcf	3,5	;RP0=0, select bank0
  3240  058C  1303               	bcf	3,6	;RP1=0, select bank0
  3241  058D  1089               	bcf	9,1	;volatile
  3242  058E                     l243:
  3243  058E  0008               	return
  3244  058F                     __end_of_Lcd_Cmd:
  3245                           
  3246                           	psect	text15
  3247  05BB                     __ptext15:	
  3248 ;; *************** function _Lcd_Port *****************
  3249 ;; Defined at:
  3250 ;;		line 16 in file "LCD.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  a               1    wreg     unsigned char 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  a               1    3[COMMON] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         0       0       0       0       0
  3265 ;;      Locals:         1       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0
  3267 ;;      Totals:         1       0       0       0       0
  3268 ;;Total ram usage:        1 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    1
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_Lcd_Cmd
  3275 ;;		_Lcd_Init
  3276 ;;		_Lcd_Write_Char
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _Lcd_Port
  3282  05BB                     _Lcd_Port:
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _Lcd_Port: [wreg]
  3286                           ;Lcd_Port@a stored from wreg
  3287  05BB  00F3               	movwf	Lcd_Port@a
  3288  05BC                     l1864:
  3289                           
  3290                           ;LCD.c: 17:     PORTD = a;
  3291  05BC  0873               	movf	Lcd_Port@a,w
  3292  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  3293  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  3294  05BF  0088               	movwf	8	;volatile
  3295  05C0                     l240:
  3296  05C0  0008               	return
  3297  05C1                     __end_of_Lcd_Port:
  3298                           
  3299                           	psect	text16
  3300  04AC                     __ptext16:	
  3301 ;; *************** function _isr *****************
  3302 ;; Defined at:
  3303 ;;		line 79 in file "Lab02.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0
  3319 ;;      Temps:          3       0       0       0       0
  3320 ;;      Totals:         3       0       0       0       0
  3321 ;;Total ram usage:        3 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		Interrupt level 1
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _isr
  3332  04AC                     _isr:
  3333  04AC                     i1l1722:
  3334                           
  3335                           ;Lab02.c: 80:     if (T0IF==1){
  3336  04AC  1D0B               	btfss	11,2	;volatile
  3337  04AD  2CAF               	goto	u83_21
  3338  04AE  2CB0               	goto	u83_20
  3339  04AF                     u83_21:
  3340  04AF  2CB1               	goto	i1l192
  3341  04B0                     u83_20:
  3342  04B0                     i1l1724:
  3343                           
  3344                           ;Lab02.c: 81:     INTCONbits.T0IF = 0;
  3345  04B0  110B               	bcf	11,2	;volatile
  3346  04B1                     i1l192:	
  3347                           ;Lab02.c: 82:     }
  3348                           
  3349                           
  3350                           ;Lab02.c: 84:     if(PIR1bits.ADIF == 1){
  3351  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  3352  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  3353  04B3  1F0C               	btfss	12,6	;volatile
  3354  04B4  2CB6               	goto	u84_21
  3355  04B5  2CB7               	goto	u84_20
  3356  04B6                     u84_21:
  3357  04B6  2CCA               	goto	i1l1734
  3358  04B7                     u84_20:
  3359  04B7                     i1l1726:
  3360                           
  3361                           ;Lab02.c: 85:         if(ADCON0bits.CHS == 0){
  3362  04B7  0C1F               	rrf	31,w	;volatile
  3363  04B8  00F0               	movwf	??_isr
  3364  04B9  0C70               	rrf	??_isr,w
  3365  04BA  390F               	andlw	15
  3366  04BB  3A00               	xorlw	0
  3367  04BC  1D03               	skipz
  3368  04BD  2CBF               	goto	u85_21
  3369  04BE  2CC0               	goto	u85_20
  3370  04BF                     u85_21:
  3371  04BF  2CC5               	goto	i1l1730
  3372  04C0                     u85_20:
  3373  04C0                     i1l1728:
  3374                           
  3375                           ;Lab02.c: 86:             VAL1 = ADRESH;
  3376  04C0  081E               	movf	30,w	;volatile
  3377  04C1  00F0               	movwf	??_isr
  3378  04C2  0870               	movf	??_isr,w
  3379  04C3  00A1               	movwf	_VAL1
  3380                           
  3381                           ;Lab02.c: 87:         }
  3382  04C4  2CC9               	goto	i1l1732
  3383  04C5                     i1l1730:
  3384                           
  3385                           ;Lab02.c: 89:             VAL2 = ADRESH;
  3386  04C5  081E               	movf	30,w	;volatile
  3387  04C6  00F0               	movwf	??_isr
  3388  04C7  0870               	movf	??_isr,w
  3389  04C8  00A0               	movwf	_VAL2
  3390  04C9                     i1l1732:
  3391                           
  3392                           ;Lab02.c: 91:         PIR1bits.ADIF = 0;
  3393  04C9  130C               	bcf	12,6	;volatile
  3394  04CA                     i1l1734:
  3395                           
  3396                           ;Lab02.c: 94:     if(PIR1bits.RCIF == 1){
  3397  04CA  1E8C               	btfss	12,5	;volatile
  3398  04CB  2CCD               	goto	u86_21
  3399  04CC  2CCE               	goto	u86_20
  3400  04CD                     u86_21:
  3401  04CD  2CE5               	goto	i1l199
  3402  04CE                     u86_20:
  3403  04CE                     i1l1736:
  3404                           
  3405                           ;Lab02.c: 95:         RXREC = RCREG;
  3406  04CE  081A               	movf	26,w	;volatile
  3407  04CF  00F0               	movwf	??_isr
  3408  04D0  0870               	movf	??_isr,w
  3409  04D1  00A2               	movwf	_RXREC
  3410  04D2                     i1l1738:
  3411                           
  3412                           ;Lab02.c: 96:         if (RXREC == 43){
  3413  04D2  302B               	movlw	43
  3414  04D3  0622               	xorwf	_RXREC,w
  3415  04D4  1D03               	btfss	3,2
  3416  04D5  2CD7               	goto	u87_21
  3417  04D6  2CD8               	goto	u87_20
  3418  04D7                     u87_21:
  3419  04D7  2CDC               	goto	i1l197
  3420  04D8                     u87_20:
  3421  04D8                     i1l1740:
  3422                           
  3423                           ;Lab02.c: 97:             contador++;
  3424  04D8  3001               	movlw	1
  3425  04D9  00F0               	movwf	??_isr
  3426  04DA  0870               	movf	??_isr,w
  3427  04DB  07A7               	addwf	_contador,f
  3428  04DC                     i1l197:	
  3429                           ;Lab02.c: 98:         }
  3430                           
  3431                           
  3432                           ;Lab02.c: 99:         if (RXREC == 45){
  3433  04DC  302D               	movlw	45
  3434  04DD  0622               	xorwf	_RXREC,w
  3435  04DE  1D03               	btfss	3,2
  3436  04DF  2CE1               	goto	u88_21
  3437  04E0  2CE2               	goto	u88_20
  3438  04E1                     u88_21:
  3439  04E1  2CE4               	goto	i1l1744
  3440  04E2                     u88_20:
  3441  04E2                     i1l1742:
  3442                           
  3443                           ;Lab02.c: 100:             contador--;
  3444  04E2  3001               	movlw	1
  3445  04E3  02A7               	subwf	_contador,f
  3446  04E4                     i1l1744:
  3447                           
  3448                           ;Lab02.c: 102:         PIR1bits.RCIF = 0;
  3449  04E4  128C               	bcf	12,5	;volatile
  3450  04E5                     i1l199:
  3451  04E5  0872               	movf	??_isr+2,w
  3452  04E6  008A               	movwf	10
  3453  04E7  0E71               	swapf	??_isr+1,w
  3454  04E8  0083               	movwf	3
  3455  04E9  0EFE               	swapf	btemp,f
  3456  04EA  0E7E               	swapf	btemp,w
  3457  04EB  0009               	retfie
  3458  04EC                     __end_of_isr:
  3459  007E                     btemp	set	126	;btemp
  3460  007E                     wtemp0	set	126
  3461                           
  3462                           	psect	intentry
  3463  0004                     __pintentry:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _isr: [wreg+status,2+status,0]
  3466                           
  3467  0004                     interrupt_function:
  3468  007E                     saved_w	set	btemp
  3469  0004  00FE               	movwf	btemp
  3470  0005  0E03               	swapf	3,w
  3471  0006  00F1               	movwf	??_isr+1
  3472  0007  080A               	movf	10,w
  3473  0008  00F2               	movwf	??_isr+2
  3474  0009  120A  118A  2CAC   	ljmp	_isr
  3475                           
  3476                           	psect	config
  3477                           
  3478                           ;Config register CONFIG1 @ 0x2007
  3479                           ;	Oscillator Selection bits
  3480                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3481                           ;	Watchdog Timer Enable bit
  3482                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3483                           ;	Power-up Timer Enable bit
  3484                           ;	PWRTE = OFF, PWRT disabled
  3485                           ;	RE3/MCLR pin function select bit
  3486                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3487                           ;	Code Protection bit
  3488                           ;	CP = OFF, Program memory code protection is disabled
  3489                           ;	Data Code Protection bit
  3490                           ;	CPD = OFF, Data memory code protection is disabled
  3491                           ;	Brown Out Reset Selection bits
  3492                           ;	BOREN = OFF, BOR disabled
  3493                           ;	Internal External Switchover bit
  3494                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3495                           ;	Fail-Safe Clock Monitor Enabled bit
  3496                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3497                           ;	Low Voltage Programming Enable bit
  3498                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3499                           ;	In-Circuit Debugger Mode bit
  3500                           ;	DEBUG = 0x1, unprogrammed default
  3501  2007                     	org	8199
  3502  2007  20D4               	dw	8404
  3503                           
  3504                           ;Config register CONFIG2 @ 0x2008
  3505                           ;	Brown-out Reset Selection bit
  3506                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3507                           ;	Flash Program Memory Self Write Enable bits
  3508                           ;	WRT = OFF, Write protection off
  3509  2008                     	org	8200
  3510  2008  3FFF               	dw	16383

Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     11      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[18]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_5(CODE[2]), STR_2(CODE[4]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _main->_printf
    _setup->_initAN
    _printf->_putch
    _decimal->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_decimal
    _decimal->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2890
                                              9 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _chselect
                            _decimal
                             _printf
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     142
                             _initAN
 ---------------------------------------------------------------------------------
 (2) _initAN                                               3     2      1     142
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    16      0     134
                                              4 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decimal                                              5     5      0    1043
                                              4 BANK0      5     5      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _chselect                                             4     4      0     286
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     368
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _chselect
   _decimal
     ___awdiv
     ___bmul
   _printf
     _putch
   _setup
     _initAN

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 22:38:57 2021

                        pc 0002             ___bmul@product 0075                         l91 0538  
             ___awdiv@sign 002C                         _un 007A                         fsr 0004  
                      l211 0144                        l220 046B                        l212 0156  
                      l213 0168                        l214 017A                        l206 00A6  
                      l223 0382                        l207 00B8                        l240 05C0  
                      l208 00CA                        l137 02B2                        l209 00DC  
                      l226 05B2                        l243 058E                        l252 03DA  
                      l229 05BA                        l246 05B0                        l255 0428  
                      l264 0514                        l258 0574                        l362 0557  
                      l519 031B                        l392 05A3                        _RE0 0048  
                      _RE1 0049                        u500 05B8                        u501 05B7  
                      u510 0595                        u511 0594                        u520 05A2  
                      u521 05A1                        u610 030D                        u530 02BA  
                      u611 030C                        u531 02B9                        u700 0214  
                      u620 0312                        u540 02C5                        u701 0213  
                      u621 0311                        u605 0301                        u541 02C4  
                      u710 0222                        u630 01BA                        u550 02D6  
                      u711 0221                        u631 01B9                        u551 02D5  
                      u720 0230                        u640 01C0                        u721 022F  
                      u641 01BF                        u730 023E                        u650 01CE  
                      u570 02E8                        u731 023D                        u651 01CD  
                      u571 02E7                        u740 024C                        u660 01DC  
                      u820 0557                        u741 024B                        u661 01DB  
                      u565 02DA                        u821 0556                        u750 025A  
                      u670 01EA                        u590 02F9                        u751 0259  
                      u671 01E9                        u591 02F8                        u760 0268  
                      u680 01F8                        u761 0267                        u681 01F7  
                      u585 02E9                        u690 0206                        u691 0205  
                      u595 02F5                        u990 038B                        u991 038A  
                      _dec 0079                        _cen 0078                        _isr 04AC  
                      fsr0 0004                       l2000 013C                       l2010 0166  
                     l2002 0142                       l2020 0193                       l2012 0172  
                     l2004 014E                       l2022 0199                       l2014 0178  
                     l2006 0154                       l1400 051B                       l2024 019F  
                     l2016 0185                       l2008 0160                       l1410 052E  
                     l1402 051F                       l2026 01A5                       l2018 018D  
                     l1412 0535                       l1404 0523                       l2062 027E  
                     l1510 01C3                       l1502 01B4                       l1430 05B2  
                     l1414 0536                       l1406 0527                       l1520 01DC  
                     l1512 01C8                       l1432 05B8                       l1416 0537  
                     l1408 052A                       l1600 0429                       l1530 01F2  
                     l1522 01DF                       l1514 01CE                       l1506 01BB  
                     l1450 0599                       l1610 043D                       l1602 042C  
                     l1540 0209                       l1532 01F8                       l1524 01E4  
                     l1516 01D1                       l1508 01C0                       l1460 02B6  
                     l1452 059B                       l1444 0590                       l1620 044A  
                     l1612 0444                       l1604 042E                       l1550 0222  
                     l1542 020E                       l1534 01FB                       l1526 01EA  
                     l1518 01D6                       l1470 02CA                       l1462 02BA  
                     l1454 05A2                       l1446 0591                       l1630 0450  
                     l1622 044C                       l1614 0447                       l1606 0432  
                     l1560 0238                       l1552 0225                       l1544 0214  
                     l1536 0200                       l1528 01ED                       l1480 02E0  
                     l1472 02CE                       l1464 02BF                       l1448 0595  
                     l1720 0545                       l1640 0459                       l1632 0451  
                     l1624 044D                       l1616 0448                       l1608 0433  
                     l1570 024F                       l1562 023E                       l1554 022A  
                     l1546 0217                       l1538 0206                       l1490 0300  
                     l1482 02E4                       l1474 02D0                       l1466 02C1  
                     l1458 02B3                       l1650 0460                       l1642 045A  
                     l1634 0454                       l1626 044E                       l1618 0449  
                     l1900 0386                       l1580 0268                       l1572 0254  
                     l1564 0241                       l1556 0230                       l1548 021C  
                     l1492 0307                       l1484 02E8                       l1476 02D6  
                     l1468 02C5                       l1716 053A                       l1396 0516  
                     l1652 0461                       l1644 045B                       l1636 0455  
                     l1628 044F                       l1902 038B                       l1910 03B0  
                     l1582 026B                       l1574 025A                       l1566 0246  
                     l1558 0233                       l1590 02AA                       l1486 02F9  
                     l1478 02D9                       l1494 030D                       l1718 053F  
                     l1398 051A                       l1654 0462                       l1646 045C  
                     l1638 0458                       l1912 03B6                       l1904 039C  
                     l1920 04EF                       l1592 02AF                       l1584 0270  
                     l1576 025D                       l1568 024C                       l1496 0312  
                     l1488 02FF                       l1656 0465                       l1648 045D  
                     l1914 03C7                       l1906 03A1                       l1922 04F2  
                     l1578 0262                       l1498 0317                       l1930 0323  
                     l1658 0469                       l1916 03CC                       l1908 03A7  
                     l1924 04FF                       l1588 0273                       l1940 0378  
                     l1932 0339                       l1918 03D2                       l1870 0564  
                     l1926 0507                       l1942 037D                       l1934 0349  
                     l1950 0068                       l1864 05BC                       l1880 0579  
                     l1872 056A                       l1936 035F                       l1928 031F  
                     l1960 0090                       l1952 006E                       l1944 0023  
                     l1882 057F                       l1890 03E1                       l1874 056D  
                     l1866 0559                       l1938 0373                       l1970 00B6  
                     l1954 0074                       l1962 0094                       l1946 003A  
                     l1884 0582                       l1892 03EC                       l1876 0571  
                     l1868 0561                       l1980 00E7                       l1972 00C2  
                     l1964 009E                       l1956 007F                       l1948 0040  
                     l1886 058B                       l1878 0576                       l1894 03FD  
                     l1990 0112                       l1982 00EF                       l1974 00C8  
                     l1966 00A4                       l1958 0085                       l1896 0403  
                     l1888 03DB                       l1992 011D                       l1984 00F5  
                     l1976 00D4                       l1968 00B0                       l1898 05A4  
                     l1994 0123                       l1986 00FB                       l1978 00DA  
                     l1996 012E                       l1988 010C                       l1998 0132  
                     ?_isr 0070                       STR_1 0496                       STR_2 04A6  
                     STR_3 0472                       STR_4 0484                       STR_5 04AA  
                     _FLAG 002A                       _T0IF 005A                       u1010 03B6  
                     u1011 03B5                       u1100 0142                       u1005 0393  
                     u1101 0141                       u1030 0514                       u1110 0154  
                     u1031 0513                       u1111 0153                       u1120 0166  
                     u1040 0074                       u1025 03BE                       u1121 0165  
                     u1041 0073                       u1130 0178                       u1050 00A4  
                     u1131 0177                       u1051 00A3                       u1060 00B6  
                     u1061 00B5                       u1070 00C8                       u1207 00E2  
                     u1071 00C7                       u1080 00DA                       u1217 0105  
                     u1081 00D9                       u1090 0112                       u1307 0525  
                     u1227 0118                       u1091 0111                       u1147 007A  
                     u1317 02AC                       u1237 0129                       u1157 008B  
                     u1327 056F                       u1247 0138                       u1167 009A  
                     u1337 03E7                       u1257 014A                       u1177 00AC  
                     u1347 03F8                       u1267 015C                       u1187 00BE  
                     u1357 0407                       u1277 016E                       u1197 00D0  
                     u1367 0586                       u1287 0180                       u1297 01AB  
                     _VAL1 0021                       _VAL2 0020                       _TXIF 0064  
        ?_Lcd_Write_String 0070                       _main 0023                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0078            __end_of_Lcd_Cmd 058F  
        ___bmul@multiplier 0076                      ??_isr 0070                      ?_main 0070  
          __end_of___awdiv 031C                      _ANSEL 0188            ___awdiv@divisor 0073  
                    i1l192 04B1                      i1l197 04DC                      i1l199 04E5  
          ___awdiv@counter 002B                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISD 0088                      _TRISE 0089  
                    u83_20 04B0                      u83_21 04AF                      u84_20 04B7  
                    u84_21 04B6                      _RXREC 0022                      u85_20 04C0  
                    u85_21 04BF                      u86_20 04CE                      u86_21 04CD  
                    _VUART 0023            __end_of_decimal 0383                      u87_20 04D8  
                    u87_21 04D7                      u88_20 04E2                      u88_21 04E1  
                    _TXREG 0019                      _disp0 0026                      _disp1 0025  
                    _setup 0429                      _putch 05B1                      _start 0028  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0429           __end_of_Lcd_Port 05C1            __initialization 000F  
             __end_of_main 01B3                     ??_main 0034         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E           ___awdiv@dividend 0075                     ?_setup 0070  
                   ?_putch 0070                     _ANSELH 0189                     i1l1730 04C5  
                   i1l1722 04AC                     i1l1740 04D8                     i1l1732 04C9  
                   i1l1724 04B0                     i1l1742 04E2                     i1l1726 04B7  
                   i1l1734 04CA                     i1l1744 04E4                     i1l1736 04CE  
                   i1l1728 04C0                     i1l1738 04D2                  ??_Lcd_Cmd 0074  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 001D           __end_of_chselect 02B3  
                   ___bmul 058F                  ??___awdiv 0077                     _initAN 0515  
                ??_decimal 002F           ___awdiv@quotient 002D                     _tempo1 0024  
                   _printf 0539                     saved_w 007E            Lcd_Set_Cursor@a 002D  
          Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 002F            Lcd_Set_Cursor@z 002E  
  __end_of__initialization 001F          __end_of_Lcd_Clear 05B1        ___bmul@multiplicand 0073  
           __pcstackCOMMON 0070              __end_of_setup 046C              __end_of_putch 05BB  
           _Lcd_Set_Cursor 0383                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0076                    ??_putch 0073                 __pbssBANK0 0020  
               __pmaintext 0023                    ?___bmul 0073                 __pintentry 0004  
                  ?_initAN 0073  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 03DB  
                  ?_printf 0070                 ??_Lcd_Init 002B                  ?_chselect 0070  
               ??_Lcd_Port 0073                 __stringtab 046C             _Lcd_Write_Char 0558  
                  _Lcd_Cmd 0575                 decimal@VAL 0033            __size_of___bmul 0015  
                  ___awdiv 02B3                 decimal@var 0032            __size_of_initAN 0024  
                  _decimal 031C            ?_Lcd_Set_Cursor 0077                    __ptext1 0429  
                  __ptext2 0515                    __ptext3 0539                    __ptext4 05B1  
                  __ptext5 031C                    __ptext6 058F                    __ptext7 02B3  
                  __ptext8 01B3                    __ptext9 04EC            __size_of_printf 001F  
             __size_of_isr 0040                 ??_chselect 0073     __end_of_Lcd_Write_Char 0575  
     end_of_initialization 001F                  _RCSTAbits 0018                    printf@c 0076  
                  printf@f 0077                  Lcd_Port@a 0073                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 002D          Lcd_Write_String@i 002B  
               _startfinal 0029                  _TXSTAbits 0098                  _Lcd_Clear 05A4  
           __end_of___bmul 05A4           _Lcd_Write_String 04EC                _BAUDCTLbits 0187  
           __end_of_initAN 0539                 initAN@just 0073             __end_of_printf 0558  
      start_initialization 000F                __end_of_isr 04EC          __size_of_Lcd_Init 004E  
        __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070                   ??___bmul 0074  
                 ??_initAN 0074            Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0077  
                 ??_printf 0074                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 002B          __size_of_chselect 0100                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 002B                   ?___awdiv 0073                   ?_decimal 0070  
                __pstrings 046C             __size_of_setup 0043             __size_of_putch 000A  
        interrupt_function 0004                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                ??_Lcd_Clear 0077                 _ADCON0bits 001F  
              __stringbase 0471                 _ADCON1bits 009F           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 03DB                   _Lcd_Port 05BB                  initAN@bin 0075  
 __end_of_Lcd_Write_String 0515           __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069  
       __end_of__stringtab 0472           __size_of_decimal 0067                   _chselect 01B3  
                 __ptext10 0558                   __ptext11 0383                   __ptext12 03DB  
                 __ptext13 05A4                   __ptext14 0575                   __ptext15 05BB  
                 __ptext16 04AC                   _contador 0027              __size_of_main 0190  
                putch@info 0073                 _INTCONbits 000B               chselect@cant 0076  
       Lcd_Write_Char@temp 0076                   intlevel1 0000                  stringcode 046C  
               _OSCCONbits 008F                   printf@ap 0075         Lcd_Set_Cursor@temp 0030  
               _OPTION_REG 0081                   stringdir 046C                   stringtab 046C  
