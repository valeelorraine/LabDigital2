

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 19 21:01:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataCOMMON
   214  013C                     __pidataCOMMON:
   215                           
   216                           ;initializer for _DISPLAY
   217  013C  3401               	retlw	1
   218                           
   219                           	psect	idataBANK0
   220  011C                     __pidataBANK0:
   221                           
   222                           ;initializer for _NUMEROS
   223  011C  343F               	retlw	63
   224  011D  3406               	retlw	6
   225  011E  345B               	retlw	91
   226  011F  344F               	retlw	79
   227  0120  3466               	retlw	102
   228  0121  346D               	retlw	109
   229  0122  347D               	retlw	125
   230  0123  3407               	retlw	7
   231  0124  347F               	retlw	127
   232  0125  3467               	retlw	103
   233  0126  3477               	retlw	119
   234  0127  347C               	retlw	124
   235  0128  3439               	retlw	57
   236  0129  345E               	retlw	94
   237  012A  3479               	retlw	121
   238  012B  3471               	retlw	113
   239                           
   240                           	psect	nvCOMMON
   241  0078                     __pnvCOMMON:
   242  0078                     _HIGH:
   243  0078                     	ds	1
   244  0079                     _LOW:
   245  0079                     	ds	1
   246  0006                     _PORTB	set	6
   247  0005                     _PORTA	set	5
   248  0006                     _PORTBbits	set	6
   249  001E                     _ADRESH	set	30
   250  001F                     _ADCON0bits	set	31
   251  000C                     _PIR1bits	set	12
   252  000B                     _INTCONbits	set	11
   253  0009                     _PORTEbits	set	9
   254  0007                     _PORTC	set	7
   255  0009                     _PORTE	set	9
   256  0001                     _TMR0	set	1
   257  005A                     _T0IF	set	90
   258  008C                     _PIE1bits	set	140
   259  0081                     _OPTION_REG	set	129
   260  009F                     _ADCON1bits	set	159
   261  0095                     _WPUB	set	149
   262  0096                     _IOCB	set	150
   263  008F                     _OSCCONbits	set	143
   264  0089                     _TRISE	set	137
   265  0087                     _TRISC	set	135
   266  0086                     _TRISB	set	134
   267  0085                     _TRISA	set	133
   268  0189                     _ANSELH	set	393
   269  0188                     _ANSEL	set	392
   270                           
   271                           	psect	cinit
   272  0011                     start_initialization:	
   273                           ; #config settings
   274                           
   275  0011                     __initialization:
   276                           
   277                           ; Initialize objects allocated to BANK0
   278  0011  1383               	bcf	3,7	;select IRP bank0
   279  0012  3030               	movlw	low (__pdataBANK0+16)
   280  0013  00FD               	movwf	btemp+-1
   281  0014  3001               	movlw	high __pidataBANK0
   282  0015  00FE               	movwf	btemp
   283  0016  301C               	movlw	low __pidataBANK0
   284  0017  00FF               	movwf	btemp+1
   285  0018  3020               	movlw	low __pdataBANK0
   286  0019  0084               	movwf	4
   287  001A  120A  118A  210D  120A  118A  	fcall	init_ram0
   288                           
   289                           ; Initialize objects allocated to COMMON
   290  001F  120A  118A  213C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   291  0024  00FA               	movwf	__pdataCOMMON& (0+127)
   292                           
   293                           ; Clear objects allocated to COMMON
   294  0025  01F5               	clrf	__pbssCOMMON& (0+127)
   295  0026  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   296  0027  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   297  0028                     end_of_initialization:	
   298                           ;End of C runtime variable initialization code
   299                           
   300  0028                     __end_of__initialization:
   301  0028  0183               	clrf	3
   302  0029  120A  118A  28DF   	ljmp	_main	;jump to C main() function
   303                           
   304                           	psect	bssCOMMON
   305  0075                     __pbssCOMMON:
   306  0075                     _VAL:
   307  0075                     	ds	1
   308  0076                     _FLAG1:
   309  0076                     	ds	1
   310  0077                     _FLAG:
   311  0077                     	ds	1
   312                           
   313                           	psect	dataCOMMON
   314  007A                     __pdataCOMMON:
   315  007A                     _DISPLAY:
   316  007A                     	ds	1
   317                           
   318                           	psect	dataBANK0
   319  0020                     __pdataBANK0:
   320  0020                     _NUMEROS:
   321  0020                     	ds	16
   322                           
   323                           	psect	inittext
   324  0109                     init_fetch0:	
   325                           ;	Called with low address in FSR and high address in W
   326                           
   327  0109  087E               	movf	btemp,w
   328  010A  008A               	movwf	10
   329  010B  087F               	movf	btemp+1,w
   330  010C  0082               	movwf	2
   331  010D                     init_ram0:	
   332                           ;Called with:
   333                           ;	high address of idata address in btemp 
   334                           ;	low address of idata address in btemp+1 
   335                           ;	low address of data in FSR
   336                           ;	high address + 1 of data in btemp-1
   337                           
   338  010D  120A  118A  2109  120A  118A  	fcall	init_fetch0
   339  0112  0080               	movwf	0
   340  0113  0A84               	incf	4,f
   341  0114  0804               	movf	4,w
   342  0115  067D               	xorwf	btemp+-1,w
   343  0116  1903               	btfsc	3,2
   344  0117  3400               	retlw	0
   345  0118  0AFF               	incf	btemp+1,f
   346  0119  1903               	btfsc	3,2
   347  011A  0AFE               	incf	btemp,f
   348  011B  290D               	goto	init_ram0
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:
   352  0070                     ?_isr:
   353  0070                     ??_isr:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_setup:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0070                     	ds	5
   365                           
   366                           	psect	cstackBANK0
   367  0030                     __pcstackBANK0:
   368  0030                     ?_HEX:
   369  0030                     ??_setup:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0030                     HEX@arg1:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 2 bytes @ 0x0
   377  0030                     	ds	2
   378  0032                     ??_HEX:
   379                           
   380                           ; 1 bytes @ 0x2
   381  0032                     	ds	3
   382  0035                     ??_main:
   383                           
   384                           ; 1 bytes @ 0x5
   385  0035                     	ds	2
   386                           
   387                           	psect	maintext
   388  00DF                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 199 in file "Lab01.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          0       2       0       0       0
   411 ;;      Totals:         0       2       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels required when called:    2
   414 ;; This function calls:
   415 ;;		_HEX
   416 ;;		_setup
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _main
   424  00DF                     _main:
   425  00DF                     l937:	
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   428                           
   429                           
   430                           ;Lab01.c: 200:     setup();
   431  00DF  120A  118A  20A0  120A  118A  	fcall	_setup
   432  00E4                     l939:
   433                           
   434                           ;Lab01.c: 202:         ADCON0bits.GO = 1;
   435  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   436  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   437  00E6  149F               	bsf	31,1	;volatile
   438                           
   439                           ;Lab01.c: 203:         HEX(VAL);
   440  00E7  0875               	movf	_VAL,w
   441  00E8  00B5               	movwf	??_main
   442  00E9  01B6               	clrf	??_main+1
   443  00EA  0835               	movf	??_main,w
   444  00EB  00B0               	movwf	HEX@arg1
   445  00EC  0836               	movf	??_main+1,w
   446  00ED  00B1               	movwf	HEX@arg1+1
   447  00EE  120A  118A  212C  120A  118A  	fcall	_HEX
   448  00F3                     l941:
   449                           
   450                           ;Lab01.c: 204:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   451  00F3  3020               	movlw	32
   452  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   453  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   454  00F6  00B5               	movwf	??_main
   455  00F7                     u127:
   456  00F7  0BB5               	decfsz	??_main,f
   457  00F8  28F7               	goto	u127
   458  00F9  0000               	nop
   459  00FA                     l943:
   460                           
   461                           ;Lab01.c: 205:         if(VAL == PORTA){
   462  00FA  0875               	movf	_VAL,w
   463  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   464  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   465  00FD  0605               	xorwf	5,w	;volatile
   466  00FE  1D03               	skipz
   467  00FF  2901               	goto	u111
   468  0100  2902               	goto	u110
   469  0101                     u111:
   470  0101  2904               	goto	l94
   471  0102                     u110:
   472  0102                     l945:
   473                           
   474                           ;Lab01.c: 206:             PORTBbits.RB3 = 1;
   475  0102  1586               	bsf	6,3	;volatile
   476                           
   477                           ;Lab01.c: 207:             }
   478  0103  28E4               	goto	l939
   479  0104                     l94:	
   480                           ;Lab01.c: 208:         else{
   481                           
   482                           
   483                           ;Lab01.c: 209:             PORTBbits.RB3 = 0;
   484  0104  1186               	bcf	6,3	;volatile
   485  0105  28E4               	goto	l939
   486  0106  120A  118A  280E   	ljmp	start
   487  0109                     __end_of_main:
   488                           
   489                           	psect	text1
   490  00A0                     __ptext1:	
   491 ;; *************** function _setup *****************
   492 ;; Defined at:
   493 ;;		line 147 in file "Lab01.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; Hardware stack levels required when called:    1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           
   522                           ;psect for function _setup
   523  00A0                     _setup:
   524  00A0                     l877:	
   525                           ;incstack = 0
   526                           ; Regs used in _setup: [wreg+status,2+status,0]
   527                           
   528                           
   529                           ;Lab01.c: 150:     ANSEL = 0X00;
   530  00A0  1683               	bsf	3,5	;RP0=1, select bank3
   531  00A1  1703               	bsf	3,6	;RP1=1, select bank3
   532  00A2  0188               	clrf	8	;volatile
   533  00A3                     l879:
   534                           
   535                           ;Lab01.c: 151:     ANSELH = 0B00001000;
   536  00A3  3008               	movlw	8
   537  00A4  0089               	movwf	9	;volatile
   538  00A5                     l881:
   539                           
   540                           ;Lab01.c: 153:     TRISA = 0X00;
   541  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   542  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   543  00A7  0185               	clrf	5	;volatile
   544                           
   545                           ;Lab01.c: 154:     TRISB = 0B00000011;
   546  00A8  3003               	movlw	3
   547  00A9  0086               	movwf	6	;volatile
   548  00AA                     l883:
   549                           
   550                           ;Lab01.c: 155:     TRISC = 0X00;
   551  00AA  0187               	clrf	7	;volatile
   552  00AB                     l885:
   553                           
   554                           ;Lab01.c: 156:     TRISE = 0X00;
   555  00AB  0189               	clrf	9	;volatile
   556  00AC                     l887:
   557                           
   558                           ;Lab01.c: 158:     PORTA = 0X00;
   559  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   560  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   561  00AE  0185               	clrf	5	;volatile
   562  00AF                     l889:
   563                           
   564                           ;Lab01.c: 159:     PORTB = 0X00;
   565  00AF  0186               	clrf	6	;volatile
   566  00B0                     l891:
   567                           
   568                           ;Lab01.c: 160:     PORTC = 0X00;
   569  00B0  0187               	clrf	7	;volatile
   570  00B1                     l893:
   571                           
   572                           ;Lab01.c: 161:     PORTE = 0X00;
   573  00B1  0189               	clrf	9	;volatile
   574  00B2                     l895:
   575                           
   576                           ;Lab01.c: 164:     OSCCONbits.SCS = 1;
   577  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   578  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   579  00B4  140F               	bsf	15,0	;volatile
   580  00B5                     l897:
   581                           
   582                           ;Lab01.c: 165:     OSCCONbits.IRCF2 = 1;
   583  00B5  170F               	bsf	15,6	;volatile
   584  00B6                     l899:
   585                           
   586                           ;Lab01.c: 166:     OSCCONbits.IRCF1 = 1;
   587  00B6  168F               	bsf	15,5	;volatile
   588  00B7                     l901:
   589                           
   590                           ;Lab01.c: 167:     OSCCONbits.IRCF0 = 0;
   591  00B7  120F               	bcf	15,4	;volatile
   592                           
   593                           ;Lab01.c: 170:     IOCB = 0B00000011;
   594  00B8  3003               	movlw	3
   595  00B9  0096               	movwf	22	;volatile
   596                           
   597                           ;Lab01.c: 171:     WPUB = 0B00000011;
   598  00BA  3003               	movlw	3
   599  00BB  0095               	movwf	21	;volatile
   600  00BC                     l903:
   601                           
   602                           ;Lab01.c: 174:     ADCON0bits.ADON = 1;
   603  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   604  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   605  00BE  141F               	bsf	31,0	;volatile
   606  00BF                     l905:
   607                           
   608                           ;Lab01.c: 175:     ADCON0bits.CHS = 8;
   609  00BF  081F               	movf	31,w	;volatile
   610  00C0  39C3               	andlw	-61
   611  00C1  3820               	iorlw	32
   612  00C2  009F               	movwf	31	;volatile
   613  00C3                     l907:
   614                           
   615                           ;Lab01.c: 178:     ADCON0bits.ADCS = 1;
   616  00C3  081F               	movf	31,w	;volatile
   617  00C4  393F               	andlw	-193
   618  00C5  3840               	iorlw	64
   619  00C6  009F               	movwf	31	;volatile
   620  00C7                     l909:
   621                           
   622                           ;Lab01.c: 179:     ADCON1bits.ADFM = 0;
   623  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   624  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   625  00C9  139F               	bcf	31,7	;volatile
   626  00CA                     l911:
   627                           
   628                           ;Lab01.c: 180:     ADCON1bits.VCFG0 = 0;
   629  00CA  121F               	bcf	31,4	;volatile
   630  00CB                     l913:
   631                           
   632                           ;Lab01.c: 181:     ADCON1bits.VCFG1 = 0;
   633  00CB  129F               	bcf	31,5	;volatile
   634                           
   635                           ;Lab01.c: 184:     OPTION_REG = 0B00000101;
   636  00CC  3005               	movlw	5
   637  00CD  0081               	movwf	1	;volatile
   638                           
   639                           ;Lab01.c: 185:     TMR0 = 100;
   640  00CE  3064               	movlw	100
   641  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   642  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   643  00D1  0081               	movwf	1	;volatile
   644  00D2                     l915:
   645                           
   646                           ;Lab01.c: 186:     INTCONbits.GIE = 1;
   647  00D2  178B               	bsf	11,7	;volatile
   648  00D3                     l917:
   649                           
   650                           ;Lab01.c: 187:     INTCONbits.PEIE = 1;
   651  00D3  170B               	bsf	11,6	;volatile
   652  00D4                     l919:
   653                           
   654                           ;Lab01.c: 188:     INTCONbits.T0IE = 1;
   655  00D4  168B               	bsf	11,5	;volatile
   656  00D5                     l921:
   657                           
   658                           ;Lab01.c: 189:     INTCONbits.RBIE = 1;
   659  00D5  158B               	bsf	11,3	;volatile
   660  00D6                     l923:
   661                           
   662                           ;Lab01.c: 190:     INTCONbits.T0IF = 0;
   663  00D6  110B               	bcf	11,2	;volatile
   664  00D7                     l925:
   665                           
   666                           ;Lab01.c: 191:     INTCONbits.RBIF = 0;
   667  00D7  100B               	bcf	11,0	;volatile
   668  00D8                     l927:
   669                           
   670                           ;Lab01.c: 192:     PIE1bits.ADIE = 1;
   671  00D8  1683               	bsf	3,5	;RP0=1, select bank1
   672  00D9  1303               	bcf	3,6	;RP1=0, select bank1
   673  00DA  170C               	bsf	12,6	;volatile
   674  00DB                     l929:
   675                           
   676                           ;Lab01.c: 193:     PIR1bits.ADIF = 0;
   677  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   678  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   679  00DD  130C               	bcf	12,6	;volatile
   680  00DE                     l88:
   681  00DE  0008               	return
   682  00DF                     __end_of_setup:
   683                           
   684                           	psect	text2
   685  012C                     __ptext2:	
   686 ;; *************** function _HEX *****************
   687 ;; Defined at:
   688 ;;		line 218 in file "Lab01.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  arg1            2    0[BANK0 ] unsigned int 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  temp            2    0        unsigned int 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       2       0       0       0
   703 ;;      Locals:         0       2       0       0       0
   704 ;;      Temps:          0       1       0       0       0
   705 ;;      Totals:         0       5       0       0       0
   706 ;;Total ram usage:        5 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _HEX
   718  012C                     _HEX:
   719  012C                     l931:	
   720                           ;incstack = 0
   721                           ; Regs used in _HEX: [wreg+status,2]
   722                           
   723  012C                     l933:
   724                           
   725                           ;Lab01.c: 221:     LOW = VAL & 0x0F;
   726  012C  0875               	movf	_VAL,w
   727  012D  390F               	andlw	15
   728  012E  1283               	bcf	3,5	;RP0=0, select bank0
   729  012F  1303               	bcf	3,6	;RP1=0, select bank0
   730  0130  00B2               	movwf	??_HEX
   731  0131  0832               	movf	??_HEX,w
   732  0132  00F9               	movwf	_LOW
   733  0133                     l935:
   734                           
   735                           ;Lab01.c: 222:     HIGH = VAL & 0xF0;
   736  0133  0875               	movf	_VAL,w
   737  0134  39F0               	andlw	240
   738  0135  00B2               	movwf	??_HEX
   739  0136  0832               	movf	??_HEX,w
   740  0137  00F8               	movwf	_HIGH
   741                           
   742                           ;Lab01.c: 223:     HIGH >>= 4;
   743  0138  0EF8               	swapf	_HIGH,f
   744  0139  300F               	movlw	15
   745  013A  05F8               	andwf	_HIGH,f
   746  013B                     l101:
   747  013B  0008               	return
   748  013C                     __end_of_HEX:
   749                           
   750                           	psect	text3
   751  002C                     __ptext3:	
   752 ;; *************** function _isr *****************
   753 ;; Defined at:
   754 ;;		line 93 in file "Lab01.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          5       0       0       0       0
   771 ;;      Totals:         5       0       0       0       0
   772 ;;Total ram usage:        5 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		Interrupt level 1
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _isr
   783  002C                     _isr:
   784  002C                     i1l753:
   785                           
   786                           ;Lab01.c: 94:     if(T0IF == 1){
   787  002C  1D0B               	btfss	11,2	;volatile
   788  002D  282F               	goto	u1_21
   789  002E  2830               	goto	u1_20
   790  002F                     u1_21:
   791  002F  285E               	goto	i1l71
   792  0030                     u1_20:
   793  0030                     i1l755:
   794                           
   795                           ;Lab01.c: 95:         TMR0 = 100;
   796  0030  3064               	movlw	100
   797  0031  1283               	bcf	3,5	;RP0=0, select bank0
   798  0032  1303               	bcf	3,6	;RP1=0, select bank0
   799  0033  0081               	movwf	1	;volatile
   800                           
   801                           ;Lab01.c: 97:         switch(DISPLAY){
   802  0034  284D               	goto	i1l775
   803  0035                     i1l757:
   804                           
   805                           ;Lab01.c: 99:             PORTE = 0X00;
   806  0035  0189               	clrf	9	;volatile
   807  0036                     i1l759:
   808                           
   809                           ;Lab01.c: 100:             PORTC = NUMEROS[HIGH];
   810  0036  0878               	movf	_HIGH,w
   811  0037  3E20               	addlw	(low (_NUMEROS| 0))& (0+255)
   812  0038  0084               	movwf	4
   813  0039  1383               	bcf	3,7	;select IRP bank0
   814  003A  0800               	movf	0,w
   815  003B  0087               	movwf	7	;volatile
   816  003C                     i1l761:
   817                           
   818                           ;Lab01.c: 101:             PORTEbits.RE0 = 1;
   819  003C  1409               	bsf	9,0	;volatile
   820  003D                     i1l763:
   821                           
   822                           ;Lab01.c: 102:             DISPLAY = 2;
   823  003D  3002               	movlw	2
   824  003E  00F0               	movwf	??_isr
   825  003F  0870               	movf	??_isr,w
   826  0040  00FA               	movwf	_DISPLAY
   827                           
   828                           ;Lab01.c: 103:             break;
   829  0041  285D               	goto	i1l74
   830  0042                     i1l765:
   831                           
   832                           ;Lab01.c: 105:             PORTE = 0X00;
   833  0042  0189               	clrf	9	;volatile
   834  0043                     i1l767:
   835                           
   836                           ;Lab01.c: 106:             PORTC = NUMEROS[LOW];
   837  0043  0879               	movf	_LOW,w
   838  0044  3E20               	addlw	(low (_NUMEROS| 0))& (0+255)
   839  0045  0084               	movwf	4
   840  0046  1383               	bcf	3,7	;select IRP bank0
   841  0047  0800               	movf	0,w
   842  0048  0087               	movwf	7	;volatile
   843  0049                     i1l769:
   844                           
   845                           ;Lab01.c: 107:             PORTEbits.RE1 = 1;
   846  0049  1489               	bsf	9,1	;volatile
   847  004A                     i1l771:
   848                           
   849                           ;Lab01.c: 108:             DISPLAY = 1;
   850  004A  01FA               	clrf	_DISPLAY
   851  004B  0AFA               	incf	_DISPLAY,f
   852                           
   853                           ;Lab01.c: 109:             break;
   854  004C  285D               	goto	i1l74
   855  004D                     i1l775:
   856  004D  087A               	movf	_DISPLAY,w
   857  004E  00F0               	movwf	??_isr
   858  004F  01F1               	clrf	??_isr+1
   859                           
   860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   861                           ; Switch size 1, requested type "simple"
   862                           ; Number of cases is 1, Range of values is 0 to 0
   863                           ; switch strategies available:
   864                           ; Name         Instructions Cycles
   865                           ; simple_byte            4     3 (average)
   866                           ; direct_byte           11     8 (fixed)
   867                           ; jumptable            260     6 (fixed)
   868                           ;	Chosen strategy is simple_byte
   869  0050  0871               	movf	??_isr+1,w
   870  0051  3A00               	xorlw	0	; case 0
   871  0052  1903               	skipnz
   872  0053  2855               	goto	i1l967
   873  0054  285D               	goto	i1l74
   874  0055                     i1l967:
   875                           
   876                           ; Switch size 1, requested type "simple"
   877                           ; Number of cases is 2, Range of values is 1 to 2
   878                           ; switch strategies available:
   879                           ; Name         Instructions Cycles
   880                           ; simple_byte            7     4 (average)
   881                           ; direct_byte           17    11 (fixed)
   882                           ; jumptable            263     9 (fixed)
   883                           ;	Chosen strategy is simple_byte
   884  0055  0870               	movf	??_isr,w
   885  0056  3A01               	xorlw	1	; case 1
   886  0057  1903               	skipnz
   887  0058  2835               	goto	i1l757
   888  0059  3A03               	xorlw	3	; case 2
   889  005A  1903               	skipnz
   890  005B  2842               	goto	i1l765
   891  005C  285D               	goto	i1l74
   892  005D                     i1l74:
   893                           
   894                           ;Lab01.c: 111:         INTCONbits.T0IF = 0;
   895  005D  110B               	bcf	11,2	;volatile
   896  005E                     i1l71:	
   897                           ;Lab01.c: 112:     }
   898                           
   899                           
   900                           ;Lab01.c: 115:     if(PIR1bits.ADIF == 1){
   901  005E  1283               	bcf	3,5	;RP0=0, select bank0
   902  005F  1303               	bcf	3,6	;RP1=0, select bank0
   903  0060  1F0C               	btfss	12,6	;volatile
   904  0061  2863               	goto	u2_21
   905  0062  2864               	goto	u2_20
   906  0063                     u2_21:
   907  0063  2872               	goto	i1l783
   908  0064                     u2_20:
   909  0064                     i1l777:
   910                           
   911                           ;Lab01.c: 116:         if(ADCON0bits.CHS == 8){
   912  0064  0C1F               	rrf	31,w	;volatile
   913  0065  00F0               	movwf	??_isr
   914  0066  0C70               	rrf	??_isr,w
   915  0067  390F               	andlw	15
   916  0068  3A08               	xorlw	8
   917  0069  1D03               	skipz
   918  006A  286C               	goto	u3_21
   919  006B  286D               	goto	u3_20
   920  006C                     u3_21:
   921  006C  2871               	goto	i1l781
   922  006D                     u3_20:
   923  006D                     i1l779:
   924                           
   925                           ;Lab01.c: 117:            VAL = ADRESH;
   926  006D  081E               	movf	30,w	;volatile
   927  006E  00F0               	movwf	??_isr
   928  006F  0870               	movf	??_isr,w
   929  0070  00F5               	movwf	_VAL
   930  0071                     i1l781:
   931                           
   932                           ;Lab01.c: 119:         PIR1bits.ADIF = 0;
   933  0071  130C               	bcf	12,6	;volatile
   934  0072                     i1l783:
   935                           
   936                           ;Lab01.c: 123:     if(INTCONbits.RBIF == 1){
   937  0072  1C0B               	btfss	11,0	;volatile
   938  0073  2875               	goto	u4_21
   939  0074  2876               	goto	u4_20
   940  0075                     u4_21:
   941  0075  2897               	goto	i1l85
   942  0076                     u4_20:
   943  0076                     i1l785:
   944                           
   945                           ;Lab01.c: 124:         if(PORTBbits.RB0 == 0){
   946  0076  1806               	btfsc	6,0	;volatile
   947  0077  2879               	goto	u5_21
   948  0078  287A               	goto	u5_20
   949  0079                     u5_21:
   950  0079  287D               	goto	i1l789
   951  007A                     u5_20:
   952  007A                     i1l787:
   953                           
   954                           ;Lab01.c: 125:             FLAG = 1;}
   955  007A  01F7               	clrf	_FLAG
   956  007B  0AF7               	incf	_FLAG,f
   957  007C  2887               	goto	i1l795
   958  007D                     i1l789:
   959                           
   960                           ;Lab01.c: 127:             if(FLAG == 1){
   961  007D  0377               	decf	_FLAG,w
   962  007E  1D03               	btfss	3,2
   963  007F  2881               	goto	u6_21
   964  0080  2882               	goto	u6_20
   965  0081                     u6_21:
   966  0081  2887               	goto	i1l795
   967  0082                     u6_20:
   968  0082                     i1l791:
   969                           
   970                           ;Lab01.c: 128:                 FLAG = 0;
   971  0082  01F7               	clrf	_FLAG
   972  0083                     i1l793:
   973                           
   974                           ;Lab01.c: 129:                 PORTA++;
   975  0083  3001               	movlw	1
   976  0084  00F0               	movwf	??_isr
   977  0085  0870               	movf	??_isr,w
   978  0086  0785               	addwf	5,f	;volatile
   979  0087                     i1l795:
   980                           
   981                           ;Lab01.c: 132:         if(PORTBbits.RB1 == 0){
   982  0087  1886               	btfsc	6,1	;volatile
   983  0088  288A               	goto	u7_21
   984  0089  288B               	goto	u7_20
   985  008A                     u7_21:
   986  008A  288E               	goto	i1l799
   987  008B                     u7_20:
   988  008B                     i1l797:
   989                           
   990                           ;Lab01.c: 133:             FLAG1 = 1;}
   991  008B  01F6               	clrf	_FLAG1
   992  008C  0AF6               	incf	_FLAG1,f
   993  008D  2896               	goto	i1l805
   994  008E                     i1l799:
   995                           
   996                           ;Lab01.c: 135:             if(FLAG1 == 1){
   997  008E  0376               	decf	_FLAG1,w
   998  008F  1D03               	btfss	3,2
   999  0090  2892               	goto	u8_21
  1000  0091  2893               	goto	u8_20
  1001  0092                     u8_21:
  1002  0092  2896               	goto	i1l805
  1003  0093                     u8_20:
  1004  0093                     i1l801:
  1005                           
  1006                           ;Lab01.c: 136:                 FLAG1 = 0;
  1007  0093  01F6               	clrf	_FLAG1
  1008  0094                     i1l803:
  1009                           
  1010                           ;Lab01.c: 137:                 PORTA--;
  1011  0094  3001               	movlw	1
  1012  0095  0285               	subwf	5,f	;volatile
  1013  0096                     i1l805:
  1014                           
  1015                           ;Lab01.c: 140:         INTCONbits.RBIF = 0;
  1016  0096  100B               	bcf	11,0	;volatile
  1017  0097                     i1l85:
  1018  0097  0874               	movf	??_isr+4,w
  1019  0098  008A               	movwf	10
  1020  0099  0873               	movf	??_isr+3,w
  1021  009A  0084               	movwf	4
  1022  009B  0E72               	swapf	??_isr+2,w
  1023  009C  0083               	movwf	3
  1024  009D  0EFE               	swapf	btemp,f
  1025  009E  0E7E               	swapf	btemp,w
  1026  009F  0009               	retfie
  1027  00A0                     __end_of_isr:
  1028  007E                     btemp	set	126	;btemp
  1029  007E                     wtemp0	set	126
  1030                           
  1031                           	psect	intentry
  1032  0004                     __pintentry:	
  1033                           ;incstack = 0
  1034                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1035                           
  1036  0004                     interrupt_function:
  1037  007E                     saved_w	set	btemp
  1038  0004  00FE               	movwf	btemp
  1039  0005  0E03               	swapf	3,w
  1040  0006  00F2               	movwf	??_isr+2
  1041  0007  0804               	movf	4,w
  1042  0008  00F3               	movwf	??_isr+3
  1043  0009  080A               	movf	10,w
  1044  000A  00F4               	movwf	??_isr+4
  1045  000B  120A  118A  282C   	ljmp	_isr
  1046                           
  1047                           	psect	config
  1048                           
  1049                           ;Config register CONFIG1 @ 0x2007
  1050                           ;	Oscillator Selection bits
  1051                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1052                           ;	Watchdog Timer Enable bit
  1053                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1054                           ;	Power-up Timer Enable bit
  1055                           ;	PWRTE = OFF, PWRT disabled
  1056                           ;	RE3/MCLR pin function select bit
  1057                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1058                           ;	Code Protection bit
  1059                           ;	CP = OFF, Program memory code protection is disabled
  1060                           ;	Data Code Protection bit
  1061                           ;	CPD = OFF, Data memory code protection is disabled
  1062                           ;	Brown Out Reset Selection bits
  1063                           ;	BOREN = OFF, BOR disabled
  1064                           ;	Internal External Switchover bit
  1065                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1066                           ;	Fail-Safe Clock Monitor Enabled bit
  1067                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1068                           ;	Low Voltage Programming Enable bit
  1069                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1070                           ;	In-Circuit Debugger Mode bit
  1071                           ;	DEBUG = 0x1, unprogrammed default
  1072  2007                     	org	8199
  1073  2007  20D4               	dw	8404
  1074                           
  1075                           ;Config register CONFIG2 @ 0x2008
  1076                           ;	Brown-out Reset Selection bit
  1077                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1078                           ;	Flash Program Memory Self Write Enable bits
  1079                           ;	WRT = OFF, Write protection off
  1080  2008                     	org	8200
  1081  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         3
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      7      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_HEX

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     124
                                              5 BANK0      2     2      0
                                _HEX
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HEX                                                  5     3      2     124
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HEX
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 19 21:01:09 2021

                      pc 0002                       l94 0104                       l88 00DE  
                     fsr 0004                      l101 013B                      l901 00B7  
                    l911 00CA                      l903 00BC                      l921 00D5  
                    l913 00CB                      l905 00BF                      l931 012C  
                    l923 00D6                      l915 00D2                      l907 00C3  
                    l933 012C                      l925 00D7                      l917 00D3  
                    l909 00C7                      l941 00F3                      l935 0133  
                    l927 00D8                      l919 00D4                      l943 00FA  
                    l929 00DB                      l881 00A5                      l945 0102  
                    l937 00DF                      l891 00B0                      l883 00AA  
                    l939 00E4                      l893 00B1                      l885 00AB  
                    l877 00A0                      l895 00B2                      l887 00AC  
                    l879 00A3                      l897 00B5                      l889 00AF  
                    l899 00B6                      _HEX 012C                      u110 0102  
                    u111 0101                      u127 00F7                      _LOW 0079  
                    _VAL 0075                      _isr 002C                      fsr0 0004  
                    indf 0000                     ?_HEX 0030                     ?_isr 0070  
                   _FLAG 0077                     _T0IF 005A                     _HIGH 0078  
                   _IOCB 0096                     i1l71 005E                     i1l74 005D  
                   i1l85 0097                     _TMR0 0001                     _WPUB 0095  
                   u1_20 0030                     u1_21 002F                     u2_20 0064  
                   u2_21 0063                     u3_20 006D                     u3_21 006C  
                   u4_20 0076                     u4_21 0075                     u5_20 007A  
                   u5_21 0079                     u6_20 0082                     u6_21 0081  
                   u7_20 008B                     u7_21 008A                     u8_20 0093  
                   u8_21 0092                     _main 00DF                     btemp 007E  
                   start 000E                    ??_HEX 0032                    ??_isr 0070  
                  ?_main 0070                    _FLAG1 0076                    _ANSEL 0188  
                  i1l801 0093                    i1l803 0094                    i1l805 0096  
                  i1l761 003C                    i1l753 002C                    i1l771 004A  
                  i1l763 003D                    i1l755 0030                    i1l781 0071  
                  i1l765 0042                    i1l757 0035                    i1l791 0082  
                  i1l783 0072                    i1l767 0043                    i1l759 0036  
                  i1l775 004D                    i1l793 0083                    i1l785 0076  
                  i1l777 0064                    i1l769 0049                    i1l795 0087  
                  i1l787 007A                    i1l779 006D                    i1l797 008B  
                  i1l789 007D                    i1l799 008E                    i1l967 0055  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISE 0089                    _setup 00A0  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0109                   ??_main 0035  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
           __pdataCOMMON 007A                   saved_w 007E  __end_of__initialization 0028  
         __pcstackCOMMON 0070             __pidataBANK0 011C            __end_of_setup 00DF  
                ??_setup 0030                  HEX@arg1 0030               __pnvCOMMON 0078  
             __pmaintext 00DF               __pintentry 0004                  _DISPLAY 007A  
                _NUMEROS 0020                  __ptext1 00A0                  __ptext2 012C  
                __ptext3 002C             __size_of_HEX 0010             __size_of_isr 0074  
   end_of_initialization 0028                _PORTBbits 0006                _PORTEbits 0009  
          __pidataCOMMON 013C      start_initialization 0011              __end_of_HEX 013C  
            __end_of_isr 00A0               init_fetch0 0109              __pdataBANK0 0020  
            __pbssCOMMON 0075                ___latbits 0002            __pcstackBANK0 0030  
         __size_of_setup 003F        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          __size_of_main 002A               _INTCONbits 000B                 init_ram0 010D  
               intlevel1 0000               _OSCCONbits 008F               _OPTION_REG 0081  
