

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 14 21:54:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataCOMMON
   208  008E                     __pidataCOMMON:
   209                           
   210                           ;initializer for _NUMEROS
   211  008E  343F               	retlw	63
   212  008F  3406               	retlw	6
   213  0090  345B               	retlw	91
   214  0091  344F               	retlw	79
   215  0001                     _TMR0	set	1
   216  0009                     _PORTE	set	9
   217  0008                     _PORTD	set	8
   218  0007                     _PORTC	set	7
   219  0006                     _PORTB	set	6
   220  0005                     _PORTA	set	5
   221  0006                     _PORTBbits	set	6
   222  000B                     _INTCONbits	set	11
   223  0081                     _OPTION_REG	set	129
   224  0095                     _WPUB	set	149
   225  0096                     _IOCB	set	150
   226  0089                     _TRISE	set	137
   227  0088                     _TRISD	set	136
   228  0087                     _TRISC	set	135
   229  0086                     _TRISB	set	134
   230  0085                     _TRISA	set	133
   231  0189                     _ANSELH	set	393
   232  0188                     _ANSEL	set	392
   233                           
   234                           	psect	cinit
   235  000F                     start_initialization:	
   236                           ; #config settings
   237                           
   238  000F                     __initialization:
   239                           
   240                           ; Initialize objects allocated to COMMON
   241  000F  120A  118A  208E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   242  0014  00F4               	movwf	__pdataCOMMON& (0+127)
   243  0015  120A  118A  208F  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   244  001A  00F5               	movwf	(__pdataCOMMON+1)& (0+127)
   245  001B  120A  118A  2090  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   246  0020  00F6               	movwf	(__pdataCOMMON+2)& (0+127)
   247  0021  120A  118A  2091  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   248  0026  00F7               	movwf	(__pdataCOMMON+3)& (0+127)
   249                           
   250                           ; Clear objects allocated to COMMON
   251  0027  01F0               	clrf	__pbssCOMMON& (0+127)
   252  0028  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   253  0029  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   254  002A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   255  002B                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  002B                     __end_of__initialization:
   259  002B  0183               	clrf	3
   260  002C  120A  118A  2885   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMMON
   263  0070                     __pbssCOMMON:
   264  0070                     _FLAG2:
   265  0070                     	ds	1
   266  0071                     _FLAG1:
   267  0071                     	ds	1
   268  0072                     _FLAG:
   269  0072                     	ds	1
   270  0073                     _CONT:
   271  0073                     	ds	1
   272                           
   273                           	psect	dataCOMMON
   274  0074                     __pdataCOMMON:
   275  0074                     _NUMEROS:
   276  0074                     	ds	4
   277                           
   278                           	psect	cstackCOMMON
   279  0078                     __pcstackCOMMON:
   280  0078                     ?_isr:
   281  0078                     ??_isr:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0078                     ?_setup:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0078                     ?_main:	
   288                           ; 1 bytes @ 0x0
   289                           
   290                           
   291                           ; 1 bytes @ 0x0
   292  0078                     	ds	3
   293  007B                     ??_setup:
   294  007B                     ??_main:	
   295                           ; 1 bytes @ 0x3
   296                           
   297                           
   298                           	psect	maintext
   299  0085                     __pmaintext:	
   300                           ; 1 bytes @ 0x3
   301 ;;
   302 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   303 ;;
   304 ;; *************** function _main *****************
   305 ;; Defined at:
   306 ;;		line 149 in file "Lab01.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, pclath, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : B00/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   320 ;;      Params:         0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels required when called:    2
   326 ;; This function calls:
   327 ;;		_setup
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           
   334                           ;psect for function _main
   335  0085                     _main:
   336  0085                     l727:	
   337                           ;incstack = 0
   338                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   339                           
   340                           
   341                           ;Lab01.c: 150:     setup();
   342  0085  120A  118A  205D  120A  118A  	fcall	_setup
   343  008A                     l66:	
   344                           ;Lab01.c: 151:     while (1){
   345                           
   346  008A                     l67:	
   347                           ;Lab01.c: 152:     }
   348                           
   349  008A  288A               	goto	l66
   350  008B  120A  118A  280C   	ljmp	start
   351  008E                     __end_of_main:
   352                           
   353                           	psect	text1
   354  005D                     __ptext1:	
   355 ;; *************** function _setup *****************
   356 ;; Defined at:
   357 ;;		line 112 in file "Lab01.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; Hardware stack levels required when called:    1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           
   386                           ;psect for function _setup
   387  005D                     _setup:
   388  005D                     l661:	
   389                           ;incstack = 0
   390                           ; Regs used in _setup: [wreg+status,2]
   391                           
   392                           
   393                           ;Lab01.c: 114:     ANSEL = 0X00;
   394  005D  1683               	bsf	3,5	;RP0=1, select bank3
   395  005E  1703               	bsf	3,6	;RP1=1, select bank3
   396  005F  0188               	clrf	8	;volatile
   397                           
   398                           ;Lab01.c: 115:     ANSELH = 0X00;
   399  0060  0189               	clrf	9	;volatile
   400                           
   401                           ;Lab01.c: 117:     TRISA = 0X00;
   402  0061  1683               	bsf	3,5	;RP0=1, select bank1
   403  0062  1303               	bcf	3,6	;RP1=0, select bank1
   404  0063  0185               	clrf	5	;volatile
   405  0064                     l663:
   406                           
   407                           ;Lab01.c: 118:     TRISB = 0B00000011;
   408  0064  3003               	movlw	3
   409  0065  0086               	movwf	6	;volatile
   410  0066                     l665:
   411                           
   412                           ;Lab01.c: 119:     TRISC = 0X00;
   413  0066  0187               	clrf	7	;volatile
   414  0067                     l667:
   415                           
   416                           ;Lab01.c: 120:     TRISD = 0X00;
   417  0067  0188               	clrf	8	;volatile
   418  0068                     l669:
   419                           
   420                           ;Lab01.c: 121:     TRISE = 0X00;
   421  0068  0189               	clrf	9	;volatile
   422  0069                     l671:
   423                           
   424                           ;Lab01.c: 123:     PORTA = 0X00;
   425  0069  1283               	bcf	3,5	;RP0=0, select bank0
   426  006A  1303               	bcf	3,6	;RP1=0, select bank0
   427  006B  0185               	clrf	5	;volatile
   428  006C                     l673:
   429                           
   430                           ;Lab01.c: 124:     PORTB = 0X00;
   431  006C  0186               	clrf	6	;volatile
   432  006D                     l675:
   433                           
   434                           ;Lab01.c: 125:     PORTC = 0X00;
   435  006D  0187               	clrf	7	;volatile
   436  006E                     l677:
   437                           
   438                           ;Lab01.c: 126:     PORTD = 0X00;
   439  006E  0188               	clrf	8	;volatile
   440  006F                     l679:
   441                           
   442                           ;Lab01.c: 127:     PORTE = 0X00;
   443  006F  0189               	clrf	9	;volatile
   444  0070                     l681:
   445                           
   446                           ;Lab01.c: 130:     IOCB = 0B00000011;
   447  0070  3003               	movlw	3
   448  0071  1683               	bsf	3,5	;RP0=1, select bank1
   449  0072  1303               	bcf	3,6	;RP1=0, select bank1
   450  0073  0096               	movwf	22	;volatile
   451  0074                     l683:
   452                           
   453                           ;Lab01.c: 131:     WPUB = 0B00000011;
   454  0074  3003               	movlw	3
   455  0075  0095               	movwf	21	;volatile
   456  0076                     l685:
   457                           
   458                           ;Lab01.c: 134:     OPTION_REG = 0B00000101;
   459  0076  3005               	movlw	5
   460  0077  0081               	movwf	1	;volatile
   461  0078                     l687:
   462                           
   463                           ;Lab01.c: 135:     TMR0 = 100;
   464  0078  3064               	movlw	100
   465  0079  1283               	bcf	3,5	;RP0=0, select bank0
   466  007A  1303               	bcf	3,6	;RP1=0, select bank0
   467  007B  0081               	movwf	1	;volatile
   468  007C                     l689:
   469                           
   470                           ;Lab01.c: 136:     INTCONbits.GIE = 1;
   471  007C  178B               	bsf	11,7	;volatile
   472  007D                     l691:
   473                           
   474                           ;Lab01.c: 137:     INTCONbits.PEIE = 1;
   475  007D  170B               	bsf	11,6	;volatile
   476  007E                     l693:
   477                           
   478                           ;Lab01.c: 138:     INTCONbits.T0IE = 1;
   479  007E  168B               	bsf	11,5	;volatile
   480  007F                     l695:
   481                           
   482                           ;Lab01.c: 139:     INTCONbits.RBIE = 1;
   483  007F  158B               	bsf	11,3	;volatile
   484  0080                     l697:
   485                           
   486                           ;Lab01.c: 140:     INTCONbits.T0IF = 0;
   487  0080  110B               	bcf	11,2	;volatile
   488  0081                     l699:
   489                           
   490                           ;Lab01.c: 141:     INTCONbits.RBIF = 0;
   491  0081  100B               	bcf	11,0	;volatile
   492  0082                     l701:
   493                           
   494                           ;Lab01.c: 143:     PORTD = NUMEROS[3];
   495  0082  0877               	movf	_NUMEROS+3,w
   496  0083  0088               	movwf	8	;volatile
   497  0084                     l61:
   498  0084  0008               	return
   499  0085                     __end_of_setup:
   500                           
   501                           	psect	text2
   502  002F                     __ptext2:	
   503 ;; *************** function _isr *****************
   504 ;; Defined at:
   505 ;;		line 77 in file "Lab01.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0
   521 ;;      Temps:          3       0       0       0       0
   522 ;;      Totals:         3       0       0       0       0
   523 ;;Total ram usage:        3 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		Interrupt level 1
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function _isr
   534  002F                     _isr:
   535  002F                     i1l703:
   536                           
   537                           ;Lab01.c: 87:     if(INTCONbits.RBIF == 1){
   538  002F  1C0B               	btfss	11,0	;volatile
   539  0030  2832               	goto	u1_21
   540  0031  2833               	goto	u1_20
   541  0032                     u1_21:
   542  0032  2856               	goto	i1l58
   543  0033                     u1_20:
   544  0033                     i1l705:
   545                           
   546                           ;Lab01.c: 88:         if(PORTBbits.RB0 == 0){
   547  0033  1283               	bcf	3,5	;RP0=0, select bank0
   548  0034  1303               	bcf	3,6	;RP1=0, select bank0
   549  0035  1806               	btfsc	6,0	;volatile
   550  0036  2838               	goto	u2_21
   551  0037  2839               	goto	u2_20
   552  0038                     u2_21:
   553  0038  283C               	goto	i1l709
   554  0039                     u2_20:
   555  0039                     i1l707:
   556                           
   557                           ;Lab01.c: 89:             FLAG = 1;}
   558  0039  01F2               	clrf	_FLAG
   559  003A  0AF2               	incf	_FLAG,f
   560  003B  2846               	goto	i1l715
   561  003C                     i1l709:
   562                           
   563                           ;Lab01.c: 91:             if(FLAG == 1){
   564  003C  0372               	decf	_FLAG,w
   565  003D  1D03               	btfss	3,2
   566  003E  2840               	goto	u3_21
   567  003F  2841               	goto	u3_20
   568  0040                     u3_21:
   569  0040  2846               	goto	i1l715
   570  0041                     u3_20:
   571  0041                     i1l711:
   572                           
   573                           ;Lab01.c: 92:                 FLAG = 0;
   574  0041  01F2               	clrf	_FLAG
   575  0042                     i1l713:
   576                           
   577                           ;Lab01.c: 93:                 PORTA++;
   578  0042  3001               	movlw	1
   579  0043  00F8               	movwf	??_isr
   580  0044  0878               	movf	??_isr,w
   581  0045  0785               	addwf	5,f	;volatile
   582  0046                     i1l715:
   583                           
   584                           ;Lab01.c: 96:         if(PORTBbits.RB1 == 0){
   585  0046  1886               	btfsc	6,1	;volatile
   586  0047  2849               	goto	u4_21
   587  0048  284A               	goto	u4_20
   588  0049                     u4_21:
   589  0049  284D               	goto	i1l719
   590  004A                     u4_20:
   591  004A                     i1l717:
   592                           
   593                           ;Lab01.c: 97:             FLAG1 = 1;
   594  004A  01F1               	clrf	_FLAG1
   595  004B  0AF1               	incf	_FLAG1,f
   596                           
   597                           ;Lab01.c: 98:         }
   598  004C  2855               	goto	i1l725
   599  004D                     i1l719:
   600                           
   601                           ;Lab01.c: 100:             if(FLAG1 == 1){
   602  004D  0371               	decf	_FLAG1,w
   603  004E  1D03               	btfss	3,2
   604  004F  2851               	goto	u5_21
   605  0050  2852               	goto	u5_20
   606  0051                     u5_21:
   607  0051  2855               	goto	i1l725
   608  0052                     u5_20:
   609  0052                     i1l721:
   610                           
   611                           ;Lab01.c: 101:                 FLAG1 = 0;
   612  0052  01F1               	clrf	_FLAG1
   613  0053                     i1l723:
   614                           
   615                           ;Lab01.c: 102:                 PORTA--;
   616  0053  3001               	movlw	1
   617  0054  0285               	subwf	5,f	;volatile
   618  0055                     i1l725:
   619                           
   620                           ;Lab01.c: 105:         INTCONbits.RBIF = 0;
   621  0055  100B               	bcf	11,0	;volatile
   622  0056                     i1l58:
   623  0056  087A               	movf	??_isr+2,w
   624  0057  008A               	movwf	10
   625  0058  0E79               	swapf	??_isr+1,w
   626  0059  0083               	movwf	3
   627  005A  0EFE               	swapf	btemp,f
   628  005B  0E7E               	swapf	btemp,w
   629  005C  0009               	retfie
   630  005D                     __end_of_isr:
   631  007E                     btemp	set	126	;btemp
   632  007E                     wtemp0	set	126
   633                           
   634                           	psect	intentry
   635  0004                     __pintentry:	
   636                           ;incstack = 0
   637                           ; Regs used in _isr: [wreg+status,2+status,0]
   638                           
   639  0004                     interrupt_function:
   640  007E                     saved_w	set	btemp
   641  0004  00FE               	movwf	btemp
   642  0005  0E03               	swapf	3,w
   643  0006  00F9               	movwf	??_isr+1
   644  0007  080A               	movf	10,w
   645  0008  00FA               	movwf	??_isr+2
   646  0009  120A  118A  282F   	ljmp	_isr
   647                           
   648                           	psect	config
   649                           
   650                           ;Config register CONFIG1 @ 0x2007
   651                           ;	Oscillator Selection bits
   652                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   653                           ;	Watchdog Timer Enable bit
   654                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   655                           ;	Power-up Timer Enable bit
   656                           ;	PWRTE = OFF, PWRT disabled
   657                           ;	RE3/MCLR pin function select bit
   658                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   659                           ;	Code Protection bit
   660                           ;	CP = OFF, Program memory code protection is disabled
   661                           ;	Data Code Protection bit
   662                           ;	CPD = OFF, Data memory code protection is disabled
   663                           ;	Brown Out Reset Selection bits
   664                           ;	BOREN = OFF, BOR disabled
   665                           ;	Internal External Switchover bit
   666                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   667                           ;	Fail-Safe Clock Monitor Enabled bit
   668                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   669                           ;	Low Voltage Programming Enable bit
   670                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   671                           ;	In-Circuit Debugger Mode bit
   672                           ;	DEBUG = 0x1, unprogrammed default
   673  2007                     	org	8199
   674  2007  20D4               	dw	8404
   675                           
   676                           ;Config register CONFIG2 @ 0x2008
   677                           ;	Brown-out Reset Selection bit
   678                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   679                           ;	Flash Program Memory Self Write Enable bits
   680                           ;	WRT = OFF, Write protection off
   681  2008                     	org	8200
   682  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 14 21:54:23 2021

                     l61 0084                       l66 008A                       l67 008A  
                    l701 0082                      l661 005D                      l671 0069  
                    l663 0064                      l727 0085                      l681 0070  
                    l673 006C                      l665 0066                      l691 007D  
                    l683 0074                      l675 006D                      l667 0067  
                    l693 007E                      l685 0076                      l677 006E  
                    l669 0068                      l695 007F                      l687 0078  
                    l679 006F                      l697 0080                      l689 007C  
                    l699 0081                      _isr 002F                     ?_isr 0078  
                   _FLAG 0072                     _CONT 0073                     _IOCB 0096  
                   i1l58 0056                     _TMR0 0001                     _WPUB 0095  
                   u1_20 0033                     u1_21 0032                     u2_20 0039  
                   u2_21 0038                     u3_20 0041                     u3_21 0040  
                   u4_20 004A                     u4_21 0049                     u5_20 0052  
                   u5_21 0051                     _main 0085                     btemp 007E  
                   start 000C                    ??_isr 0078                    ?_main 0078  
                  _FLAG1 0071                    _FLAG2 0070                    _ANSEL 0188  
                  i1l711 0041                    i1l703 002F                    i1l721 0052  
                  i1l713 0042                    i1l705 0033                    i1l723 0053  
                  i1l715 0046                    i1l707 0039                    i1l725 0055  
                  i1l717 004A                    i1l709 003C                    i1l719 004D  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 005D                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 008E                   ??_main 007B                   ?_setup 0078  
                 _ANSELH 0189             __pdataCOMMON 0074                   saved_w 007E  
__end_of__initialization 002B           __pcstackCOMMON 0078            __end_of_setup 0085  
                ??_setup 007B               __pmaintext 0085               __pintentry 0004  
                _NUMEROS 0074                  __ptext1 005D                  __ptext2 002F  
           __size_of_isr 002E     end_of_initialization 002B                _PORTBbits 0006  
          __pidataCOMMON 008E      start_initialization 000F              __end_of_isr 005D  
            __pbssCOMMON 0070                ___latbits 0002           __size_of_setup 0028  
      interrupt_function 0004            __size_of_main 0009               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
