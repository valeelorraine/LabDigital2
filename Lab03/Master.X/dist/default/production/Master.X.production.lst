

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 03 19:07:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	functab,global,class=ENTRY,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	stringtext
   387  0800                     __pstringtext:
   388  0800                     stringtab:
   389  0800                     __stringtab:
   390                           
   391                           ;	String table - string pointers are 2 bytes each
   392  0800  1BFF               	btfsc	btemp+1,7
   393  0801  280A               	ljmp	stringcode
   394  0802  1383               	bcf	3,7
   395  0803  187F               	btfsc	btemp+1,0
   396  0804  1783               	bsf	3,7
   397  0805  0800               	movf	0,w
   398  0806  0A84               	incf	4,f
   399  0807  1903               	skipnz
   400  0808  0AFF               	incf	btemp+1,f
   401  0809  0008               	return
   402  080A                     stringcode:
   403  080A  087F               	movf	btemp+1,w
   404  080B  397F               	andlw	127
   405  080C  008A               	movwf	10
   406  080D  0804               	movf	4,w
   407  080E  0A84               	incf	4,f
   408  080F  1903               	skipnz
   409  0810  0AFF               	incf	btemp+1,f
   410  0811  0082               	movwf	2
   411  0812                     __stringbase:
   412  0812                     __end_of__stringtab:
   413  0812                     _dpowers:
   414  0812  3401               	retlw	1
   415  0813  3400               	retlw	0
   416  0814  340A               	retlw	10
   417  0815  3400               	retlw	0
   418  0816  3464               	retlw	100
   419  0817  3400               	retlw	0
   420  0818  34E8               	retlw	232
   421  0819  3403               	retlw	3
   422  081A  3410               	retlw	16
   423  081B  3427               	retlw	39
   424  081C                     __end_of_dpowers:
   425  000C                     _PIR1bits	set	12
   426  000B                     _INTCONbits	set	11
   427  0018                     _RCSTAbits	set	24
   428  0013                     _SSPBUF	set	19
   429  0014                     _SSPCON	set	20
   430  0019                     _TXREG	set	25
   431  001A                     _RCREG	set	26
   432  0007                     _PORTCbits	set	7
   433  0009                     _PORTE	set	9
   434  0008                     _PORTD	set	8
   435  0007                     _PORTC	set	7
   436  0006                     _PORTB	set	6
   437  0005                     _PORTA	set	5
   438  0064                     _TXIF	set	100
   439  0065                     _RCIF	set	101
   440  0098                     _TXSTAbits	set	152
   441  009A                     _SPBRGH	set	154
   442  0099                     _SPBRG	set	153
   443  0094                     _SSPSTATbits	set	148
   444  0094                     _SSPSTAT	set	148
   445  008F                     _OSCCONbits	set	143
   446  0088                     _TRISD	set	136
   447  0087                     _TRISCbits	set	135
   448  0086                     _TRISB	set	134
   449  043B                     _TRISC3	set	1083
   450  043D                     _TRISC5	set	1085
   451  0187                     _BAUDCTLbits	set	391
   452  081C                     STR_2:
   453  081C  3449               	retlw	73	;'I'
   454  081D  346E               	retlw	110	;'n'
   455  081E  3467               	retlw	103	;'g'
   456  081F  3472               	retlw	114	;'r'
   457  0820  3465               	retlw	101	;'e'
   458  0821  3473               	retlw	115	;'s'
   459  0822  3461               	retlw	97	;'a'
   460  0823  3472               	retlw	114	;'r'
   461  0824  3420               	retlw	32	;' '
   462  0825  346C               	retlw	108	;'l'
   463  0826  3461               	retlw	97	;'a'
   464  0827  3420               	retlw	32	;' '
   465  0828  3463               	retlw	99	;'c'
   466  0829  3465               	retlw	101	;'e'
   467  082A  346E               	retlw	110	;'n'
   468  082B  3474               	retlw	116	;'t'
   469  082C  3465               	retlw	101	;'e'
   470  082D  346E               	retlw	110	;'n'
   471  082E  3461               	retlw	97	;'a'
   472  082F  3420               	retlw	32	;' '
   473  0830  3464               	retlw	100	;'d'
   474  0831  3465               	retlw	101	;'e'
   475  0832  3473               	retlw	115	;'s'
   476  0833  3465               	retlw	101	;'e'
   477  0834  3461               	retlw	97	;'a'
   478  0835  3464               	retlw	100	;'d'
   479  0836  3461               	retlw	97	;'a'
   480  0837  342C               	retlw	44	;','
   481  0838  3420               	retlw	32	;' '
   482  0839  3473               	retlw	115	;'s'
   483  083A  3469               	retlw	105	;'i'
   484  083B  3420               	retlw	32	;' '
   485  083C  3465               	retlw	101	;'e'
   486  083D  3473               	retlw	115	;'s'
   487  083E  3420               	retlw	32	;' '
   488  083F  343C               	retlw	60	;'<'
   489  0840  3431               	retlw	49	;'1'
   490  0841  3430               	retlw	48	;'0'
   491  0842  3430               	retlw	48	;'0'
   492  0843  3420               	retlw	32	;' '
   493  0844  3463               	retlw	99	;'c'
   494  0845  346F               	retlw	111	;'o'
   495  0846  346C               	retlw	108	;'l'
   496  0847  346F               	retlw	111	;'o'
   497  0848  3463               	retlw	99	;'c'
   498  0849  3461               	retlw	97	;'a'
   499  084A  3472               	retlw	114	;'r'
   500  084B  3420               	retlw	32	;' '
   501  084C  3430               	retlw	48	;'0'
   502  084D  342E               	retlw	46	;'.'
   503  084E  340D               	retlw	13
   504  084F  3400               	retlw	0
   505  0850                     STR_15:
   506  0850  3449               	retlw	73	;'I'
   507  0851  346E               	retlw	110	;'n'
   508  0852  3474               	retlw	116	;'t'
   509  0853  3472               	retlw	114	;'r'
   510  0854  346F               	retlw	111	;'o'
   511  0855  3464               	retlw	100	;'d'
   512  0856  3475               	retlw	117	;'u'
   513  0857  347A               	retlw	122	;'z'
   514  0858  3463               	retlw	99	;'c'
   515  0859  3461               	retlw	97	;'a'
   516  085A  3420               	retlw	32	;' '
   517  085B  3475               	retlw	117	;'u'
   518  085C  346E               	retlw	110	;'n'
   519  085D  3420               	retlw	32	;' '
   520  085E  3476               	retlw	118	;'v'
   521  085F  3461               	retlw	97	;'a'
   522  0860  346C               	retlw	108	;'l'
   523  0861  346F               	retlw	111	;'o'
   524  0862  3472               	retlw	114	;'r'
   525  0863  3420               	retlw	32	;' '
   526  0864  346D               	retlw	109	;'m'
   527  0865  3465               	retlw	101	;'e'
   528  0866  346E               	retlw	110	;'n'
   529  0867  346F               	retlw	111	;'o'
   530  0868  3472               	retlw	114	;'r'
   531  0869  3420               	retlw	32	;' '
   532  086A  346F               	retlw	111	;'o'
   533  086B  3420               	retlw	32	;' '
   534  086C  3469               	retlw	105	;'i'
   535  086D  3467               	retlw	103	;'g'
   536  086E  3475               	retlw	117	;'u'
   537  086F  3461               	retlw	97	;'a'
   538  0870  346C               	retlw	108	;'l'
   539  0871  3420               	retlw	32	;' '
   540  0872  3461               	retlw	97	;'a'
   541  0873  3420               	retlw	32	;' '
   542  0874  3435               	retlw	53	;'5'
   543  0875  340D               	retlw	13
   544  0876  3400               	retlw	0
   545  0877                     STR_1:
   546  0877  3420               	retlw	32	;' '
   547  0878  3456               	retlw	86	;'V'
   548  0879  3461               	retlw	97	;'a'
   549  087A  346C               	retlw	108	;'l'
   550  087B  346F               	retlw	111	;'o'
   551  087C  3472               	retlw	114	;'r'
   552  087D  3420               	retlw	32	;' '
   553  087E  3461               	retlw	97	;'a'
   554  087F  3463               	retlw	99	;'c'
   555  0880  3474               	retlw	116	;'t'
   556  0881  3475               	retlw	117	;'u'
   557  0882  3461               	retlw	97	;'a'
   558  0883  346C               	retlw	108	;'l'
   559  0884  3420               	retlw	32	;' '
   560  0885  3464               	retlw	100	;'d'
   561  0886  3465               	retlw	101	;'e'
   562  0887  3420               	retlw	32	;' '
   563  0888  346C               	retlw	108	;'l'
   564  0889  346F               	retlw	111	;'o'
   565  088A  3473               	retlw	115	;'s'
   566  088B  3420               	retlw	32	;' '
   567  088C  3476               	retlw	118	;'v'
   568  088D  346F               	retlw	111	;'o'
   569  088E  346C               	retlw	108	;'l'
   570  088F  3474               	retlw	116	;'t'
   571  0890  3461               	retlw	97	;'a'
   572  0891  346A               	retlw	106	;'j'
   573  0892  3465               	retlw	101	;'e'
   574  0893  3473               	retlw	115	;'s'
   575  0894  343A               	retlw	58	;':'
   576  0895  3420               	retlw	32	;' '
   577  0896  3400               	retlw	0
   578  0897                     STR_4:
   579  0897  3449               	retlw	73	;'I'
   580  0898  346E               	retlw	110	;'n'
   581  0899  3467               	retlw	103	;'g'
   582  089A  3472               	retlw	114	;'r'
   583  089B  3465               	retlw	101	;'e'
   584  089C  3473               	retlw	115	;'s'
   585  089D  3461               	retlw	97	;'a'
   586  089E  3472               	retlw	114	;'r'
   587  089F  3420               	retlw	32	;' '
   588  08A0  346C               	retlw	108	;'l'
   589  08A1  3461               	retlw	97	;'a'
   590  08A2  3420               	retlw	32	;' '
   591  08A3  3475               	retlw	117	;'u'
   592  08A4  346E               	retlw	110	;'n'
   593  08A5  3469               	retlw	105	;'i'
   594  08A6  3464               	retlw	100	;'d'
   595  08A7  3461               	retlw	97	;'a'
   596  08A8  3464               	retlw	100	;'d'
   597  08A9  3420               	retlw	32	;' '
   598  08AA  3464               	retlw	100	;'d'
   599  08AB  3465               	retlw	101	;'e'
   600  08AC  3473               	retlw	115	;'s'
   601  08AD  3465               	retlw	101	;'e'
   602  08AE  3461               	retlw	97	;'a'
   603  08AF  3464               	retlw	100	;'d'
   604  08B0  3461               	retlw	97	;'a'
   605  08B1  342E               	retlw	46	;'.'
   606  08B2  340D               	retlw	13
   607  08B3  340D               	retlw	13
   608  08B4  3400               	retlw	0
   609  08B5                     STR_14:
   610  08B5  3449               	retlw	73	;'I'
   611  08B6  346E               	retlw	110	;'n'
   612  08B7  3474               	retlw	116	;'t'
   613  08B8  3472               	retlw	114	;'r'
   614  08B9  346F               	retlw	111	;'o'
   615  08BA  3464               	retlw	100	;'d'
   616  08BB  3475               	retlw	117	;'u'
   617  08BC  347A               	retlw	122	;'z'
   618  08BD  3463               	retlw	99	;'c'
   619  08BE  3461               	retlw	97	;'a'
   620  08BF  3420               	retlw	32	;' '
   621  08C0  3475               	retlw	117	;'u'
   622  08C1  346E               	retlw	110	;'n'
   623  08C2  3420               	retlw	32	;' '
   624  08C3  3476               	retlw	118	;'v'
   625  08C4  3461               	retlw	97	;'a'
   626  08C5  346C               	retlw	108	;'l'
   627  08C6  346F               	retlw	111	;'o'
   628  08C7  3472               	retlw	114	;'r'
   629  08C8  3420               	retlw	32	;' '
   630  08C9  3464               	retlw	100	;'d'
   631  08CA  3465               	retlw	101	;'e'
   632  08CB  3420               	retlw	32	;' '
   633  08CC  3430               	retlw	48	;'0'
   634  08CD  3420               	retlw	32	;' '
   635  08CE  3461               	retlw	97	;'a'
   636  08CF  3420               	retlw	32	;' '
   637  08D0  3432               	retlw	50	;'2'
   638  08D1  340D               	retlw	13
   639  08D2  3400               	retlw	0
   640  08D3                     STR_3:
   641  08D3  3449               	retlw	73	;'I'
   642  08D4  346E               	retlw	110	;'n'
   643  08D5  3467               	retlw	103	;'g'
   644  08D6  3472               	retlw	114	;'r'
   645  08D7  3465               	retlw	101	;'e'
   646  08D8  3473               	retlw	115	;'s'
   647  08D9  3461               	retlw	97	;'a'
   648  08DA  3472               	retlw	114	;'r'
   649  08DB  3420               	retlw	32	;' '
   650  08DC  346C               	retlw	108	;'l'
   651  08DD  3461               	retlw	97	;'a'
   652  08DE  3420               	retlw	32	;' '
   653  08DF  3464               	retlw	100	;'d'
   654  08E0  3465               	retlw	101	;'e'
   655  08E1  3463               	retlw	99	;'c'
   656  08E2  3465               	retlw	101	;'e'
   657  08E3  346E               	retlw	110	;'n'
   658  08E4  3461               	retlw	97	;'a'
   659  08E5  3420               	retlw	32	;' '
   660  08E6  3464               	retlw	100	;'d'
   661  08E7  3465               	retlw	101	;'e'
   662  08E8  3473               	retlw	115	;'s'
   663  08E9  3465               	retlw	101	;'e'
   664  08EA  3461               	retlw	97	;'a'
   665  08EB  3464               	retlw	100	;'d'
   666  08EC  3461               	retlw	97	;'a'
   667  08ED  342E               	retlw	46	;'.'
   668  08EE  340D               	retlw	13
   669  08EF  3400               	retlw	0
   670  08F0                     STR_8:
   671  08F0  340D               	retlw	13
   672  08F1  342A               	retlw	42	;'*'
   673  08F2  3420               	retlw	32	;' '
   674  08F3  3456               	retlw	86	;'V'
   675  08F4  3431               	retlw	49	;'1'
   676  08F5  343A               	retlw	58	;':'
   677  08F6  3420               	retlw	32	;' '
   678  08F7  3400               	retlw	0
   679  08F8                     STR_11:
   680  08F8  340D               	retlw	13
   681  08F9  342A               	retlw	42	;'*'
   682  08FA  3420               	retlw	32	;' '
   683  08FB  3456               	retlw	86	;'V'
   684  08FC  3432               	retlw	50	;'2'
   685  08FD  343A               	retlw	58	;':'
   686  08FE  3420               	retlw	32	;' '
   687  08FF  3400               	retlw	0
   688  0900                     STR_5:
   689  0900  3425               	retlw	37	;'%'
   690  0901  3464               	retlw	100	;'d'
   691  0902  3400               	retlw	0
   692  0903                     STR_9:
   693  0903  342E               	retlw	46	;'.'
   694  0904  3400               	retlw	0
   695  08B3                     
   696                           	psect	cinit
   697  07F3                     start_initialization:	
   698                           ; #config settings
   699                           
   700  07F3                     __initialization:
   701                           
   702                           ; Clear objects allocated to BANK0
   703  07F3  1383               	bcf	3,7	;select IRP bank0
   704  07F4  3020               	movlw	low __pbssBANK0
   705  07F5  0084               	movwf	4
   706  07F6  3047               	movlw	low (__pbssBANK0+39)
   707  07F7  120A  118A  20BF  120A  118A  	fcall	clear_ram0
   708  07FC                     end_of_initialization:	
   709                           ;End of C runtime variable initialization code
   710                           
   711  07FC                     __end_of__initialization:
   712  07FC  0183               	clrf	3
   713  07FD  120A  118A  2E53   	ljmp	_main	;jump to C main() function
   714                           
   715                           	psect	bssBANK0
   716  0020                     __pbssBANK0:
   717  0020                     _u1:
   718  0020                     	ds	1
   719  0021                     _d1:
   720  0021                     	ds	1
   721  0022                     _c1:
   722  0022                     	ds	1
   723  0023                     _residuo:
   724  0023                     	ds	1
   725  0024                     _un:
   726  0024                     	ds	1
   727  0025                     _dec:
   728  0025                     	ds	1
   729  0026                     _cen:
   730  0026                     	ds	1
   731  0027                     _vol_b:
   732  0027                     	ds	1
   733  0028                     _vol_a:
   734  0028                     	ds	1
   735  0029                     _s3:
   736  0029                     	ds	10
   737  0033                     _s2:
   738  0033                     	ds	10
   739  003D                     _s1:
   740  003D                     	ds	10
   741                           
   742                           	psect	clrtext
   743  00BF                     clear_ram0:	
   744                           ;	Called with FSR containing the base address, and
   745                           ;	W with the last address+1
   746                           
   747  00BF  0064               	clrwdt	;clear the watchdog before getting into this loop
   748  00C0                     clrloop0:
   749  00C0  0180               	clrf	0	;clear RAM location pointed to by FSR
   750  00C1  0A84               	incf	4,f	;increment pointer
   751  00C2  0604               	xorwf	4,w	;XOR with final address
   752  00C3  1903               	btfsc	3,2	;have we reached the end yet?
   753  00C4  3400               	retlw	0	;all done for this memory range, return
   754  00C5  0604               	xorwf	4,w	;XOR again to restore value
   755  00C6  28C0               	goto	clrloop0	;do the next byte
   756                           
   757                           	psect	cstackCOMMON
   758  0070                     __pcstackCOMMON:
   759  0070                     ?_isdigit:
   760  0070                     ?_spiInit:	
   761                           ; 1 bit 
   762                           
   763  0070                     ?_config_USART:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ??_config_USART:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_spiWrite:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ??_spiWrite:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_spiRead:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ??_spiRead:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_division:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_mensaje1:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_mensaje2:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_precaucion:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_precaucion1:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_precaucion2:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_strcat:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ??_isdigit:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_setup:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_main:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_putch:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_spiReceiveWait:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ??_spiReceiveWait:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?___wmul:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?___awdiv:	
   824                           ; 2 bytes @ 0x0
   825                           
   826  0070                     ?___awmod:	
   827                           ; 2 bytes @ 0x0
   828                           
   829  0070                     ?___lwdiv:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0070                     putch@info:	
   833                           ; 2 bytes @ 0x0
   834                           
   835  0070                     spiInit@sDataSample:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     spiWrite@dat:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     _isdigit$1015:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     strcat@from:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ___wmul@multiplier:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ___awdiv@divisor:	
   851                           ; 2 bytes @ 0x0
   852                           
   853  0070                     ___awmod@divisor:	
   854                           ; 2 bytes @ 0x0
   855                           
   856  0070                     ___lwdiv@divisor:	
   857                           ; 2 bytes @ 0x0
   858                           
   859                           
   860                           ; 2 bytes @ 0x0
   861  0070                     	ds	1
   862  0071                     ??_strcat:
   863  0071                     ??_putch:	
   864                           ; 1 bytes @ 0x1
   865                           
   866  0071                     spiInit@sClockIdle:	
   867                           ; 1 bytes @ 0x1
   868                           
   869  0071                     isdigit@c:	
   870                           ; 1 bytes @ 0x1
   871                           
   872                           
   873                           ; 1 bytes @ 0x1
   874  0071                     	ds	1
   875  0072                     spiInit@sTransmitEdge:
   876  0072                     strcat@to:	
   877                           ; 1 bytes @ 0x2
   878                           
   879  0072                     ___wmul@multiplicand:	
   880                           ; 1 bytes @ 0x2
   881                           
   882  0072                     ___awdiv@dividend:	
   883                           ; 2 bytes @ 0x2
   884                           
   885  0072                     ___awmod@dividend:	
   886                           ; 2 bytes @ 0x2
   887                           
   888  0072                     ___lwdiv@dividend:	
   889                           ; 2 bytes @ 0x2
   890                           
   891                           
   892                           ; 2 bytes @ 0x2
   893  0072                     	ds	1
   894  0073                     ??_spiInit:
   895  0073                     spiInit@sType:	
   896                           ; 1 bytes @ 0x3
   897                           
   898  0073                     strcat@cp:	
   899                           ; 1 bytes @ 0x3
   900                           
   901                           
   902                           ; 1 bytes @ 0x3
   903  0073                     	ds	1
   904  0074                     ??_setup:
   905  0074                     ??___wmul:	
   906                           ; 1 bytes @ 0x4
   907                           
   908  0074                     ??___awdiv:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0074                     ??___awmod:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     ??___lwdiv:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     ___wmul@product:	
   918                           ; 1 bytes @ 0x4
   919                           
   920                           
   921                           ; 2 bytes @ 0x4
   922  0074                     	ds	1
   923  0075                     ___awdiv@counter:
   924  0075                     ___awmod@counter:	
   925                           ; 1 bytes @ 0x5
   926                           
   927  0075                     ___lwdiv@quotient:	
   928                           ; 1 bytes @ 0x5
   929                           
   930                           
   931                           ; 2 bytes @ 0x5
   932  0075                     	ds	1
   933  0076                     ?_atoi:
   934  0076                     ___awdiv@sign:	
   935                           ; 2 bytes @ 0x6
   936                           
   937  0076                     ___awmod@sign:	
   938                           ; 1 bytes @ 0x6
   939                           
   940                           
   941                           ; 1 bytes @ 0x6
   942  0076                     	ds	1
   943  0077                     ___lwdiv@counter:
   944  0077                     ___awdiv@quotient:	
   945                           ; 1 bytes @ 0x7
   946                           
   947                           
   948                           ; 2 bytes @ 0x7
   949  0077                     	ds	1
   950  0078                     ??_atoi:
   951  0078                     ?___lwmod:	
   952                           ; 1 bytes @ 0x8
   953                           
   954  0078                     ___lwmod@divisor:	
   955                           ; 2 bytes @ 0x8
   956                           
   957                           
   958                           ; 2 bytes @ 0x8
   959  0078                     	ds	1
   960  0079                     ??_division:
   961                           
   962                           ; 1 bytes @ 0x9
   963  0079                     	ds	1
   964  007A                     atoi@sign:
   965  007A                     ___lwmod@dividend:	
   966                           ; 1 bytes @ 0xA
   967                           
   968                           
   969                           ; 2 bytes @ 0xA
   970  007A                     	ds	1
   971  007B                     atoi@a:
   972                           
   973                           ; 2 bytes @ 0xB
   974  007B                     	ds	1
   975  007C                     ??___lwmod:
   976  007C                     division@dividendo:	
   977                           ; 1 bytes @ 0xC
   978                           
   979                           
   980                           ; 1 bytes @ 0xC
   981  007C                     	ds	1
   982  007D                     ___lwmod@counter:
   983  007D                     atoi@s:	
   984                           ; 1 bytes @ 0xD
   985                           
   986                           
   987                           ; 1 bytes @ 0xD
   988  007D                     	ds	1
   989                           
   990                           	psect	cstackBANK0
   991  0047                     __pcstackBANK0:
   992  0047                     ?__doprnt:
   993  0047                     __doprnt@f:	
   994                           ; 2 bytes @ 0x0
   995                           
   996                           
   997                           ; 2 bytes @ 0x0
   998  0047                     	ds	2
   999  0049                     __doprnt@ap:
  1000                           
  1001                           ; 1 bytes @ 0x2
  1002  0049                     	ds	1
  1003  004A                     ??__doprnt:
  1004                           
  1005                           ; 1 bytes @ 0x3
  1006  004A                     	ds	4
  1007  004E                     __doprnt@flag:
  1008                           
  1009                           ; 1 bytes @ 0x7
  1010  004E                     	ds	1
  1011  004F                     __doprnt@prec:
  1012                           
  1013                           ; 1 bytes @ 0x8
  1014  004F                     	ds	1
  1015  0050                     __doprnt@val:
  1016                           
  1017                           ; 2 bytes @ 0x9
  1018  0050                     	ds	2
  1019  0052                     __doprnt@c:
  1020                           
  1021                           ; 1 bytes @ 0xB
  1022  0052                     	ds	1
  1023  0053                     __doprnt@pb:
  1024                           
  1025                           ; 1 bytes @ 0xC
  1026  0053                     	ds	1
  1027  0054                     ?_printf:
  1028  0054                     ?_sprintf:	
  1029                           ; 2 bytes @ 0xD
  1030                           
  1031  0054                     printf@f:	
  1032                           ; 2 bytes @ 0xD
  1033                           
  1034  0054                     sprintf@f:	
  1035                           ; 2 bytes @ 0xD
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0xD
  1039  0054                     	ds	2
  1040  0056                     ??_printf:
  1041                           
  1042                           ; 1 bytes @ 0xF
  1043  0056                     	ds	1
  1044  0057                     printf@ap:
  1045                           
  1046                           ; 1 bytes @ 0x10
  1047  0057                     	ds	1
  1048  0058                     ??_sprintf:
  1049  0058                     printf@pb:	
  1050                           ; 1 bytes @ 0x11
  1051                           
  1052                           
  1053                           ; 2 bytes @ 0x11
  1054  0058                     	ds	1
  1055  0059                     sprintf@ap:
  1056                           
  1057                           ; 1 bytes @ 0x12
  1058  0059                     	ds	1
  1059  005A                     ??_mensaje1:
  1060  005A                     ??_mensaje2:	
  1061                           ; 1 bytes @ 0x13
  1062                           
  1063  005A                     ??_precaucion:	
  1064                           ; 1 bytes @ 0x13
  1065                           
  1066  005A                     ??_precaucion1:	
  1067                           ; 1 bytes @ 0x13
  1068                           
  1069  005A                     ??_precaucion2:	
  1070                           ; 1 bytes @ 0x13
  1071                           
  1072  005A                     sprintf@wh:	
  1073                           ; 1 bytes @ 0x13
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x13
  1077  005A                     	ds	1
  1078  005B                     sprintf@pb:
  1079                           
  1080                           ; 2 bytes @ 0x14
  1081  005B                     	ds	2
  1082  005D                     ??_main:
  1083                           
  1084                           ; 1 bytes @ 0x16
  1085  005D                     	ds	2
  1086  005F                     main@completo:
  1087                           
  1088                           ; 2 bytes @ 0x18
  1089  005F                     	ds	2
  1090                           
  1091                           	psect	maintext
  1092  0653                     __pmaintext:	
  1093 ;;
  1094 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1095 ;;
  1096 ;; *************** function _main *****************
  1097 ;; Defined at:
  1098 ;;		line 109 in file "Master.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  completo        2   24[BANK0 ] int 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : B00/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       2       0       0       0
  1114 ;;      Temps:          0       2       0       0       0
  1115 ;;      Totals:         0       4       0       0       0
  1116 ;;Total ram usage:        4 bytes
  1117 ;; Hardware stack levels required when called:    4
  1118 ;; This function calls:
  1119 ;;		_atoi
  1120 ;;		_division
  1121 ;;		_mensaje1
  1122 ;;		_mensaje2
  1123 ;;		_precaucion
  1124 ;;		_precaucion1
  1125 ;;		_precaucion2
  1126 ;;		_printf
  1127 ;;		_setup
  1128 ;;		_spiRead
  1129 ;;		_spiWrite
  1130 ;;		_sprintf
  1131 ;;		_strcat
  1132 ;; This function is called by:
  1133 ;;		Startup code after reset
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _main
  1139  0653                     _main:
  1140  0653                     l1831:	
  1141                           ;incstack = 0
  1142                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1143                           
  1144                           
  1145                           ;Master.c: 110:     setup();
  1146  0653  120A  118A  21D4  120A  118A  	fcall	_setup
  1147  0658                     l1833:
  1148                           
  1149                           ;Master.c: 112:         PORTCbits.RC2 = 0;
  1150  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1152  065A  1107               	bcf	7,2	;volatile
  1153  065B                     l1835:
  1154                           
  1155                           ;Master.c: 113:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1156  065B  30C7               	movlw	199
  1157  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1158  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1159  065E  00DD               	movwf	??_main
  1160  065F                     u1497:
  1161  065F  2E60               	nop2
  1162  0660  0BDD               	decfsz	??_main,f
  1163  0661  2E5F               	goto	u1497
  1164  0662  2E63               	nop2
  1165  0663                     l1837:
  1166                           
  1167                           ;Master.c: 115:        spiWrite(0x0A);
  1168  0663  300A               	movlw	10
  1169  0664  120A  118A  20B2  120A  118A  	fcall	_spiWrite
  1170  0669                     l1839:
  1171                           
  1172                           ;Master.c: 116:        vol_a = spiRead();
  1173  0669  120A  118A  20D0  120A  118A  	fcall	_spiRead
  1174  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1175  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0670  00DD               	movwf	??_main
  1177  0671  085D               	movf	??_main,w
  1178  0672  00A8               	movwf	_vol_a
  1179  0673                     l1841:
  1180                           
  1181                           ;Master.c: 117:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1182  0673  30C7               	movlw	199
  1183  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0676  00DD               	movwf	??_main
  1186  0677                     u1507:
  1187  0677  2E78               	nop2
  1188  0678  0BDD               	decfsz	??_main,f
  1189  0679  2E77               	goto	u1507
  1190  067A  2E7B               	nop2
  1191                           
  1192                           ;Master.c: 119:        spiWrite(0x0A);
  1193  067B  300A               	movlw	10
  1194  067C  120A  118A  20B2  120A  118A  	fcall	_spiWrite
  1195                           
  1196                           ;Master.c: 120:        vol_b = spiRead();
  1197  0681  120A  118A  20D0  120A  118A  	fcall	_spiRead
  1198  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0688  00DD               	movwf	??_main
  1201  0689  085D               	movf	??_main,w
  1202  068A  00A7               	movwf	_vol_b
  1203  068B                     l1843:
  1204                           
  1205                           ;Master.c: 121:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1206  068B  30C7               	movlw	199
  1207  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1208  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1209  068E  00DD               	movwf	??_main
  1210  068F                     u1517:
  1211  068F  2E90               	nop2
  1212  0690  0BDD               	decfsz	??_main,f
  1213  0691  2E8F               	goto	u1517
  1214  0692  2E93               	nop2
  1215  0693                     l1845:
  1216                           
  1217                           ;Master.c: 123:        PORTCbits.RC2 = 1;
  1218  0693  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0694  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0695  1507               	bsf	7,2	;volatile
  1221  0696                     l1847:
  1222                           
  1223                           ;Master.c: 124:        _delay((unsigned long)((50)*(4000000/4000.0)));
  1224  0696  3041               	movlw	65
  1225  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0699  00DE               	movwf	??_main+1
  1228  069A  30ED               	movlw	237
  1229  069B  00DD               	movwf	??_main
  1230  069C                     u1527:
  1231  069C  0BDD               	decfsz	??_main,f
  1232  069D  2E9C               	goto	u1527
  1233  069E  0BDE               	decfsz	??_main+1,f
  1234  069F  2E9C               	goto	u1527
  1235  06A0  2EA1               	nop2
  1236  06A1                     l1849:
  1237                           
  1238                           ;Master.c: 125:        printf(" Valor actual de los voltajes: ");
  1239  06A1  3077               	movlw	low (STR_1| (0+32768))
  1240  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1241  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1242  06A4  00D4               	movwf	printf@f
  1243  06A5  3088               	movlw	high (STR_1| (0+32768))
  1244  06A6  00D5               	movwf	printf@f+1
  1245  06A7  120A  118A  2101  120A  118A  	fcall	_printf
  1246  06AC                     l1851:
  1247                           
  1248                           ;Master.c: 126:        division(vol_a);
  1249  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1250  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1251  06AE  0828               	movf	_vol_a,w
  1252  06AF  120A  118A  23C3  120A  118A  	fcall	_division
  1253                           
  1254                           ;Master.c: 127:        mensaje1();
  1255  06B4  120A  118A  22F9  120A  118A  	fcall	_mensaje1
  1256  06B9                     l1853:
  1257                           
  1258                           ;Master.c: 128:        _delay((unsigned long)((50)*(4000000/4000.0)));
  1259  06B9  3041               	movlw	65
  1260  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1261  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1262  06BC  00DE               	movwf	??_main+1
  1263  06BD  30ED               	movlw	237
  1264  06BE  00DD               	movwf	??_main
  1265  06BF                     u1537:
  1266  06BF  0BDD               	decfsz	??_main,f
  1267  06C0  2EBF               	goto	u1537
  1268  06C1  0BDE               	decfsz	??_main+1,f
  1269  06C2  2EBF               	goto	u1537
  1270  06C3  2EC4               	nop2
  1271  06C4                     l1855:
  1272                           
  1273                           ;Master.c: 129:        division(vol_b);
  1274  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1275  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1276  06C6  0827               	movf	_vol_b,w
  1277  06C7  120A  118A  23C3  120A  118A  	fcall	_division
  1278  06CC                     l1857:
  1279                           
  1280                           ;Master.c: 130:        mensaje2();
  1281  06CC  120A  118A  235E  120A  118A  	fcall	_mensaje2
  1282  06D1                     l1859:
  1283                           
  1284                           ;Master.c: 131:        _delay((unsigned long)((50)*(4000000/4000.0)));
  1285  06D1  3041               	movlw	65
  1286  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1287  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1288  06D4  00DE               	movwf	??_main+1
  1289  06D5  30ED               	movlw	237
  1290  06D6  00DD               	movwf	??_main
  1291  06D7                     u1547:
  1292  06D7  0BDD               	decfsz	??_main,f
  1293  06D8  2ED7               	goto	u1547
  1294  06D9  0BDE               	decfsz	??_main+1,f
  1295  06DA  2ED7               	goto	u1547
  1296  06DB  2EDC               	nop2
  1297  06DC                     l1861:
  1298                           
  1299                           ;Master.c: 133:        printf("Ingresar la centena deseada, si es <100 colocar 0.\r");
  1300  06DC  301C               	movlw	low (STR_2| (0+32768))
  1301  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1302  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1303  06DF  00D4               	movwf	printf@f
  1304  06E0  3088               	movlw	high (STR_2| (0+32768))
  1305  06E1  00D5               	movwf	printf@f+1
  1306  06E2  120A  118A  2101  120A  118A  	fcall	_printf
  1307  06E7                     l91:	
  1308                           ;Master.c: 134:        while(RCIF == 0);
  1309                           
  1310  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1311  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1312  06E9  1E8C               	btfss	12,5	;volatile
  1313  06EA  2EEC               	goto	u1401
  1314  06EB  2EED               	goto	u1400
  1315  06EC                     u1401:
  1316  06EC  2EE7               	goto	l91
  1317  06ED                     u1400:
  1318  06ED                     l1863:
  1319                           
  1320                           ;Master.c: 135:        c1 = RCREG -48;
  1321  06ED  081A               	movf	26,w	;volatile
  1322  06EE  3ED0               	addlw	208
  1323  06EF  00DD               	movwf	??_main
  1324  06F0  085D               	movf	??_main,w
  1325  06F1  00A2               	movwf	_c1
  1326                           
  1327                           ;Master.c: 137:        while(RCREG > '2'){
  1328  06F2  2EF8               	goto	l1867
  1329  06F3                     l1865:
  1330                           
  1331                           ;Master.c: 138:            precaucion();
  1332  06F3  120A  118A  2137  120A  118A  	fcall	_precaucion
  1333  06F8                     l1867:
  1334                           
  1335                           ;Master.c: 137:        while(RCREG > '2'){
  1336  06F8  3033               	movlw	51
  1337  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1338  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1339  06FB  021A               	subwf	26,w	;volatile
  1340  06FC  1803               	skipnc
  1341  06FD  2EFF               	goto	u1411
  1342  06FE  2F00               	goto	u1410
  1343  06FF                     u1411:
  1344  06FF  2EF3               	goto	l1865
  1345  0700                     u1410:
  1346  0700                     l1869:
  1347                           
  1348                           ;Master.c: 141:        printf("Ingresar la decena deseada.\r");
  1349  0700  30D3               	movlw	low (STR_3| (0+32768))
  1350  0701  00D4               	movwf	printf@f
  1351  0702  3088               	movlw	high (STR_3| (0+32768))
  1352  0703  00D5               	movwf	printf@f+1
  1353  0704  120A  118A  2101  120A  118A  	fcall	_printf
  1354  0709                     l97:	
  1355                           ;Master.c: 142:        while(RCIF == 0);
  1356                           
  1357  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1358  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1359  070B  1E8C               	btfss	12,5	;volatile
  1360  070C  2F0E               	goto	u1421
  1361  070D  2F0F               	goto	u1420
  1362  070E                     u1421:
  1363  070E  2F09               	goto	l97
  1364  070F                     u1420:
  1365  070F                     l1871:
  1366                           
  1367                           ;Master.c: 143:        d1 = RCREG -48;
  1368  070F  081A               	movf	26,w	;volatile
  1369  0710  3ED0               	addlw	208
  1370  0711  00DD               	movwf	??_main
  1371  0712  085D               	movf	??_main,w
  1372  0713  00A1               	movwf	_d1
  1373                           
  1374                           ;Master.c: 145:        if(c1 == 2){
  1375  0714  3002               	movlw	2
  1376  0715  0622               	xorwf	_c1,w
  1377  0716  1D03               	btfss	3,2
  1378  0717  2F19               	goto	u1431
  1379  0718  2F1A               	goto	u1430
  1380  0719                     u1431:
  1381  0719  2F28               	goto	l1879
  1382  071A                     u1430:
  1383  071A  2F20               	goto	l1877
  1384  071B                     l1875:
  1385                           
  1386                           ;Master.c: 147:                precaucion1();
  1387  071B  120A  118A  2154  120A  118A  	fcall	_precaucion1
  1388  0720                     l1877:
  1389                           
  1390                           ;Master.c: 146:            while(RCREG > '5'){
  1391  0720  3036               	movlw	54
  1392  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0723  021A               	subwf	26,w	;volatile
  1395  0724  1803               	skipnc
  1396  0725  2F27               	goto	u1441
  1397  0726  2F28               	goto	u1440
  1398  0727                     u1441:
  1399  0727  2F1B               	goto	l1875
  1400  0728                     u1440:
  1401  0728                     l1879:
  1402                           
  1403                           ;Master.c: 151:        printf("Ingresar la unidad deseada.\r\r");
  1404  0728  3097               	movlw	low (STR_4| (0+32768))
  1405  0729  00D4               	movwf	printf@f
  1406  072A  3088               	movlw	high (STR_4| (0+32768))
  1407  072B  00D5               	movwf	printf@f+1
  1408  072C  120A  118A  2101  120A  118A  	fcall	_printf
  1409  0731                     l104:	
  1410                           ;Master.c: 152:        while(RCIF == 0);
  1411                           
  1412  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0733  1E8C               	btfss	12,5	;volatile
  1415  0734  2F36               	goto	u1451
  1416  0735  2F37               	goto	u1450
  1417  0736                     u1451:
  1418  0736  2F31               	goto	l104
  1419  0737                     u1450:
  1420  0737                     l1881:
  1421                           
  1422                           ;Master.c: 153:        u1 = RCREG -48;
  1423  0737  081A               	movf	26,w	;volatile
  1424  0738  3ED0               	addlw	208
  1425  0739  00DD               	movwf	??_main
  1426  073A  085D               	movf	??_main,w
  1427  073B  00A0               	movwf	_u1
  1428                           
  1429                           ;Master.c: 155:        if(c1 == 2 && d1 == 5){
  1430  073C  3002               	movlw	2
  1431  073D  0622               	xorwf	_c1,w
  1432  073E  1D03               	btfss	3,2
  1433  073F  2F41               	goto	u1461
  1434  0740  2F42               	goto	u1460
  1435  0741                     u1461:
  1436  0741  2F56               	goto	l1891
  1437  0742                     u1460:
  1438  0742                     l1883:
  1439  0742  3005               	movlw	5
  1440  0743  0621               	xorwf	_d1,w
  1441  0744  1D03               	btfss	3,2
  1442  0745  2F47               	goto	u1471
  1443  0746  2F48               	goto	u1470
  1444  0747                     u1471:
  1445  0747  2F56               	goto	l1891
  1446  0748                     u1470:
  1447  0748  2F4E               	goto	l1889
  1448  0749                     l1887:
  1449                           
  1450                           ;Master.c: 157:                precaucion2();
  1451  0749  120A  118A  2171  120A  118A  	fcall	_precaucion2
  1452  074E                     l1889:
  1453                           
  1454                           ;Master.c: 156:            while(RCREG > '5'){
  1455  074E  3036               	movlw	54
  1456  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0751  021A               	subwf	26,w	;volatile
  1459  0752  1803               	skipnc
  1460  0753  2F55               	goto	u1481
  1461  0754  2F56               	goto	u1480
  1462  0755                     u1481:
  1463  0755  2F49               	goto	l1887
  1464  0756                     u1480:
  1465  0756                     l1891:
  1466                           
  1467                           ;Master.c: 161:        sprintf(s1, "%d", c1);
  1468  0756  3000               	movlw	low (STR_5| (0+32768))
  1469  0757  00D4               	movwf	sprintf@f
  1470  0758  3089               	movlw	high (STR_5| (0+32768))
  1471  0759  00D5               	movwf	sprintf@f+1
  1472  075A  0822               	movf	_c1,w
  1473  075B  00DD               	movwf	??_main
  1474  075C  01DE               	clrf	??_main+1
  1475  075D  085D               	movf	??_main,w
  1476  075E  00D6               	movwf	?_sprintf+2
  1477  075F  085E               	movf	??_main+1,w
  1478  0760  00D7               	movwf	?_sprintf+3
  1479  0761  303D               	movlw	(low (_s1| 0))& (0+255)
  1480  0762  120A  118A  218E  120A  118A  	fcall	_sprintf
  1481                           
  1482                           ;Master.c: 162:        sprintf(s2, "%d", d1);
  1483  0767  3000               	movlw	low (STR_5| (0+32768))
  1484  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1486  076A  00D4               	movwf	sprintf@f
  1487  076B  3089               	movlw	high (STR_5| (0+32768))
  1488  076C  00D5               	movwf	sprintf@f+1
  1489  076D  0821               	movf	_d1,w
  1490  076E  00DD               	movwf	??_main
  1491  076F  01DE               	clrf	??_main+1
  1492  0770  085D               	movf	??_main,w
  1493  0771  00D6               	movwf	?_sprintf+2
  1494  0772  085E               	movf	??_main+1,w
  1495  0773  00D7               	movwf	?_sprintf+3
  1496  0774  3033               	movlw	(low (_s2| 0))& (0+255)
  1497  0775  120A  118A  218E  120A  118A  	fcall	_sprintf
  1498                           
  1499                           ;Master.c: 163:        sprintf(s3, "%d", u1);
  1500  077A  3000               	movlw	low (STR_5| (0+32768))
  1501  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1502  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1503  077D  00D4               	movwf	sprintf@f
  1504  077E  3089               	movlw	high (STR_5| (0+32768))
  1505  077F  00D5               	movwf	sprintf@f+1
  1506  0780  0820               	movf	_u1,w
  1507  0781  00DD               	movwf	??_main
  1508  0782  01DE               	clrf	??_main+1
  1509  0783  085D               	movf	??_main,w
  1510  0784  00D6               	movwf	?_sprintf+2
  1511  0785  085E               	movf	??_main+1,w
  1512  0786  00D7               	movwf	?_sprintf+3
  1513  0787  3029               	movlw	(low (_s3| 0))& (0+255)
  1514  0788  120A  118A  218E  120A  118A  	fcall	_sprintf
  1515  078D                     l1893:
  1516                           
  1517                           ;Master.c: 164:        strcat(s1, s2);
  1518  078D  3033               	movlw	(low (_s2| 0))& (0+255)
  1519  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1520  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0790  00DD               	movwf	??_main
  1522  0791  085D               	movf	??_main,w
  1523  0792  00F0               	movwf	strcat@from
  1524  0793  303D               	movlw	(low (_s1| 0))& (0+255)
  1525  0794  120A  118A  21F9  120A  118A  	fcall	_strcat
  1526  0799                     l1895:
  1527                           
  1528                           ;Master.c: 165:        strcat(s1, s3);
  1529  0799  3029               	movlw	(low (_s3| 0))& (0+255)
  1530  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1531  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1532  079C  00DD               	movwf	??_main
  1533  079D  085D               	movf	??_main,w
  1534  079E  00F0               	movwf	strcat@from
  1535  079F  303D               	movlw	(low (_s1| 0))& (0+255)
  1536  07A0  120A  118A  21F9  120A  118A  	fcall	_strcat
  1537  07A5                     l1897:
  1538                           
  1539                           ;Master.c: 166:        int completo = atoi(s1);
  1540  07A5  303D               	movlw	(low (_s1| 0))& (0+255)
  1541  07A6  120A  118A  2490  120A  118A  	fcall	_atoi
  1542  07AB  0877               	movf	?_atoi+1,w
  1543  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1544  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1545  07AE  00E0               	movwf	main@completo+1
  1546  07AF  0876               	movf	?_atoi,w
  1547  07B0  00DF               	movwf	main@completo
  1548  07B1                     l1899:
  1549                           
  1550                           ;Master.c: 167:        division(completo);
  1551  07B1  085F               	movf	main@completo,w
  1552  07B2  120A  118A  23C3  120A  118A  	fcall	_division
  1553  07B7                     l1901:
  1554                           
  1555                           ;Master.c: 168:        _delay((unsigned long)((100)*(4000000/4000.0)));
  1556  07B7  3082               	movlw	130
  1557  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1558  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1559  07BA  00DE               	movwf	??_main+1
  1560  07BB  30DD               	movlw	221
  1561  07BC  00DD               	movwf	??_main
  1562  07BD                     u1557:
  1563  07BD  0BDD               	decfsz	??_main,f
  1564  07BE  2FBD               	goto	u1557
  1565  07BF  0BDE               	decfsz	??_main+1,f
  1566  07C0  2FBD               	goto	u1557
  1567  07C1                     l1903:
  1568                           
  1569                           ;Master.c: 169:        TXREG = cen;
  1570  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1571  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1572  07C3  0826               	movf	_cen,w
  1573  07C4  0099               	movwf	25	;volatile
  1574  07C5                     l1905:
  1575                           
  1576                           ;Master.c: 170:        _delay((unsigned long)((100)*(4000000/4000.0)));
  1577  07C5  3082               	movlw	130
  1578  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1579  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1580  07C8  00DE               	movwf	??_main+1
  1581  07C9  30DD               	movlw	221
  1582  07CA  00DD               	movwf	??_main
  1583  07CB                     u1567:
  1584  07CB  0BDD               	decfsz	??_main,f
  1585  07CC  2FCB               	goto	u1567
  1586  07CD  0BDE               	decfsz	??_main+1,f
  1587  07CE  2FCB               	goto	u1567
  1588  07CF                     l1907:
  1589                           
  1590                           ;Master.c: 171:        TXREG = dec;
  1591  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1592  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1593  07D1  0825               	movf	_dec,w
  1594  07D2  0099               	movwf	25	;volatile
  1595  07D3                     l1909:
  1596                           
  1597                           ;Master.c: 172:        _delay((unsigned long)((100)*(4000000/4000.0)));
  1598  07D3  3082               	movlw	130
  1599  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1600  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1601  07D6  00DE               	movwf	??_main+1
  1602  07D7  30DD               	movlw	221
  1603  07D8  00DD               	movwf	??_main
  1604  07D9                     u1577:
  1605  07D9  0BDD               	decfsz	??_main,f
  1606  07DA  2FD9               	goto	u1577
  1607  07DB  0BDE               	decfsz	??_main+1,f
  1608  07DC  2FD9               	goto	u1577
  1609  07DD                     l1911:
  1610                           
  1611                           ;Master.c: 173:        TXREG = un;
  1612  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  1613  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  1614  07DF  0824               	movf	_un,w
  1615  07E0  0099               	movwf	25	;volatile
  1616  07E1                     l1913:
  1617                           
  1618                           ;Master.c: 174:        _delay((unsigned long)((100)*(4000000/4000.0)));
  1619  07E1  3082               	movlw	130
  1620  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1621  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1622  07E4  00DE               	movwf	??_main+1
  1623  07E5  30DD               	movlw	221
  1624  07E6  00DD               	movwf	??_main
  1625  07E7                     u1587:
  1626  07E7  0BDD               	decfsz	??_main,f
  1627  07E8  2FE7               	goto	u1587
  1628  07E9  0BDE               	decfsz	??_main+1,f
  1629  07EA  2FE7               	goto	u1587
  1630  07EB                     l1915:
  1631                           
  1632                           ;Master.c: 175:        PORTD = completo;
  1633  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  1634  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  1635  07ED  085F               	movf	main@completo,w
  1636  07EE  0088               	movwf	8	;volatile
  1637  07EF  2E58               	goto	l1833
  1638  07F0  120A  118A  2800   	ljmp	start
  1639  07F3                     __end_of_main:
  1640                           
  1641                           	psect	text1
  1642  01F9                     __ptext1:	
  1643 ;; *************** function _strcat *****************
  1644 ;; Defined at:
  1645 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  to              1    wreg     PTR unsigned char 
  1648 ;;		 -> s1(10), 
  1649 ;;  from            1    0[COMMON] PTR const unsigned char 
  1650 ;;		 -> s3(10), s2(10), 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  to              1    2[COMMON] PTR unsigned char 
  1653 ;;		 -> s1(10), 
  1654 ;;  cp              1    3[COMMON] PTR unsigned char 
  1655 ;;		 -> s1(10), 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      PTR unsigned char 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         1       0       0       0       0
  1666 ;;      Locals:         2       0       0       0       0
  1667 ;;      Temps:          1       0       0       0       0
  1668 ;;      Totals:         4       0       0       0       0
  1669 ;;Total ram usage:        4 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _strcat
  1680  01F9                     _strcat:
  1681                           
  1682                           ;incstack = 0
  1683                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1684                           ;strcat@to stored from wreg
  1685  01F9  00F2               	movwf	strcat@to
  1686  01FA                     l1787:
  1687  01FA  0872               	movf	strcat@to,w
  1688  01FB  00F1               	movwf	??_strcat
  1689  01FC  0871               	movf	??_strcat,w
  1690  01FD  00F3               	movwf	strcat@cp
  1691  01FE  2A03               	goto	l1791
  1692  01FF                     l1789:
  1693  01FF  3001               	movlw	1
  1694  0200  00F1               	movwf	??_strcat
  1695  0201  0871               	movf	??_strcat,w
  1696  0202  07F3               	addwf	strcat@cp,f
  1697  0203                     l1791:
  1698  0203  0873               	movf	strcat@cp,w
  1699  0204  0084               	movwf	4
  1700  0205  1383               	bcf	3,7	;select IRP bank0
  1701  0206  0800               	movf	0,w
  1702  0207  1D03               	btfss	3,2
  1703  0208  2A0A               	goto	u1321
  1704  0209  2A0B               	goto	u1320
  1705  020A                     u1321:
  1706  020A  29FF               	goto	l1789
  1707  020B                     u1320:
  1708  020B  2A14               	goto	l1795
  1709  020C                     l1793:
  1710  020C  3001               	movlw	1
  1711  020D  00F1               	movwf	??_strcat
  1712  020E  0871               	movf	??_strcat,w
  1713  020F  07F3               	addwf	strcat@cp,f
  1714  0210  3001               	movlw	1
  1715  0211  00F1               	movwf	??_strcat
  1716  0212  0871               	movf	??_strcat,w
  1717  0213  07F0               	addwf	strcat@from,f
  1718  0214                     l1795:
  1719  0214  0870               	movf	strcat@from,w
  1720  0215  0084               	movwf	4
  1721  0216  0800               	movf	0,w
  1722  0217  00F1               	movwf	??_strcat
  1723  0218  0873               	movf	strcat@cp,w
  1724  0219  0084               	movwf	4
  1725  021A  0871               	movf	??_strcat,w
  1726  021B  0080               	movwf	0
  1727  021C  0800               	movf	0,w
  1728  021D  1D03               	btfss	3,2
  1729  021E  2A20               	goto	u1331
  1730  021F  2A21               	goto	u1330
  1731  0220                     u1331:
  1732  0220  2A0C               	goto	l1793
  1733  0221                     u1330:
  1734  0221                     l817:
  1735  0221  0008               	return
  1736  0222                     __end_of_strcat:
  1737                           
  1738                           	psect	text2
  1739  018E                     __ptext2:	
  1740 ;; *************** function _sprintf *****************
  1741 ;; Defined at:
  1742 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  wh              1    wreg     PTR unsigned char 
  1745 ;;		 -> s3(10), s2(10), s1(10), 
  1746 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  1747 ;;		 -> STR_7(3), STR_6(3), STR_5(3), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  wh              1   19[BANK0 ] PTR unsigned char 
  1750 ;;		 -> s3(10), s2(10), s1(10), 
  1751 ;;  pb              2   20[BANK0 ] struct __prbuf
  1752 ;;  ap              1   18[BANK0 ] PTR void [1]
  1753 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  2   13[BANK0 ] int 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         0       4       0       0       0
  1764 ;;      Locals:         0       4       0       0       0
  1765 ;;      Temps:          0       1       0       0       0
  1766 ;;      Totals:         0       9       0       0       0
  1767 ;;Total ram usage:        9 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    2
  1770 ;; This function calls:
  1771 ;;		__doprnt
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _sprintf
  1779  018E                     _sprintf:
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1783                           ;sprintf@wh stored from wreg
  1784  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1785  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0190  00DA               	movwf	sprintf@wh
  1787  0191                     l1775:
  1788  0191  085A               	movf	sprintf@wh,w
  1789  0192  00D8               	movwf	??_sprintf
  1790  0193  0858               	movf	??_sprintf,w
  1791  0194  00DB               	movwf	sprintf@pb
  1792  0195                     l1777:
  1793  0195  01DC               	clrf	low ((sprintf@pb| 0+1))
  1794  0196                     l1779:
  1795  0196  3056               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1796  0197  00D8               	movwf	??_sprintf
  1797  0198  0858               	movf	??_sprintf,w
  1798  0199  00D9               	movwf	sprintf@ap
  1799  019A                     l1781:
  1800  019A  0854               	movf	sprintf@f,w
  1801  019B  00C7               	movwf	__doprnt@f
  1802  019C  0855               	movf	sprintf@f+1,w
  1803  019D  00C8               	movwf	__doprnt@f+1
  1804  019E  3059               	movlw	(low (sprintf@ap| 0))& (0+255)
  1805  019F  00D8               	movwf	??_sprintf
  1806  01A0  0858               	movf	??_sprintf,w
  1807  01A1  00C9               	movwf	__doprnt@ap
  1808  01A2  305B               	movlw	(low (sprintf@pb| 0))& (0+255)
  1809  01A3  120A  118A  250B  120A  118A  	fcall	__doprnt
  1810  01A8                     l1783:
  1811  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1812  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1813  01AA  085B               	movf	sprintf@pb,w
  1814  01AB  0084               	movwf	4
  1815  01AC  1383               	bcf	3,7	;select IRP bank0
  1816  01AD  0180               	clrf	0
  1817  01AE                     l808:
  1818  01AE  0008               	return
  1819  01AF                     __end_of_sprintf:
  1820                           
  1821                           	psect	text3
  1822  00B2                     __ptext3:	
  1823 ;; *************** function _spiWrite *****************
  1824 ;; Defined at:
  1825 ;;		line 34 in file "SPI.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  dat             1    wreg     unsigned char 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  dat             1    0[COMMON] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1839 ;;      Params:         0       0       0       0       0
  1840 ;;      Locals:         1       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0
  1842 ;;      Totals:         1       0       0       0       0
  1843 ;;Total ram usage:        1 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _spiWrite
  1854  00B2                     _spiWrite:
  1855                           
  1856                           ;incstack = 0
  1857                           ; Regs used in _spiWrite: [wreg]
  1858                           ;spiWrite@dat stored from wreg
  1859  00B2  00F0               	movwf	spiWrite@dat
  1860  00B3                     l1715:
  1861                           
  1862                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1863  00B3  0870               	movf	spiWrite@dat,w
  1864  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1865  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1866  00B6  0093               	movwf	19	;volatile
  1867  00B7                     l175:
  1868  00B7  0008               	return
  1869  00B8                     __end_of_spiWrite:
  1870                           
  1871                           	psect	text4
  1872  00D0                     __ptext4:	
  1873 ;; *************** function _spiRead *****************
  1874 ;; Defined at:
  1875 ;;		line 47 in file "SPI.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      unsigned char 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    1
  1896 ;; This function calls:
  1897 ;;		_spiReceiveWait
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _spiRead
  1905  00D0                     _spiRead:
  1906  00D0                     l1717:	
  1907                           ;incstack = 0
  1908                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1909                           
  1910                           
  1911                           ;SPI.c: 49:     spiReceiveWait();
  1912  00D0  120A  118A  20B8  120A  118A  	fcall	_spiReceiveWait
  1913  00D5                     l1719:
  1914                           
  1915                           ;SPI.c: 50:     return(SSPBUF);
  1916  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1917  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1918  00D7  0813               	movf	19,w	;volatile
  1919  00D8                     l183:
  1920  00D8  0008               	return
  1921  00D9                     __end_of_spiRead:
  1922                           
  1923                           	psect	text5
  1924  00B8                     __ptext5:	
  1925 ;; *************** function _spiReceiveWait *****************
  1926 ;; Defined at:
  1927 ;;		line 29 in file "SPI.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		None
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0
  1944 ;;      Totals:         0       0       0       0       0
  1945 ;;Total ram usage:        0 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_spiRead
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _spiReceiveWait
  1956  00B8                     _spiReceiveWait:
  1957  00B8                     l1581:	
  1958                           ;incstack = 0
  1959                           ; Regs used in _spiReceiveWait: []
  1960                           
  1961  00B8                     l169:	
  1962                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1963                           
  1964  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  1965  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  1966  00BA  1C14               	btfss	20,0	;volatile
  1967  00BB  28BD               	goto	u1001
  1968  00BC  28BE               	goto	u1000
  1969  00BD                     u1001:
  1970  00BD  28B8               	goto	l169
  1971  00BE                     u1000:
  1972  00BE                     l172:
  1973  00BE  0008               	return
  1974  00BF                     __end_of_spiReceiveWait:
  1975                           
  1976                           	psect	text6
  1977  01D4                     __ptext6:	
  1978 ;; *************** function _setup *****************
  1979 ;; Defined at:
  1980 ;;		line 76 in file "Master.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, pclath, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    1
  2001 ;; This function calls:
  2002 ;;		_config_USART
  2003 ;;		_spiInit
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           
  2010                           ;psect for function _setup
  2011  01D4                     _setup:
  2012  01D4                     l1691:	
  2013                           ;incstack = 0
  2014                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2015                           
  2016                           
  2017                           ;Master.c: 77:     TRISB = 0X00;
  2018  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  2019  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  2020  01D6  0186               	clrf	6	;volatile
  2021  01D7                     l1693:
  2022                           
  2023                           ;Master.c: 79:     TRISCbits.TRISC2 = 1;
  2024  01D7  1507               	bsf	7,2	;volatile
  2025  01D8                     l1695:
  2026                           
  2027                           ;Master.c: 80:     TRISCbits.TRISC3 = 1;
  2028  01D8  1587               	bsf	7,3	;volatile
  2029  01D9                     l1697:
  2030                           
  2031                           ;Master.c: 81:     TRISCbits.TRISC5 = 1;
  2032  01D9  1687               	bsf	7,5	;volatile
  2033                           
  2034                           ;Master.c: 82:     TRISD = 0X00;
  2035  01DA  0188               	clrf	8	;volatile
  2036  01DB                     l1699:
  2037                           
  2038                           ;Master.c: 83:     TRISCbits.TRISC6 = 0;
  2039  01DB  1307               	bcf	7,6	;volatile
  2040  01DC                     l1701:
  2041                           
  2042                           ;Master.c: 84:     TRISCbits.TRISC7 = 1;
  2043  01DC  1787               	bsf	7,7	;volatile
  2044                           
  2045                           ;Master.c: 87:     PORTA = 0X00;
  2046  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2047  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2048  01DF  0185               	clrf	5	;volatile
  2049                           
  2050                           ;Master.c: 88:     PORTB = 0X00;
  2051  01E0  0186               	clrf	6	;volatile
  2052                           
  2053                           ;Master.c: 89:     PORTC = 0X00;
  2054  01E1  0187               	clrf	7	;volatile
  2055                           
  2056                           ;Master.c: 90:     PORTD = 0X00;
  2057  01E2  0188               	clrf	8	;volatile
  2058                           
  2059                           ;Master.c: 91:     PORTE = 0X00;
  2060  01E3  0189               	clrf	9	;volatile
  2061  01E4                     l1703:
  2062                           
  2063                           ;Master.c: 94:     OSCCONbits.SCS = 1;
  2064  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  2065  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  2066  01E6  140F               	bsf	15,0	;volatile
  2067  01E7                     l1705:
  2068                           
  2069                           ;Master.c: 95:     OSCCONbits.IRCF2 = 1;
  2070  01E7  170F               	bsf	15,6	;volatile
  2071  01E8                     l1707:
  2072                           
  2073                           ;Master.c: 96:     OSCCONbits.IRCF1 = 1;
  2074  01E8  168F               	bsf	15,5	;volatile
  2075  01E9                     l1709:
  2076                           
  2077                           ;Master.c: 97:     OSCCONbits.IRCF0 = 0;
  2078  01E9  120F               	bcf	15,4	;volatile
  2079  01EA                     l1711:
  2080                           
  2081                           ;Master.c: 100:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW,
  2082  01EA  01F0               	clrf	spiInit@sDataSample
  2083  01EB  01F1               	clrf	spiInit@sClockIdle
  2084  01EC  01F2               	clrf	spiInit@sTransmitEdge
  2085  01ED  3020               	movlw	32
  2086  01EE  120A  118A  20EB  120A  118A  	fcall	_spiInit
  2087  01F3                     l1713:
  2088                           
  2089                           ;Master.c: 103:     config_USART();
  2090  01F3  120A  118A  211B  120A  118A  	fcall	_config_USART
  2091  01F8                     l85:
  2092  01F8  0008               	return
  2093  01F9                     __end_of_setup:
  2094                           
  2095                           	psect	text7
  2096  00EB                     __ptext7:	
  2097 ;; *************** function _spiInit *****************
  2098 ;; Defined at:
  2099 ;;		line 12 in file "SPI.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  sType           1    wreg     enum E1264
  2102 ;;  sDataSample     1    0[COMMON] enum E1272
  2103 ;;  sClockIdle      1    1[COMMON] enum E1276
  2104 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  sType           1    3[COMMON] enum E1264
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         3       0       0       0       0
  2117 ;;      Locals:         1       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0
  2119 ;;      Totals:         4       0       0       0       0
  2120 ;;Total ram usage:        4 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_setup
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _spiInit
  2131  00EB                     _spiInit:
  2132                           
  2133                           ;incstack = 0
  2134                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2135                           ;spiInit@sType stored from wreg
  2136  00EB  00F3               	movwf	spiInit@sType
  2137  00EC                     l1533:
  2138                           
  2139                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2140  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  2141  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  2142  00EE  1287               	bcf	7,5	;volatile
  2143                           
  2144                           ;SPI.c: 15:     if(sType & 0b00000100)
  2145  00EF  1D73               	btfss	spiInit@sType,2
  2146  00F0  28F2               	goto	u991
  2147  00F1  28F3               	goto	u990
  2148  00F2                     u991:
  2149  00F2  28F7               	goto	l1539
  2150  00F3                     u990:
  2151  00F3                     l1535:
  2152                           
  2153                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2154  00F3  0872               	movf	spiInit@sTransmitEdge,w
  2155  00F4  0094               	movwf	20	;volatile
  2156  00F5                     l1537:
  2157                           
  2158                           ;SPI.c: 18:         TRISC3 = 1;
  2159  00F5  1587               	bsf	7,3	;volatile
  2160                           
  2161                           ;SPI.c: 19:     }
  2162  00F6  28FB               	goto	l165
  2163  00F7                     l1539:
  2164                           
  2165                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2166  00F7  0870               	movf	spiInit@sDataSample,w
  2167  00F8  0472               	iorwf	spiInit@sTransmitEdge,w
  2168  00F9  0094               	movwf	20	;volatile
  2169  00FA                     l1541:
  2170                           
  2171                           ;SPI.c: 23:         TRISC3 = 0;
  2172  00FA  1187               	bcf	7,3	;volatile
  2173  00FB                     l165:	
  2174                           ;SPI.c: 24:     }
  2175                           
  2176                           
  2177                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2178  00FB  0873               	movf	spiInit@sType,w
  2179  00FC  0471               	iorwf	spiInit@sClockIdle,w
  2180  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2181  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2182  00FF  0094               	movwf	20	;volatile
  2183  0100                     l166:
  2184  0100  0008               	return
  2185  0101                     __end_of_spiInit:
  2186                           
  2187                           	psect	text8
  2188  011B                     __ptext8:	
  2189 ;; *************** function _config_USART *****************
  2190 ;; Defined at:
  2191 ;;		line 12 in file "config_USART.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0
  2208 ;;      Totals:         0       0       0       0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_setup
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           
  2219                           ;psect for function _config_USART
  2220  011B                     _config_USART:
  2221  011B                     l1543:	
  2222                           ;incstack = 0
  2223                           ; Regs used in _config_USART: [wreg+status,2]
  2224                           
  2225                           
  2226                           ;config_USART.c: 14:     SPBRG = 103;
  2227  011B  3067               	movlw	103
  2228  011C  1683               	bsf	3,5	;RP0=1, select bank1
  2229  011D  1303               	bcf	3,6	;RP1=0, select bank1
  2230  011E  0099               	movwf	25	;volatile
  2231  011F                     l1545:
  2232                           
  2233                           ;config_USART.c: 15:     SPBRGH = 0;
  2234  011F  019A               	clrf	26	;volatile
  2235  0120                     l1547:
  2236                           
  2237                           ;config_USART.c: 16:     BAUDCTLbits.BRG16 = 1;
  2238  0120  1683               	bsf	3,5	;RP0=1, select bank3
  2239  0121  1703               	bsf	3,6	;RP1=1, select bank3
  2240  0122  1587               	bsf	7,3	;volatile
  2241  0123                     l1549:
  2242                           
  2243                           ;config_USART.c: 17:     TXSTAbits.BRGH = 1;
  2244  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0124  1303               	bcf	3,6	;RP1=0, select bank1
  2246  0125  1518               	bsf	24,2	;volatile
  2247  0126                     l1551:
  2248                           
  2249                           ;config_USART.c: 19:     TXSTAbits.SYNC = 0;
  2250  0126  1218               	bcf	24,4	;volatile
  2251  0127                     l1553:
  2252                           
  2253                           ;config_USART.c: 21:     RCSTAbits.SPEN = 1;
  2254  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0129  1798               	bsf	24,7	;volatile
  2257  012A                     l1555:
  2258                           
  2259                           ;config_USART.c: 22:     RCSTAbits.CREN = 1;
  2260  012A  1618               	bsf	24,4	;volatile
  2261  012B                     l1557:
  2262                           
  2263                           ;config_USART.c: 24:     TXSTAbits.TX9 = 0;
  2264  012B  1683               	bsf	3,5	;RP0=1, select bank1
  2265  012C  1303               	bcf	3,6	;RP1=0, select bank1
  2266  012D  1318               	bcf	24,6	;volatile
  2267  012E                     l1559:
  2268                           
  2269                           ;config_USART.c: 25:     TXSTAbits.TXEN = 1;
  2270  012E  1698               	bsf	24,5	;volatile
  2271  012F                     l1561:
  2272                           
  2273                           ;config_USART.c: 26:     RCSTAbits.RX9 = 0;
  2274  012F  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0130  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0131  1318               	bcf	24,6	;volatile
  2277  0132                     l1563:
  2278                           
  2279                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  2280  0132  178B               	bsf	11,7	;volatile
  2281  0133                     l1565:
  2282                           
  2283                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  2284  0133  170B               	bsf	11,6	;volatile
  2285  0134                     l1567:
  2286                           
  2287                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  2288  0134  120C               	bcf	12,4	;volatile
  2289  0135                     l1569:
  2290                           
  2291                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  2292  0135  128C               	bcf	12,5	;volatile
  2293  0136                     l200:
  2294  0136  0008               	return
  2295  0137                     __end_of_config_USART:
  2296                           
  2297                           	psect	text9
  2298  0171                     __ptext9:	
  2299 ;; *************** function _precaucion2 *****************
  2300 ;; Defined at:
  2301 ;;		line 243 in file "Master.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0
  2317 ;;      Temps:          0       1       0       0       0
  2318 ;;      Totals:         0       1       0       0       0
  2319 ;;Total ram usage:        1 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    3
  2322 ;; This function calls:
  2323 ;;		_printf
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _precaucion2
  2331  0171                     _precaucion2:
  2332  0171                     l1769:	
  2333                           ;incstack = 0
  2334                           ; Regs used in _precaucion2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2335                           
  2336                           
  2337                           ;Master.c: 244:     if(RCREG > 5){
  2338  0171  3006               	movlw	6
  2339  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0174  021A               	subwf	26,w	;volatile
  2342  0175  1C03               	skipc
  2343  0176  2978               	goto	u1301
  2344  0177  2979               	goto	u1300
  2345  0178                     u1301:
  2346  0178  2982               	goto	l146
  2347  0179                     u1300:
  2348  0179                     l1771:
  2349                           
  2350                           ;Master.c: 245:            printf("Introduzca un valor menor o igual a 5\r");
  2351  0179  3050               	movlw	low (STR_15| (0+32768))
  2352  017A  00D4               	movwf	printf@f
  2353  017B  3088               	movlw	high (STR_15| (0+32768))
  2354  017C  00D5               	movwf	printf@f+1
  2355  017D  120A  118A  2101  120A  118A  	fcall	_printf
  2356  0182                     l146:
  2357  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0184  1E8C               	btfss	12,5	;volatile
  2360  0185  2987               	goto	u1311
  2361  0186  2988               	goto	u1310
  2362  0187                     u1311:
  2363  0187  2982               	goto	l146
  2364  0188                     u1310:
  2365  0188                     l1773:
  2366                           
  2367                           ;Master.c: 248:        u1 = RCREG -48;
  2368  0188  081A               	movf	26,w	;volatile
  2369  0189  3ED0               	addlw	208
  2370  018A  00DA               	movwf	??_precaucion2
  2371  018B  085A               	movf	??_precaucion2,w
  2372  018C  00A0               	movwf	_u1
  2373  018D                     l149:
  2374  018D  0008               	return
  2375  018E                     __end_of_precaucion2:
  2376                           
  2377                           	psect	text10
  2378  0154                     __ptext10:	
  2379 ;; *************** function _precaucion1 *****************
  2380 ;; Defined at:
  2381 ;;		line 235 in file "Master.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0
  2397 ;;      Temps:          0       1       0       0       0
  2398 ;;      Totals:         0       1       0       0       0
  2399 ;;Total ram usage:        1 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    3
  2402 ;; This function calls:
  2403 ;;		_printf
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _precaucion1
  2411  0154                     _precaucion1:
  2412  0154                     l1763:	
  2413                           ;incstack = 0
  2414                           ; Regs used in _precaucion1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2415                           
  2416                           
  2417                           ;Master.c: 236:     if(RCREG > 5){
  2418  0154  3006               	movlw	6
  2419  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0157  021A               	subwf	26,w	;volatile
  2422  0158  1C03               	skipc
  2423  0159  295B               	goto	u1281
  2424  015A  295C               	goto	u1280
  2425  015B                     u1281:
  2426  015B  2965               	goto	l139
  2427  015C                     u1280:
  2428  015C                     l1765:
  2429                           
  2430                           ;Master.c: 237:            printf("Introduzca un valor menor o igual a 5\r");
  2431  015C  3050               	movlw	low (STR_15| (0+32768))
  2432  015D  00D4               	movwf	printf@f
  2433  015E  3088               	movlw	high (STR_15| (0+32768))
  2434  015F  00D5               	movwf	printf@f+1
  2435  0160  120A  118A  2101  120A  118A  	fcall	_printf
  2436  0165                     l139:
  2437  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0167  1E8C               	btfss	12,5	;volatile
  2440  0168  296A               	goto	u1291
  2441  0169  296B               	goto	u1290
  2442  016A                     u1291:
  2443  016A  2965               	goto	l139
  2444  016B                     u1290:
  2445  016B                     l1767:
  2446                           
  2447                           ;Master.c: 240:        d1 = RCREG -48;
  2448  016B  081A               	movf	26,w	;volatile
  2449  016C  3ED0               	addlw	208
  2450  016D  00DA               	movwf	??_precaucion1
  2451  016E  085A               	movf	??_precaucion1,w
  2452  016F  00A1               	movwf	_d1
  2453  0170                     l142:
  2454  0170  0008               	return
  2455  0171                     __end_of_precaucion1:
  2456                           
  2457                           	psect	text11
  2458  0137                     __ptext11:	
  2459 ;; *************** function _precaucion *****************
  2460 ;; Defined at:
  2461 ;;		line 227 in file "Master.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0
  2477 ;;      Temps:          0       1       0       0       0
  2478 ;;      Totals:         0       1       0       0       0
  2479 ;;Total ram usage:        1 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    3
  2482 ;; This function calls:
  2483 ;;		_printf
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _precaucion
  2491  0137                     _precaucion:
  2492  0137                     l1757:	
  2493                           ;incstack = 0
  2494                           ; Regs used in _precaucion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2495                           
  2496                           
  2497                           ;Master.c: 228:     if(RCREG > 2){
  2498  0137  3003               	movlw	3
  2499  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2501  013A  021A               	subwf	26,w	;volatile
  2502  013B  1C03               	skipc
  2503  013C  293E               	goto	u1261
  2504  013D  293F               	goto	u1260
  2505  013E                     u1261:
  2506  013E  2948               	goto	l132
  2507  013F                     u1260:
  2508  013F                     l1759:
  2509                           
  2510                           ;Master.c: 229:            printf("Introduzca un valor de 0 a 2\r");
  2511  013F  30B5               	movlw	low (STR_14| (0+32768))
  2512  0140  00D4               	movwf	printf@f
  2513  0141  3088               	movlw	high (STR_14| (0+32768))
  2514  0142  00D5               	movwf	printf@f+1
  2515  0143  120A  118A  2101  120A  118A  	fcall	_printf
  2516  0148                     l132:
  2517  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2519  014A  1E8C               	btfss	12,5	;volatile
  2520  014B  294D               	goto	u1271
  2521  014C  294E               	goto	u1270
  2522  014D                     u1271:
  2523  014D  2948               	goto	l132
  2524  014E                     u1270:
  2525  014E                     l1761:
  2526                           
  2527                           ;Master.c: 232:        c1 = RCREG -48;
  2528  014E  081A               	movf	26,w	;volatile
  2529  014F  3ED0               	addlw	208
  2530  0150  00DA               	movwf	??_precaucion
  2531  0151  085A               	movf	??_precaucion,w
  2532  0152  00A2               	movwf	_c1
  2533  0153                     l135:
  2534  0153  0008               	return
  2535  0154                     __end_of_precaucion:
  2536                           
  2537                           	psect	text12
  2538  035E                     __ptext12:	
  2539 ;; *************** function _mensaje2 *****************
  2540 ;; Defined at:
  2541 ;;		line 213 in file "Master.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0
  2557 ;;      Temps:          0       2       0       0       0
  2558 ;;      Totals:         0       2       0       0       0
  2559 ;;Total ram usage:        2 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    3
  2562 ;; This function calls:
  2563 ;;		_printf
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _mensaje2
  2571  035E                     _mensaje2:
  2572  035E                     l1745:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _mensaje2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2575                           
  2576                           
  2577                           ;Master.c: 214:     printf("\r* V2: ");
  2578  035E  30F8               	movlw	low (STR_11| (0+32768))
  2579  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0361  00D4               	movwf	printf@f
  2582  0362  3088               	movlw	high (STR_11| (0+32768))
  2583  0363  00D5               	movwf	printf@f+1
  2584  0364  120A  118A  2101  120A  118A  	fcall	_printf
  2585  0369                     l1747:
  2586                           
  2587                           ;Master.c: 215:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2588  0369  3041               	movlw	65
  2589  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2590  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2591  036C  00DB               	movwf	??_mensaje2+1
  2592  036D  30ED               	movlw	237
  2593  036E  00DA               	movwf	??_mensaje2
  2594  036F                     u1597:
  2595  036F  0BDA               	decfsz	??_mensaje2,f
  2596  0370  2B6F               	goto	u1597
  2597  0371  0BDB               	decfsz	??_mensaje2+1,f
  2598  0372  2B6F               	goto	u1597
  2599  0373  2B74               	nop2
  2600  0374                     l1749:
  2601                           
  2602                           ;Master.c: 216:     TXREG = cen;
  2603  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2605  0376  0826               	movf	_cen,w
  2606  0377  0099               	movwf	25	;volatile
  2607  0378                     l1751:
  2608                           
  2609                           ;Master.c: 217:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2610  0378  3041               	movlw	65
  2611  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2612  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2613  037B  00DB               	movwf	??_mensaje2+1
  2614  037C  30ED               	movlw	237
  2615  037D  00DA               	movwf	??_mensaje2
  2616  037E                     u1607:
  2617  037E  0BDA               	decfsz	??_mensaje2,f
  2618  037F  2B7E               	goto	u1607
  2619  0380  0BDB               	decfsz	??_mensaje2+1,f
  2620  0381  2B7E               	goto	u1607
  2621  0382  2B83               	nop2
  2622  0383                     l1753:
  2623                           
  2624                           ;Master.c: 218:     printf(".");
  2625  0383  3003               	movlw	low (STR_9| (0+32768))
  2626  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0386  00D4               	movwf	printf@f
  2629  0387  3089               	movlw	high (STR_9| (0+32768))
  2630  0388  00D5               	movwf	printf@f+1
  2631  0389  120A  118A  2101  120A  118A  	fcall	_printf
  2632                           
  2633                           ;Master.c: 219:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2634  038E  3041               	movlw	65
  2635  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0391  00DB               	movwf	??_mensaje2+1
  2638  0392  30ED               	movlw	237
  2639  0393  00DA               	movwf	??_mensaje2
  2640  0394                     u1617:
  2641  0394  0BDA               	decfsz	??_mensaje2,f
  2642  0395  2B94               	goto	u1617
  2643  0396  0BDB               	decfsz	??_mensaje2+1,f
  2644  0397  2B94               	goto	u1617
  2645  0398  2B99               	nop2
  2646                           
  2647                           ;Master.c: 220:     TXREG = dec;
  2648  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2649  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2650  039B  0825               	movf	_dec,w
  2651  039C  0099               	movwf	25	;volatile
  2652                           
  2653                           ;Master.c: 221:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2654  039D  3041               	movlw	65
  2655  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2656  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2657  03A0  00DB               	movwf	??_mensaje2+1
  2658  03A1  30ED               	movlw	237
  2659  03A2  00DA               	movwf	??_mensaje2
  2660  03A3                     u1627:
  2661  03A3  0BDA               	decfsz	??_mensaje2,f
  2662  03A4  2BA3               	goto	u1627
  2663  03A5  0BDB               	decfsz	??_mensaje2+1,f
  2664  03A6  2BA3               	goto	u1627
  2665  03A7  2BA8               	nop2
  2666                           
  2667                           ;Master.c: 222:     TXREG = un;
  2668  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2669  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2670  03AA  0824               	movf	_un,w
  2671  03AB  0099               	movwf	25	;volatile
  2672                           
  2673                           ;Master.c: 223:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2674  03AC  3041               	movlw	65
  2675  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2676  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2677  03AF  00DB               	movwf	??_mensaje2+1
  2678  03B0  30ED               	movlw	237
  2679  03B1  00DA               	movwf	??_mensaje2
  2680  03B2                     u1637:
  2681  03B2  0BDA               	decfsz	??_mensaje2,f
  2682  03B3  2BB2               	goto	u1637
  2683  03B4  0BDB               	decfsz	??_mensaje2+1,f
  2684  03B5  2BB2               	goto	u1637
  2685  03B6  2BB7               	nop2
  2686  03B7                     l1755:
  2687                           
  2688                           ;Master.c: 224:     printf("\r\r");
  2689  03B7  30B2               	movlw	low ((STR_4+27)| (0+32768))
  2690  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2691  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2692  03BA  00D4               	movwf	printf@f
  2693  03BB  3088               	movlw	high ((STR_4+27)| (0+32768))
  2694  03BC  00D5               	movwf	printf@f+1
  2695  03BD  120A  118A  2101  120A  118A  	fcall	_printf
  2696  03C2                     l128:
  2697  03C2  0008               	return
  2698  03C3                     __end_of_mensaje2:
  2699                           
  2700                           	psect	text13
  2701  02F9                     __ptext13:	
  2702 ;; *************** function _mensaje1 *****************
  2703 ;; Defined at:
  2704 ;;		line 199 in file "Master.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0
  2720 ;;      Temps:          0       2       0       0       0
  2721 ;;      Totals:         0       2       0       0       0
  2722 ;;Total ram usage:        2 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    3
  2725 ;; This function calls:
  2726 ;;		_printf
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _mensaje1
  2734  02F9                     _mensaje1:
  2735  02F9                     l1733:	
  2736                           ;incstack = 0
  2737                           ; Regs used in _mensaje1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2738                           
  2739                           
  2740                           ;Master.c: 200:     printf("\r* V1: ");
  2741  02F9  30F0               	movlw	low (STR_8| (0+32768))
  2742  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2743  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2744  02FC  00D4               	movwf	printf@f
  2745  02FD  3088               	movlw	high (STR_8| (0+32768))
  2746  02FE  00D5               	movwf	printf@f+1
  2747  02FF  120A  118A  2101  120A  118A  	fcall	_printf
  2748  0304                     l1735:
  2749                           
  2750                           ;Master.c: 201:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2751  0304  3041               	movlw	65
  2752  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0307  00DB               	movwf	??_mensaje1+1
  2755  0308  30ED               	movlw	237
  2756  0309  00DA               	movwf	??_mensaje1
  2757  030A                     u1647:
  2758  030A  0BDA               	decfsz	??_mensaje1,f
  2759  030B  2B0A               	goto	u1647
  2760  030C  0BDB               	decfsz	??_mensaje1+1,f
  2761  030D  2B0A               	goto	u1647
  2762  030E  2B0F               	nop2
  2763  030F                     l1737:
  2764                           
  2765                           ;Master.c: 202:     TXREG = cen;
  2766  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0311  0826               	movf	_cen,w
  2769  0312  0099               	movwf	25	;volatile
  2770  0313                     l1739:
  2771                           
  2772                           ;Master.c: 203:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2773  0313  3041               	movlw	65
  2774  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0316  00DB               	movwf	??_mensaje1+1
  2777  0317  30ED               	movlw	237
  2778  0318  00DA               	movwf	??_mensaje1
  2779  0319                     u1657:
  2780  0319  0BDA               	decfsz	??_mensaje1,f
  2781  031A  2B19               	goto	u1657
  2782  031B  0BDB               	decfsz	??_mensaje1+1,f
  2783  031C  2B19               	goto	u1657
  2784  031D  2B1E               	nop2
  2785  031E                     l1741:
  2786                           
  2787                           ;Master.c: 204:     printf(".");
  2788  031E  3003               	movlw	low (STR_9| (0+32768))
  2789  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0321  00D4               	movwf	printf@f
  2792  0322  3089               	movlw	high (STR_9| (0+32768))
  2793  0323  00D5               	movwf	printf@f+1
  2794  0324  120A  118A  2101  120A  118A  	fcall	_printf
  2795                           
  2796                           ;Master.c: 205:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2797  0329  3041               	movlw	65
  2798  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2799  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2800  032C  00DB               	movwf	??_mensaje1+1
  2801  032D  30ED               	movlw	237
  2802  032E  00DA               	movwf	??_mensaje1
  2803  032F                     u1667:
  2804  032F  0BDA               	decfsz	??_mensaje1,f
  2805  0330  2B2F               	goto	u1667
  2806  0331  0BDB               	decfsz	??_mensaje1+1,f
  2807  0332  2B2F               	goto	u1667
  2808  0333  2B34               	nop2
  2809                           
  2810                           ;Master.c: 206:     TXREG = dec;
  2811  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0336  0825               	movf	_dec,w
  2814  0337  0099               	movwf	25	;volatile
  2815                           
  2816                           ;Master.c: 207:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2817  0338  3041               	movlw	65
  2818  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2819  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2820  033B  00DB               	movwf	??_mensaje1+1
  2821  033C  30ED               	movlw	237
  2822  033D  00DA               	movwf	??_mensaje1
  2823  033E                     u1677:
  2824  033E  0BDA               	decfsz	??_mensaje1,f
  2825  033F  2B3E               	goto	u1677
  2826  0340  0BDB               	decfsz	??_mensaje1+1,f
  2827  0341  2B3E               	goto	u1677
  2828  0342  2B43               	nop2
  2829                           
  2830                           ;Master.c: 208:     TXREG = un;
  2831  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0345  0824               	movf	_un,w
  2834  0346  0099               	movwf	25	;volatile
  2835                           
  2836                           ;Master.c: 209:     _delay((unsigned long)((50)*(4000000/4000.0)));
  2837  0347  3041               	movlw	65
  2838  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2840  034A  00DB               	movwf	??_mensaje1+1
  2841  034B  30ED               	movlw	237
  2842  034C  00DA               	movwf	??_mensaje1
  2843  034D                     u1687:
  2844  034D  0BDA               	decfsz	??_mensaje1,f
  2845  034E  2B4D               	goto	u1687
  2846  034F  0BDB               	decfsz	??_mensaje1+1,f
  2847  0350  2B4D               	goto	u1687
  2848  0351  2B52               	nop2
  2849  0352                     l1743:
  2850                           
  2851                           ;Master.c: 210:     printf("\r");
  2852  0352  30B3               	movlw	low ((STR_4+28)| (0+32768))
  2853  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0355  00D4               	movwf	printf@f
  2856  0356  3088               	movlw	high ((STR_4+28)| (0+32768))
  2857  0357  00D5               	movwf	printf@f+1
  2858  0358  120A  118A  2101  120A  118A  	fcall	_printf
  2859  035D                     l125:
  2860  035D  0008               	return
  2861  035E                     __end_of_mensaje1:
  2862                           
  2863                           	psect	text14
  2864  0101                     __ptext14:	
  2865 ;; *************** function _printf *****************
  2866 ;; Defined at:
  2867 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  2870 ;;		 -> STR_16(39), STR_15(39), STR_14(30), STR_13(3), 
  2871 ;;		 -> STR_12(2), STR_11(8), STR_10(2), STR_9(2), 
  2872 ;;		 -> STR_8(8), STR_4(30), STR_3(29), STR_2(52), 
  2873 ;;		 -> STR_1(32), 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  pb              2   17[BANK0 ] struct __prbuf
  2876 ;;  ap              1   16[BANK0 ] PTR void [1]
  2877 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2   13[BANK0 ] int 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       2       0       0       0
  2888 ;;      Locals:         0       3       0       0       0
  2889 ;;      Temps:          0       1       0       0       0
  2890 ;;      Totals:         0       6       0       0       0
  2891 ;;Total ram usage:        6 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    2
  2894 ;; This function calls:
  2895 ;;		__doprnt
  2896 ;; This function is called by:
  2897 ;;		_main
  2898 ;;		_mensaje1
  2899 ;;		_mensaje2
  2900 ;;		_precaucion
  2901 ;;		_precaucion1
  2902 ;;		_precaucion2
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           
  2907                           ;psect for function _printf
  2908  0101                     _printf:
  2909  0101                     l1571:	
  2910                           ;incstack = 0
  2911                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2912                           
  2913  0101  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0102  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0103  01D8               	clrf	printf@pb
  2916  0104                     l1573:
  2917  0104  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2918  0105  00D6               	movwf	??_printf
  2919  0106  0856               	movf	??_printf,w
  2920  0107  00D9               	movwf	low ((printf@pb| 0+1))
  2921  0108                     l1575:
  2922  0108  3056               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2923  0109  00D6               	movwf	??_printf
  2924  010A  0856               	movf	??_printf,w
  2925  010B  00D7               	movwf	printf@ap
  2926  010C                     l1577:
  2927                           
  2928                           ;	Return value of _printf is never used
  2929  010C  0854               	movf	printf@f,w
  2930  010D  00C7               	movwf	__doprnt@f
  2931  010E  0855               	movf	printf@f+1,w
  2932  010F  00C8               	movwf	__doprnt@f+1
  2933  0110  3057               	movlw	(low (printf@ap| 0))& (0+255)
  2934  0111  00D6               	movwf	??_printf
  2935  0112  0856               	movf	??_printf,w
  2936  0113  00C9               	movwf	__doprnt@ap
  2937  0114  3058               	movlw	(low (printf@pb| 0))& (0+255)
  2938  0115  120A  118A  250B  120A  118A  	fcall	__doprnt
  2939  011A                     l763:
  2940  011A  0008               	return
  2941  011B                     __end_of_printf:
  2942                           
  2943                           	psect	text15
  2944  050B                     __ptext15:	
  2945 ;; *************** function __doprnt *****************
  2946 ;; Defined at:
  2947 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  pb              1    wreg     PTR struct __prbuf
  2950 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2951 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2952 ;;		 -> STR_16(39), STR_15(39), STR_14(30), STR_13(3), 
  2953 ;;		 -> STR_12(2), STR_11(8), STR_10(2), STR_9(2), 
  2954 ;;		 -> STR_8(8), STR_7(3), STR_6(3), STR_5(3), 
  2955 ;;		 -> STR_4(30), STR_3(29), STR_2(52), STR_1(32), 
  2956 ;;  ap              1    2[BANK0 ] PTR PTR void 
  2957 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  pb              1   12[BANK0 ] PTR struct __prbuf
  2960 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2961 ;;  tmpval          4    0        struct .
  2962 ;;  val             2    9[BANK0 ] unsigned int 
  2963 ;;  cp              2    0        PTR const unsigned char 
  2964 ;;  len             2    0        unsigned int 
  2965 ;;  c               1   11[BANK0 ] unsigned char 
  2966 ;;  prec            1    8[BANK0 ] char 
  2967 ;;  flag            1    7[BANK0 ] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2    0[BANK0 ] int 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         0       3       0       0       0
  2978 ;;      Locals:         0       6       0       0       0
  2979 ;;      Temps:          0       4       0       0       0
  2980 ;;      Totals:         0      13       0       0       0
  2981 ;;Total ram usage:       13 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    1
  2984 ;; This function calls:
  2985 ;;		Absolute function
  2986 ;;		___lwdiv
  2987 ;;		___lwmod
  2988 ;;		_putch
  2989 ;; This function is called by:
  2990 ;;		_printf
  2991 ;;		_sprintf
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           
  2996                           ;psect for function __doprnt
  2997  050B                     __doprnt:
  2998                           
  2999                           ;incstack = 0
  3000                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3001                           ;__doprnt@pb stored from wreg
  3002  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3003  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3004  050D  00D3               	movwf	__doprnt@pb
  3005  050E                     l1461:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3008  050E  2E36               	goto	l1523
  3009  050F                     l1463:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3012  050F  3025               	movlw	37
  3013  0510  0652               	xorwf	__doprnt@c,w
  3014  0511  1903               	btfsc	3,2
  3015  0512  2D14               	goto	u891
  3016  0513  2D15               	goto	u890
  3017  0514                     u891:
  3018  0514  2D3B               	goto	l1473
  3019  0515                     u890:
  3020  0515                     l1465:
  3021  0515  0A53               	incf	__doprnt@pb,w
  3022  0516  0084               	movwf	4
  3023  0517  1383               	bcf	3,7	;select IRP bank0
  3024  0518  0800               	movf	0,w
  3025  0519  1903               	btfsc	3,2
  3026  051A  2D1C               	goto	u901
  3027  051B  2D1D               	goto	u900
  3028  051C                     u901:
  3029  051C  2D2C               	goto	l1469
  3030  051D                     u900:
  3031  051D                     l1467:
  3032  051D  0852               	movf	__doprnt@c,w
  3033  051E  00CA               	movwf	??__doprnt
  3034  051F  084A               	movf	??__doprnt,w
  3035  0520  00F0               	movwf	putch@info
  3036  0521  0A53               	incf	__doprnt@pb,w
  3037  0522  0084               	movwf	4
  3038  0523  0800               	movf	0,w
  3039  0524  120A  118A  2003  120A  118A  	fcall	fptable
  3040  0529  1283               	bcf	3,5	;RP0=0, select bank0
  3041  052A  1303               	bcf	3,6	;RP1=0, select bank0
  3042  052B  2D0E               	goto	l1461
  3043  052C                     l1469:
  3044  052C  0852               	movf	__doprnt@c,w
  3045  052D  00CA               	movwf	??__doprnt
  3046  052E  0853               	movf	__doprnt@pb,w
  3047  052F  0084               	movwf	4
  3048  0530  0800               	movf	0,w
  3049  0531  0084               	movwf	4
  3050  0532  084A               	movf	??__doprnt,w
  3051  0533  0080               	movwf	0
  3052  0534                     l1471:
  3053  0534  3001               	movlw	1
  3054  0535  00CA               	movwf	??__doprnt
  3055  0536  0853               	movf	__doprnt@pb,w
  3056  0537  0084               	movwf	4
  3057  0538  084A               	movf	??__doprnt,w
  3058  0539  0780               	addwf	0,f
  3059  053A  2D0E               	goto	l1461
  3060  053B                     l1473:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3063  053B  01CE               	clrf	__doprnt@flag
  3064  053C                     l1477:	
  3065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3066                           
  3067  053C  0848               	movf	__doprnt@f+1,w
  3068  053D  00CB               	movwf	??__doprnt+1
  3069  053E  0847               	movf	__doprnt@f,w
  3070  053F  00CA               	movwf	??__doprnt
  3071  0540  0AC7               	incf	__doprnt@f,f
  3072  0541  1903               	skipnz
  3073  0542  0AC8               	incf	__doprnt@f+1,f
  3074  0543  084B               	movf	??__doprnt+1,w
  3075  0544  00FF               	movwf	btemp+1
  3076  0545  084A               	movf	??__doprnt,w
  3077  0546  0084               	movwf	4
  3078  0547  120A  158A  2000  120A  118A  	fcall	stringtab
  3079  054C  00D2               	movwf	__doprnt@c
  3080  054D  00CC               	movwf	??__doprnt+2
  3081  054E  01CD               	clrf	??__doprnt+3
  3082                           
  3083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3084                           ; Switch size 1, requested type "simple"
  3085                           ; Number of cases is 1, Range of values is 0 to 0
  3086                           ; switch strategies available:
  3087                           ; Name         Instructions Cycles
  3088                           ; simple_byte            4     3 (average)
  3089                           ; direct_byte           11     8 (fixed)
  3090                           ; jumptable            260     6 (fixed)
  3091                           ;	Chosen strategy is simple_byte
  3092  054F  084D               	movf	??__doprnt+3,w
  3093  0550  3A00               	xorlw	0	; case 0
  3094  0551  1903               	skipnz
  3095  0552  2D54               	goto	l1937
  3096  0553  2E36               	goto	l1523
  3097  0554                     l1937:
  3098                           
  3099                           ; Switch size 1, requested type "simple"
  3100                           ; Number of cases is 3, Range of values is 0 to 105
  3101                           ; switch strategies available:
  3102                           ; Name         Instructions Cycles
  3103                           ; simple_byte           10     6 (average)
  3104                           ; jumptable            260     6 (fixed)
  3105                           ;	Chosen strategy is simple_byte
  3106  0554  084C               	movf	??__doprnt+2,w
  3107  0555  3A00               	xorlw	0	; case 0
  3108  0556  1903               	skipnz
  3109  0557  2E50               	goto	l1525
  3110  0558  3A64               	xorlw	100	; case 100
  3111  0559  1903               	skipnz
  3112  055A  2D5F               	goto	l1479
  3113  055B  3A0D               	xorlw	13	; case 105
  3114  055C  1903               	skipnz
  3115  055D  2D5F               	goto	l1479
  3116  055E  2E36               	goto	l1523
  3117  055F                     l1479:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3120  055F  0849               	movf	__doprnt@ap,w
  3121  0560  0084               	movwf	4
  3122  0561  1383               	bcf	3,7	;select IRP bank0
  3123  0562  0800               	movf	0,w
  3124  0563  00CA               	movwf	??__doprnt
  3125  0564  3002               	movlw	2
  3126  0565  0780               	addwf	0,f
  3127  0566  084A               	movf	??__doprnt,w
  3128  0567  0084               	movwf	4
  3129  0568  0800               	movf	0,w
  3130  0569  00D0               	movwf	__doprnt@val
  3131  056A  0A84               	incf	4,f
  3132  056B  0800               	movf	0,w
  3133  056C  00D1               	movwf	__doprnt@val+1
  3134  056D                     l1481:
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3137  056D  1FD1               	btfss	__doprnt@val+1,7
  3138  056E  2D70               	goto	u911
  3139  056F  2D71               	goto	u910
  3140  0570                     u911:
  3141  0570  2D7A               	goto	l1487
  3142  0571                     u910:
  3143  0571                     l1483:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3146  0571  3003               	movlw	3
  3147  0572  00CA               	movwf	??__doprnt
  3148  0573  084A               	movf	??__doprnt,w
  3149  0574  04CE               	iorwf	__doprnt@flag,f
  3150  0575                     l1485:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3153  0575  09D0               	comf	__doprnt@val,f
  3154  0576  09D1               	comf	__doprnt@val+1,f
  3155  0577  0AD0               	incf	__doprnt@val,f
  3156  0578  1903               	skipnz
  3157  0579  0AD1               	incf	__doprnt@val+1,f
  3158  057A                     l1487:
  3159                           
  3160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3161  057A  01D2               	clrf	__doprnt@c
  3162  057B  0AD2               	incf	__doprnt@c,f
  3163  057C                     l1493:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3166  057C  0852               	movf	__doprnt@c,w
  3167  057D  00CA               	movwf	??__doprnt
  3168  057E  074A               	addwf	??__doprnt,w
  3169  057F  3E12               	addlw	low (_dpowers| (0+32768))
  3170  0580  0084               	movwf	4
  3171  0581  3088               	movlw	high (_dpowers| (0+32768))
  3172  0582  1803               	skipnc
  3173  0583  3E01               	addlw	1
  3174  0584  00FF               	movwf	btemp+1
  3175  0585  120A  158A  2000  120A  118A  	fcall	stringtab
  3176  058A  00CB               	movwf	??__doprnt+1
  3177  058B  120A  158A  2000  120A  118A  	fcall	stringtab
  3178  0590  00CC               	movwf	??__doprnt+2
  3179  0591  084C               	movf	??__doprnt+2,w
  3180  0592  0251               	subwf	__doprnt@val+1,w
  3181  0593  1D03               	skipz
  3182  0594  2D97               	goto	u925
  3183  0595  084B               	movf	??__doprnt+1,w
  3184  0596  0250               	subwf	__doprnt@val,w
  3185  0597                     u925:
  3186  0597  1803               	skipnc
  3187  0598  2D9A               	goto	u921
  3188  0599  2D9B               	goto	u920
  3189  059A                     u921:
  3190  059A  2D9C               	goto	l1497
  3191  059B                     u920:
  3192  059B  2DA6               	goto	l1499
  3193  059C                     l1497:
  3194  059C  3001               	movlw	1
  3195  059D  00CA               	movwf	??__doprnt
  3196  059E  084A               	movf	??__doprnt,w
  3197  059F  07D2               	addwf	__doprnt@c,f
  3198  05A0  3005               	movlw	5
  3199  05A1  0652               	xorwf	__doprnt@c,w
  3200  05A2  1D03               	btfss	3,2
  3201  05A3  2DA5               	goto	u931
  3202  05A4  2DA6               	goto	u930
  3203  05A5                     u931:
  3204  05A5  2D7C               	goto	l1493
  3205  05A6                     u930:
  3206  05A6                     l1499:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3209  05A6  084E               	movf	__doprnt@flag,w
  3210  05A7  3903               	andlw	3
  3211  05A8  1903               	btfsc	3,2
  3212  05A9  2DAB               	goto	u941
  3213  05AA  2DAC               	goto	u940
  3214  05AB                     u941:
  3215  05AB  2DCF               	goto	l1509
  3216  05AC                     u940:
  3217  05AC                     l1501:
  3218  05AC  0A53               	incf	__doprnt@pb,w
  3219  05AD  0084               	movwf	4
  3220  05AE  1383               	bcf	3,7	;select IRP bank0
  3221  05AF  0800               	movf	0,w
  3222  05B0  1903               	btfsc	3,2
  3223  05B1  2DB3               	goto	u951
  3224  05B2  2DB4               	goto	u950
  3225  05B3                     u951:
  3226  05B3  2DC1               	goto	l1505
  3227  05B4                     u950:
  3228  05B4                     l1503:
  3229  05B4  302D               	movlw	45
  3230  05B5  00CA               	movwf	??__doprnt
  3231  05B6  084A               	movf	??__doprnt,w
  3232  05B7  00F0               	movwf	putch@info
  3233  05B8  0A53               	incf	__doprnt@pb,w
  3234  05B9  0084               	movwf	4
  3235  05BA  0800               	movf	0,w
  3236  05BB  120A  118A  2003  120A  118A  	fcall	fptable
  3237  05C0  2DCF               	goto	l1509
  3238  05C1                     l1505:
  3239  05C1  302D               	movlw	45
  3240  05C2  00CA               	movwf	??__doprnt
  3241  05C3  0853               	movf	__doprnt@pb,w
  3242  05C4  0084               	movwf	4
  3243  05C5  0800               	movf	0,w
  3244  05C6  0084               	movwf	4
  3245  05C7  084A               	movf	??__doprnt,w
  3246  05C8  0080               	movwf	0
  3247  05C9                     l1507:
  3248  05C9  3001               	movlw	1
  3249  05CA  00CA               	movwf	??__doprnt
  3250  05CB  0853               	movf	__doprnt@pb,w
  3251  05CC  0084               	movwf	4
  3252  05CD  084A               	movf	??__doprnt,w
  3253  05CE  0780               	addwf	0,f
  3254  05CF                     l1509:
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3257  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3258  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3259  05D1  0852               	movf	__doprnt@c,w
  3260  05D2  00CA               	movwf	??__doprnt
  3261  05D3  084A               	movf	??__doprnt,w
  3262  05D4  00CF               	movwf	__doprnt@prec
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3265  05D5  2E2B               	goto	l1521
  3266  05D6                     l1511:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3269  05D6  300A               	movlw	10
  3270  05D7  00F8               	movwf	___lwmod@divisor
  3271  05D8  3000               	movlw	0
  3272  05D9  00F9               	movwf	___lwmod@divisor+1
  3273  05DA  084F               	movf	__doprnt@prec,w
  3274  05DB  00CA               	movwf	??__doprnt
  3275  05DC  074A               	addwf	??__doprnt,w
  3276  05DD  3E12               	addlw	low (_dpowers| (0+32768))
  3277  05DE  0084               	movwf	4
  3278  05DF  3088               	movlw	high (_dpowers| (0+32768))
  3279  05E0  1803               	skipnc
  3280  05E1  3E01               	addlw	1
  3281  05E2  00FF               	movwf	btemp+1
  3282  05E3  120A  158A  2000  120A  118A  	fcall	stringtab
  3283  05E8  00F0               	movwf	___lwdiv@divisor
  3284  05E9  120A  158A  2000  120A  118A  	fcall	stringtab
  3285  05EE  00F1               	movwf	___lwdiv@divisor+1
  3286  05EF  0851               	movf	__doprnt@val+1,w
  3287  05F0  00F3               	movwf	___lwdiv@dividend+1
  3288  05F1  0850               	movf	__doprnt@val,w
  3289  05F2  00F2               	movwf	___lwdiv@dividend
  3290  05F3  120A  118A  225C  120A  118A  	fcall	___lwdiv
  3291  05F8  0871               	movf	?___lwdiv+1,w
  3292  05F9  00FB               	movwf	___lwmod@dividend+1
  3293  05FA  0870               	movf	?___lwdiv,w
  3294  05FB  00FA               	movwf	___lwmod@dividend
  3295  05FC  120A  118A  2222  120A  118A  	fcall	___lwmod
  3296  0601  0878               	movf	?___lwmod,w
  3297  0602  3E30               	addlw	48
  3298  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0605  00CB               	movwf	??__doprnt+1
  3301  0606  084B               	movf	??__doprnt+1,w
  3302  0607  00D2               	movwf	__doprnt@c
  3303  0608                     l1513:
  3304  0608  0A53               	incf	__doprnt@pb,w
  3305  0609  0084               	movwf	4
  3306  060A  1383               	bcf	3,7	;select IRP bank0
  3307  060B  0800               	movf	0,w
  3308  060C  1903               	btfsc	3,2
  3309  060D  2E0F               	goto	u961
  3310  060E  2E10               	goto	u960
  3311  060F                     u961:
  3312  060F  2E1D               	goto	l1517
  3313  0610                     u960:
  3314  0610                     l1515:
  3315  0610  0852               	movf	__doprnt@c,w
  3316  0611  00CA               	movwf	??__doprnt
  3317  0612  084A               	movf	??__doprnt,w
  3318  0613  00F0               	movwf	putch@info
  3319  0614  0A53               	incf	__doprnt@pb,w
  3320  0615  0084               	movwf	4
  3321  0616  0800               	movf	0,w
  3322  0617  120A  118A  2003  120A  118A  	fcall	fptable
  3323  061C  2E2B               	goto	l1521
  3324  061D                     l1517:
  3325  061D  0852               	movf	__doprnt@c,w
  3326  061E  00CA               	movwf	??__doprnt
  3327  061F  0853               	movf	__doprnt@pb,w
  3328  0620  0084               	movwf	4
  3329  0621  0800               	movf	0,w
  3330  0622  0084               	movwf	4
  3331  0623  084A               	movf	??__doprnt,w
  3332  0624  0080               	movwf	0
  3333  0625                     l1519:
  3334  0625  3001               	movlw	1
  3335  0626  00CA               	movwf	??__doprnt
  3336  0627  0853               	movf	__doprnt@pb,w
  3337  0628  0084               	movwf	4
  3338  0629  084A               	movf	??__doprnt,w
  3339  062A  0780               	addwf	0,f
  3340  062B                     l1521:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3343  062B  30FF               	movlw	255
  3344  062C  1283               	bcf	3,5	;RP0=0, select bank0
  3345  062D  1303               	bcf	3,6	;RP1=0, select bank0
  3346  062E  00CA               	movwf	??__doprnt
  3347  062F  084A               	movf	??__doprnt,w
  3348  0630  07CF               	addwf	__doprnt@prec,f
  3349  0631  0A4F               	incf	__doprnt@prec,w
  3350  0632  1D03               	btfss	3,2
  3351  0633  2E35               	goto	u971
  3352  0634  2E36               	goto	u970
  3353  0635                     u971:
  3354  0635  2DD6               	goto	l1511
  3355  0636                     u970:
  3356  0636                     l1523:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3359  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3361  0638  0848               	movf	__doprnt@f+1,w
  3362  0639  00CB               	movwf	??__doprnt+1
  3363  063A  0847               	movf	__doprnt@f,w
  3364  063B  00CA               	movwf	??__doprnt
  3365  063C  0AC7               	incf	__doprnt@f,f
  3366  063D  1903               	skipnz
  3367  063E  0AC8               	incf	__doprnt@f+1,f
  3368  063F  084B               	movf	??__doprnt+1,w
  3369  0640  00FF               	movwf	btemp+1
  3370  0641  084A               	movf	??__doprnt,w
  3371  0642  0084               	movwf	4
  3372  0643  120A  158A  2000  120A  118A  	fcall	stringtab
  3373  0648  00CC               	movwf	??__doprnt+2
  3374  0649  084C               	movf	??__doprnt+2,w
  3375  064A  00D2               	movwf	__doprnt@c
  3376  064B  0852               	movf	__doprnt@c,w
  3377  064C  1D03               	btfss	3,2
  3378  064D  2E4F               	goto	u981
  3379  064E  2E50               	goto	u980
  3380  064F                     u981:
  3381  064F  2D0F               	goto	l1463
  3382  0650                     u980:
  3383  0650                     l1525:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3386  0650  01C7               	clrf	?__doprnt
  3387  0651  01C8               	clrf	?__doprnt+1
  3388  0652                     l801:
  3389  0652  0008               	return
  3390  0653                     __end_of__doprnt:
  3391                           
  3392                           	psect	text16
  3393  00C7                     __ptext16:	
  3394 ;; *************** function _putch *****************
  3395 ;; Defined at:
  3396 ;;		line 182 in file "Master.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  info            1    0[COMMON] unsigned char 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3410 ;;      Params:         1       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0
  3413 ;;      Totals:         1       0       0       0       0
  3414 ;;Total ram usage:        1 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_printf
  3420 ;;		__doprnt
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _putch
  3426  00C7                     _putch:
  3427  00C7                     l1409:	
  3428                           ;incstack = 0
  3429                           ; Regs used in _putch: [wreg]
  3430                           
  3431  00C7                     l116:	
  3432                           ;Master.c: 183:     while (TXIF == 0);
  3433                           
  3434  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3435  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  3436  00C9  1E0C               	btfss	12,4	;volatile
  3437  00CA  28CC               	goto	u751
  3438  00CB  28CD               	goto	u750
  3439  00CC                     u751:
  3440  00CC  28C7               	goto	l116
  3441  00CD                     u750:
  3442  00CD                     l1411:
  3443                           
  3444                           ;Master.c: 184:     TXREG = info;
  3445  00CD  0870               	movf	putch@info,w
  3446  00CE  0099               	movwf	25	;volatile
  3447  00CF                     l119:
  3448  00CF  0008               	return
  3449  00D0                     __end_of_putch:
  3450                           
  3451                           	psect	text17
  3452  0222                     __ptext17:	
  3453 ;; *************** function ___lwmod *****************
  3454 ;; Defined at:
  3455 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  divisor         2    8[COMMON] unsigned int 
  3458 ;;  dividend        2   10[COMMON] unsigned int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  counter         1   13[COMMON] unsigned char 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  2    8[COMMON] unsigned int 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3470 ;;      Params:         4       0       0       0       0
  3471 ;;      Locals:         1       0       0       0       0
  3472 ;;      Temps:          1       0       0       0       0
  3473 ;;      Totals:         6       0       0       0       0
  3474 ;;Total ram usage:        6 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		__doprnt
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function ___lwmod
  3485  0222                     ___lwmod:
  3486  0222                     l1439:	
  3487                           ;incstack = 0
  3488                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3489                           
  3490  0222  0878               	movf	___lwmod@divisor,w
  3491  0223  0479               	iorwf	___lwmod@divisor+1,w
  3492  0224  1903               	btfsc	3,2
  3493  0225  2A27               	goto	u831
  3494  0226  2A28               	goto	u830
  3495  0227                     u831:
  3496  0227  2A57               	goto	l1457
  3497  0228                     u830:
  3498  0228                     l1441:
  3499  0228  01FD               	clrf	___lwmod@counter
  3500  0229  0AFD               	incf	___lwmod@counter,f
  3501  022A  2A36               	goto	l1447
  3502  022B                     l1443:
  3503  022B  3001               	movlw	1
  3504  022C                     u845:
  3505  022C  1003               	clrc
  3506  022D  0DF8               	rlf	___lwmod@divisor,f
  3507  022E  0DF9               	rlf	___lwmod@divisor+1,f
  3508  022F  3EFF               	addlw	-1
  3509  0230  1D03               	skipz
  3510  0231  2A2C               	goto	u845
  3511  0232                     l1445:
  3512  0232  3001               	movlw	1
  3513  0233  00FC               	movwf	??___lwmod
  3514  0234  087C               	movf	??___lwmod,w
  3515  0235  07FD               	addwf	___lwmod@counter,f
  3516  0236                     l1447:
  3517  0236  1FF9               	btfss	___lwmod@divisor+1,7
  3518  0237  2A39               	goto	u851
  3519  0238  2A3A               	goto	u850
  3520  0239                     u851:
  3521  0239  2A2B               	goto	l1443
  3522  023A                     u850:
  3523  023A                     l1449:
  3524  023A  0879               	movf	___lwmod@divisor+1,w
  3525  023B  027B               	subwf	___lwmod@dividend+1,w
  3526  023C  1D03               	skipz
  3527  023D  2A40               	goto	u865
  3528  023E  0878               	movf	___lwmod@divisor,w
  3529  023F  027A               	subwf	___lwmod@dividend,w
  3530  0240                     u865:
  3531  0240  1C03               	skipc
  3532  0241  2A43               	goto	u861
  3533  0242  2A44               	goto	u860
  3534  0243                     u861:
  3535  0243  2A4A               	goto	l1453
  3536  0244                     u860:
  3537  0244                     l1451:
  3538  0244  0878               	movf	___lwmod@divisor,w
  3539  0245  02FA               	subwf	___lwmod@dividend,f
  3540  0246  0879               	movf	___lwmod@divisor+1,w
  3541  0247  1C03               	skipc
  3542  0248  03FB               	decf	___lwmod@dividend+1,f
  3543  0249  02FB               	subwf	___lwmod@dividend+1,f
  3544  024A                     l1453:
  3545  024A  3001               	movlw	1
  3546  024B                     u875:
  3547  024B  1003               	clrc
  3548  024C  0CF9               	rrf	___lwmod@divisor+1,f
  3549  024D  0CF8               	rrf	___lwmod@divisor,f
  3550  024E  3EFF               	addlw	-1
  3551  024F  1D03               	skipz
  3552  0250  2A4B               	goto	u875
  3553  0251                     l1455:
  3554  0251  3001               	movlw	1
  3555  0252  02FD               	subwf	___lwmod@counter,f
  3556  0253  1D03               	btfss	3,2
  3557  0254  2A56               	goto	u881
  3558  0255  2A57               	goto	u880
  3559  0256                     u881:
  3560  0256  2A3A               	goto	l1449
  3561  0257                     u880:
  3562  0257                     l1457:
  3563  0257  087B               	movf	___lwmod@dividend+1,w
  3564  0258  00F9               	movwf	?___lwmod+1
  3565  0259  087A               	movf	___lwmod@dividend,w
  3566  025A  00F8               	movwf	?___lwmod
  3567  025B                     l568:
  3568  025B  0008               	return
  3569  025C                     __end_of___lwmod:
  3570                           
  3571                           	psect	text18
  3572  025C                     __ptext18:	
  3573 ;; *************** function ___lwdiv *****************
  3574 ;; Defined at:
  3575 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  divisor         2    0[COMMON] unsigned int 
  3578 ;;  dividend        2    2[COMMON] unsigned int 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  quotient        2    5[COMMON] unsigned int 
  3581 ;;  counter         1    7[COMMON] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2    0[COMMON] unsigned int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         4       0       0       0       0
  3592 ;;      Locals:         3       0       0       0       0
  3593 ;;      Temps:          1       0       0       0       0
  3594 ;;      Totals:         8       0       0       0       0
  3595 ;;Total ram usage:        8 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		__doprnt
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function ___lwdiv
  3606  025C                     ___lwdiv:
  3607  025C                     l1413:	
  3608                           ;incstack = 0
  3609                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3610                           
  3611  025C  01F5               	clrf	___lwdiv@quotient
  3612  025D  01F6               	clrf	___lwdiv@quotient+1
  3613  025E                     l1415:
  3614  025E  0870               	movf	___lwdiv@divisor,w
  3615  025F  0471               	iorwf	___lwdiv@divisor+1,w
  3616  0260  1903               	btfsc	3,2
  3617  0261  2A63               	goto	u761
  3618  0262  2A64               	goto	u760
  3619  0263                     u761:
  3620  0263  2A9B               	goto	l1435
  3621  0264                     u760:
  3622  0264                     l1417:
  3623  0264  01F7               	clrf	___lwdiv@counter
  3624  0265  0AF7               	incf	___lwdiv@counter,f
  3625  0266  2A72               	goto	l1423
  3626  0267                     l1419:
  3627  0267  3001               	movlw	1
  3628  0268                     u775:
  3629  0268  1003               	clrc
  3630  0269  0DF0               	rlf	___lwdiv@divisor,f
  3631  026A  0DF1               	rlf	___lwdiv@divisor+1,f
  3632  026B  3EFF               	addlw	-1
  3633  026C  1D03               	skipz
  3634  026D  2A68               	goto	u775
  3635  026E                     l1421:
  3636  026E  3001               	movlw	1
  3637  026F  00F4               	movwf	??___lwdiv
  3638  0270  0874               	movf	??___lwdiv,w
  3639  0271  07F7               	addwf	___lwdiv@counter,f
  3640  0272                     l1423:
  3641  0272  1FF1               	btfss	___lwdiv@divisor+1,7
  3642  0273  2A75               	goto	u781
  3643  0274  2A76               	goto	u780
  3644  0275                     u781:
  3645  0275  2A67               	goto	l1419
  3646  0276                     u780:
  3647  0276                     l1425:
  3648  0276  3001               	movlw	1
  3649  0277                     u795:
  3650  0277  1003               	clrc
  3651  0278  0DF5               	rlf	___lwdiv@quotient,f
  3652  0279  0DF6               	rlf	___lwdiv@quotient+1,f
  3653  027A  3EFF               	addlw	-1
  3654  027B  1D03               	skipz
  3655  027C  2A77               	goto	u795
  3656  027D  0871               	movf	___lwdiv@divisor+1,w
  3657  027E  0273               	subwf	___lwdiv@dividend+1,w
  3658  027F  1D03               	skipz
  3659  0280  2A83               	goto	u805
  3660  0281  0870               	movf	___lwdiv@divisor,w
  3661  0282  0272               	subwf	___lwdiv@dividend,w
  3662  0283                     u805:
  3663  0283  1C03               	skipc
  3664  0284  2A86               	goto	u801
  3665  0285  2A87               	goto	u800
  3666  0286                     u801:
  3667  0286  2A8E               	goto	l1431
  3668  0287                     u800:
  3669  0287                     l1427:
  3670  0287  0870               	movf	___lwdiv@divisor,w
  3671  0288  02F2               	subwf	___lwdiv@dividend,f
  3672  0289  0871               	movf	___lwdiv@divisor+1,w
  3673  028A  1C03               	skipc
  3674  028B  03F3               	decf	___lwdiv@dividend+1,f
  3675  028C  02F3               	subwf	___lwdiv@dividend+1,f
  3676  028D                     l1429:
  3677  028D  1475               	bsf	___lwdiv@quotient,0
  3678  028E                     l1431:
  3679  028E  3001               	movlw	1
  3680  028F                     u815:
  3681  028F  1003               	clrc
  3682  0290  0CF1               	rrf	___lwdiv@divisor+1,f
  3683  0291  0CF0               	rrf	___lwdiv@divisor,f
  3684  0292  3EFF               	addlw	-1
  3685  0293  1D03               	skipz
  3686  0294  2A8F               	goto	u815
  3687  0295                     l1433:
  3688  0295  3001               	movlw	1
  3689  0296  02F7               	subwf	___lwdiv@counter,f
  3690  0297  1D03               	btfss	3,2
  3691  0298  2A9A               	goto	u821
  3692  0299  2A9B               	goto	u820
  3693  029A                     u821:
  3694  029A  2A76               	goto	l1425
  3695  029B                     u820:
  3696  029B                     l1435:
  3697  029B  0876               	movf	___lwdiv@quotient+1,w
  3698  029C  00F1               	movwf	?___lwdiv+1
  3699  029D  0875               	movf	___lwdiv@quotient,w
  3700  029E  00F0               	movwf	?___lwdiv
  3701  029F                     l558:
  3702  029F  0008               	return
  3703  02A0                     __end_of___lwdiv:
  3704                           
  3705                           	psect	text19
  3706  03C3                     __ptext19:	
  3707 ;; *************** function _division *****************
  3708 ;; Defined at:
  3709 ;;		line 188 in file "Master.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  dividendo       1    wreg     unsigned char 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  dividendo       1   12[COMMON] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, pclath, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         0       0       0       0       0
  3724 ;;      Locals:         1       0       0       0       0
  3725 ;;      Temps:          3       0       0       0       0
  3726 ;;      Totals:         4       0       0       0       0
  3727 ;;Total ram usage:        4 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    1
  3730 ;; This function calls:
  3731 ;;		___awdiv
  3732 ;;		___awmod
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           
  3739                           ;psect for function _division
  3740  03C3                     _division:
  3741                           
  3742                           ;incstack = 0
  3743                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  3744                           ;division@dividendo stored from wreg
  3745  03C3  00FC               	movwf	division@dividendo
  3746  03C4                     l1723:
  3747                           
  3748                           ;Master.c: 189:     cen = (dividendo)/100;
  3749  03C4  3064               	movlw	100
  3750  03C5  00F0               	movwf	___awdiv@divisor
  3751  03C6  3000               	movlw	0
  3752  03C7  00F1               	movwf	___awdiv@divisor+1
  3753  03C8  087C               	movf	division@dividendo,w
  3754  03C9  00F9               	movwf	??_division
  3755  03CA  01FA               	clrf	??_division+1
  3756  03CB  0879               	movf	??_division,w
  3757  03CC  00F2               	movwf	___awdiv@dividend
  3758  03CD  087A               	movf	??_division+1,w
  3759  03CE  00F3               	movwf	___awdiv@dividend+1
  3760  03CF  120A  118A  2429  120A  118A  	fcall	___awdiv
  3761  03D4  0870               	movf	?___awdiv,w
  3762  03D5  00FB               	movwf	??_division+2
  3763  03D6  087B               	movf	??_division+2,w
  3764  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3765  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3766  03D9  00A6               	movwf	_cen
  3767                           
  3768                           ;Master.c: 190:     residuo = dividendo%100;
  3769  03DA  3064               	movlw	100
  3770  03DB  00F0               	movwf	___awmod@divisor
  3771  03DC  3000               	movlw	0
  3772  03DD  00F1               	movwf	___awmod@divisor+1
  3773  03DE  087C               	movf	division@dividendo,w
  3774  03DF  00F9               	movwf	??_division
  3775  03E0  01FA               	clrf	??_division+1
  3776  03E1  0879               	movf	??_division,w
  3777  03E2  00F2               	movwf	___awmod@dividend
  3778  03E3  087A               	movf	??_division+1,w
  3779  03E4  00F3               	movwf	___awmod@dividend+1
  3780  03E5  120A  118A  22A0  120A  118A  	fcall	___awmod
  3781  03EA  0870               	movf	?___awmod,w
  3782  03EB  00FB               	movwf	??_division+2
  3783  03EC  087B               	movf	??_division+2,w
  3784  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  3785  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  3786  03EF  00A3               	movwf	_residuo
  3787                           
  3788                           ;Master.c: 191:     dec = residuo/10;
  3789  03F0  300A               	movlw	10
  3790  03F1  00F0               	movwf	___awdiv@divisor
  3791  03F2  3000               	movlw	0
  3792  03F3  00F1               	movwf	___awdiv@divisor+1
  3793  03F4  0823               	movf	_residuo,w
  3794  03F5  00F9               	movwf	??_division
  3795  03F6  01FA               	clrf	??_division+1
  3796  03F7  0879               	movf	??_division,w
  3797  03F8  00F2               	movwf	___awdiv@dividend
  3798  03F9  087A               	movf	??_division+1,w
  3799  03FA  00F3               	movwf	___awdiv@dividend+1
  3800  03FB  120A  118A  2429  120A  118A  	fcall	___awdiv
  3801  0400  0870               	movf	?___awdiv,w
  3802  0401  00FB               	movwf	??_division+2
  3803  0402  087B               	movf	??_division+2,w
  3804  0403  1283               	bcf	3,5	;RP0=0, select bank0
  3805  0404  1303               	bcf	3,6	;RP1=0, select bank0
  3806  0405  00A5               	movwf	_dec
  3807                           
  3808                           ;Master.c: 192:     un = residuo%10;
  3809  0406  300A               	movlw	10
  3810  0407  00F0               	movwf	___awmod@divisor
  3811  0408  3000               	movlw	0
  3812  0409  00F1               	movwf	___awmod@divisor+1
  3813  040A  0823               	movf	_residuo,w
  3814  040B  00F9               	movwf	??_division
  3815  040C  01FA               	clrf	??_division+1
  3816  040D  0879               	movf	??_division,w
  3817  040E  00F2               	movwf	___awmod@dividend
  3818  040F  087A               	movf	??_division+1,w
  3819  0410  00F3               	movwf	___awmod@dividend+1
  3820  0411  120A  118A  22A0  120A  118A  	fcall	___awmod
  3821  0416  0870               	movf	?___awmod,w
  3822  0417  00FB               	movwf	??_division+2
  3823  0418  087B               	movf	??_division+2,w
  3824  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3825  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3826  041B  00A4               	movwf	_un
  3827  041C                     l1725:
  3828                           
  3829                           ;Master.c: 193:     cen += 48;
  3830  041C  3030               	movlw	48
  3831  041D  00F9               	movwf	??_division
  3832  041E  0879               	movf	??_division,w
  3833  041F  07A6               	addwf	_cen,f
  3834  0420                     l1727:
  3835                           
  3836                           ;Master.c: 194:     dec += 48;
  3837  0420  3030               	movlw	48
  3838  0421  00F9               	movwf	??_division
  3839  0422  0879               	movf	??_division,w
  3840  0423  07A5               	addwf	_dec,f
  3841  0424                     l1729:
  3842                           
  3843                           ;Master.c: 195:     un += 48;
  3844  0424  3030               	movlw	48
  3845  0425  00F9               	movwf	??_division
  3846  0426  0879               	movf	??_division,w
  3847  0427  07A4               	addwf	_un,f
  3848  0428                     l122:
  3849  0428  0008               	return
  3850  0429                     __end_of_division:
  3851                           
  3852                           	psect	text20
  3853  02A0                     __ptext20:	
  3854 ;; *************** function ___awmod *****************
  3855 ;; Defined at:
  3856 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  divisor         2    0[COMMON] int 
  3859 ;;  dividend        2    2[COMMON] int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  sign            1    6[COMMON] unsigned char 
  3862 ;;  counter         1    5[COMMON] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  2    0[COMMON] int 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3872 ;;      Params:         4       0       0       0       0
  3873 ;;      Locals:         2       0       0       0       0
  3874 ;;      Temps:          1       0       0       0       0
  3875 ;;      Totals:         7       0       0       0       0
  3876 ;;Total ram usage:        7 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_division
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function ___awmod
  3887  02A0                     ___awmod:
  3888  02A0                     l1641:	
  3889                           ;incstack = 0
  3890                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3891                           
  3892  02A0  01F6               	clrf	___awmod@sign
  3893  02A1                     l1643:
  3894  02A1  1FF3               	btfss	___awmod@dividend+1,7
  3895  02A2  2AA4               	goto	u1151
  3896  02A3  2AA5               	goto	u1150
  3897  02A4                     u1151:
  3898  02A4  2AAC               	goto	l1649
  3899  02A5                     u1150:
  3900  02A5                     l1645:
  3901  02A5  09F2               	comf	___awmod@dividend,f
  3902  02A6  09F3               	comf	___awmod@dividend+1,f
  3903  02A7  0AF2               	incf	___awmod@dividend,f
  3904  02A8  1903               	skipnz
  3905  02A9  0AF3               	incf	___awmod@dividend+1,f
  3906  02AA                     l1647:
  3907  02AA  01F6               	clrf	___awmod@sign
  3908  02AB  0AF6               	incf	___awmod@sign,f
  3909  02AC                     l1649:
  3910  02AC  1FF1               	btfss	___awmod@divisor+1,7
  3911  02AD  2AAF               	goto	u1161
  3912  02AE  2AB0               	goto	u1160
  3913  02AF                     u1161:
  3914  02AF  2AB5               	goto	l1653
  3915  02B0                     u1160:
  3916  02B0                     l1651:
  3917  02B0  09F0               	comf	___awmod@divisor,f
  3918  02B1  09F1               	comf	___awmod@divisor+1,f
  3919  02B2  0AF0               	incf	___awmod@divisor,f
  3920  02B3  1903               	skipnz
  3921  02B4  0AF1               	incf	___awmod@divisor+1,f
  3922  02B5                     l1653:
  3923  02B5  0870               	movf	___awmod@divisor,w
  3924  02B6  0471               	iorwf	___awmod@divisor+1,w
  3925  02B7  1903               	btfsc	3,2
  3926  02B8  2ABA               	goto	u1171
  3927  02B9  2ABB               	goto	u1170
  3928  02BA                     u1171:
  3929  02BA  2AEA               	goto	l1671
  3930  02BB                     u1170:
  3931  02BB                     l1655:
  3932  02BB  01F5               	clrf	___awmod@counter
  3933  02BC  0AF5               	incf	___awmod@counter,f
  3934  02BD  2AC9               	goto	l1661
  3935  02BE                     l1657:
  3936  02BE  3001               	movlw	1
  3937  02BF                     u1185:
  3938  02BF  1003               	clrc
  3939  02C0  0DF0               	rlf	___awmod@divisor,f
  3940  02C1  0DF1               	rlf	___awmod@divisor+1,f
  3941  02C2  3EFF               	addlw	-1
  3942  02C3  1D03               	skipz
  3943  02C4  2ABF               	goto	u1185
  3944  02C5                     l1659:
  3945  02C5  3001               	movlw	1
  3946  02C6  00F4               	movwf	??___awmod
  3947  02C7  0874               	movf	??___awmod,w
  3948  02C8  07F5               	addwf	___awmod@counter,f
  3949  02C9                     l1661:
  3950  02C9  1FF1               	btfss	___awmod@divisor+1,7
  3951  02CA  2ACC               	goto	u1191
  3952  02CB  2ACD               	goto	u1190
  3953  02CC                     u1191:
  3954  02CC  2ABE               	goto	l1657
  3955  02CD                     u1190:
  3956  02CD                     l1663:
  3957  02CD  0871               	movf	___awmod@divisor+1,w
  3958  02CE  0273               	subwf	___awmod@dividend+1,w
  3959  02CF  1D03               	skipz
  3960  02D0  2AD3               	goto	u1205
  3961  02D1  0870               	movf	___awmod@divisor,w
  3962  02D2  0272               	subwf	___awmod@dividend,w
  3963  02D3                     u1205:
  3964  02D3  1C03               	skipc
  3965  02D4  2AD6               	goto	u1201
  3966  02D5  2AD7               	goto	u1200
  3967  02D6                     u1201:
  3968  02D6  2ADD               	goto	l1667
  3969  02D7                     u1200:
  3970  02D7                     l1665:
  3971  02D7  0870               	movf	___awmod@divisor,w
  3972  02D8  02F2               	subwf	___awmod@dividend,f
  3973  02D9  0871               	movf	___awmod@divisor+1,w
  3974  02DA  1C03               	skipc
  3975  02DB  03F3               	decf	___awmod@dividend+1,f
  3976  02DC  02F3               	subwf	___awmod@dividend+1,f
  3977  02DD                     l1667:
  3978  02DD  3001               	movlw	1
  3979  02DE                     u1215:
  3980  02DE  1003               	clrc
  3981  02DF  0CF1               	rrf	___awmod@divisor+1,f
  3982  02E0  0CF0               	rrf	___awmod@divisor,f
  3983  02E1  3EFF               	addlw	-1
  3984  02E2  1D03               	skipz
  3985  02E3  2ADE               	goto	u1215
  3986  02E4                     l1669:
  3987  02E4  3001               	movlw	1
  3988  02E5  02F5               	subwf	___awmod@counter,f
  3989  02E6  1D03               	btfss	3,2
  3990  02E7  2AE9               	goto	u1221
  3991  02E8  2AEA               	goto	u1220
  3992  02E9                     u1221:
  3993  02E9  2ACD               	goto	l1663
  3994  02EA                     u1220:
  3995  02EA                     l1671:
  3996  02EA  0876               	movf	___awmod@sign,w
  3997  02EB  1903               	btfsc	3,2
  3998  02EC  2AEE               	goto	u1231
  3999  02ED  2AEF               	goto	u1230
  4000  02EE                     u1231:
  4001  02EE  2AF4               	goto	l1675
  4002  02EF                     u1230:
  4003  02EF                     l1673:
  4004  02EF  09F2               	comf	___awmod@dividend,f
  4005  02F0  09F3               	comf	___awmod@dividend+1,f
  4006  02F1  0AF2               	incf	___awmod@dividend,f
  4007  02F2  1903               	skipnz
  4008  02F3  0AF3               	incf	___awmod@dividend+1,f
  4009  02F4                     l1675:
  4010  02F4  0873               	movf	___awmod@dividend+1,w
  4011  02F5  00F1               	movwf	?___awmod+1
  4012  02F6  0872               	movf	___awmod@dividend,w
  4013  02F7  00F0               	movwf	?___awmod
  4014  02F8                     l452:
  4015  02F8  0008               	return
  4016  02F9                     __end_of___awmod:
  4017                           
  4018                           	psect	text21
  4019  0429                     __ptext21:	
  4020 ;; *************** function ___awdiv *****************
  4021 ;; Defined at:
  4022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  divisor         2    0[COMMON] int 
  4025 ;;  dividend        2    2[COMMON] int 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  quotient        2    7[COMMON] int 
  4028 ;;  sign            1    6[COMMON] unsigned char 
  4029 ;;  counter         1    5[COMMON] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  2    0[COMMON] int 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         4       0       0       0       0
  4040 ;;      Locals:         4       0       0       0       0
  4041 ;;      Temps:          1       0       0       0       0
  4042 ;;      Totals:         9       0       0       0       0
  4043 ;;Total ram usage:        9 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_division
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function ___awdiv
  4054  0429                     ___awdiv:
  4055  0429                     l1597:	
  4056                           ;incstack = 0
  4057                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4058                           
  4059  0429  01F6               	clrf	___awdiv@sign
  4060  042A                     l1599:
  4061  042A  1FF1               	btfss	___awdiv@divisor+1,7
  4062  042B  2C2D               	goto	u1051
  4063  042C  2C2E               	goto	u1050
  4064  042D                     u1051:
  4065  042D  2C35               	goto	l1605
  4066  042E                     u1050:
  4067  042E                     l1601:
  4068  042E  09F0               	comf	___awdiv@divisor,f
  4069  042F  09F1               	comf	___awdiv@divisor+1,f
  4070  0430  0AF0               	incf	___awdiv@divisor,f
  4071  0431  1903               	skipnz
  4072  0432  0AF1               	incf	___awdiv@divisor+1,f
  4073  0433                     l1603:
  4074  0433  01F6               	clrf	___awdiv@sign
  4075  0434  0AF6               	incf	___awdiv@sign,f
  4076  0435                     l1605:
  4077  0435  1FF3               	btfss	___awdiv@dividend+1,7
  4078  0436  2C38               	goto	u1061
  4079  0437  2C39               	goto	u1060
  4080  0438                     u1061:
  4081  0438  2C42               	goto	l1611
  4082  0439                     u1060:
  4083  0439                     l1607:
  4084  0439  09F2               	comf	___awdiv@dividend,f
  4085  043A  09F3               	comf	___awdiv@dividend+1,f
  4086  043B  0AF2               	incf	___awdiv@dividend,f
  4087  043C  1903               	skipnz
  4088  043D  0AF3               	incf	___awdiv@dividend+1,f
  4089  043E                     l1609:
  4090  043E  3001               	movlw	1
  4091  043F  00F4               	movwf	??___awdiv
  4092  0440  0874               	movf	??___awdiv,w
  4093  0441  06F6               	xorwf	___awdiv@sign,f
  4094  0442                     l1611:
  4095  0442  01F7               	clrf	___awdiv@quotient
  4096  0443  01F8               	clrf	___awdiv@quotient+1
  4097  0444                     l1613:
  4098  0444  0870               	movf	___awdiv@divisor,w
  4099  0445  0471               	iorwf	___awdiv@divisor+1,w
  4100  0446  1903               	btfsc	3,2
  4101  0447  2C49               	goto	u1071
  4102  0448  2C4A               	goto	u1070
  4103  0449                     u1071:
  4104  0449  2C81               	goto	l1633
  4105  044A                     u1070:
  4106  044A                     l1615:
  4107  044A  01F5               	clrf	___awdiv@counter
  4108  044B  0AF5               	incf	___awdiv@counter,f
  4109  044C  2C58               	goto	l1621
  4110  044D                     l1617:
  4111  044D  3001               	movlw	1
  4112  044E                     u1085:
  4113  044E  1003               	clrc
  4114  044F  0DF0               	rlf	___awdiv@divisor,f
  4115  0450  0DF1               	rlf	___awdiv@divisor+1,f
  4116  0451  3EFF               	addlw	-1
  4117  0452  1D03               	skipz
  4118  0453  2C4E               	goto	u1085
  4119  0454                     l1619:
  4120  0454  3001               	movlw	1
  4121  0455  00F4               	movwf	??___awdiv
  4122  0456  0874               	movf	??___awdiv,w
  4123  0457  07F5               	addwf	___awdiv@counter,f
  4124  0458                     l1621:
  4125  0458  1FF1               	btfss	___awdiv@divisor+1,7
  4126  0459  2C5B               	goto	u1091
  4127  045A  2C5C               	goto	u1090
  4128  045B                     u1091:
  4129  045B  2C4D               	goto	l1617
  4130  045C                     u1090:
  4131  045C                     l1623:
  4132  045C  3001               	movlw	1
  4133  045D                     u1105:
  4134  045D  1003               	clrc
  4135  045E  0DF7               	rlf	___awdiv@quotient,f
  4136  045F  0DF8               	rlf	___awdiv@quotient+1,f
  4137  0460  3EFF               	addlw	-1
  4138  0461  1D03               	skipz
  4139  0462  2C5D               	goto	u1105
  4140  0463  0871               	movf	___awdiv@divisor+1,w
  4141  0464  0273               	subwf	___awdiv@dividend+1,w
  4142  0465  1D03               	skipz
  4143  0466  2C69               	goto	u1115
  4144  0467  0870               	movf	___awdiv@divisor,w
  4145  0468  0272               	subwf	___awdiv@dividend,w
  4146  0469                     u1115:
  4147  0469  1C03               	skipc
  4148  046A  2C6C               	goto	u1111
  4149  046B  2C6D               	goto	u1110
  4150  046C                     u1111:
  4151  046C  2C74               	goto	l1629
  4152  046D                     u1110:
  4153  046D                     l1625:
  4154  046D  0870               	movf	___awdiv@divisor,w
  4155  046E  02F2               	subwf	___awdiv@dividend,f
  4156  046F  0871               	movf	___awdiv@divisor+1,w
  4157  0470  1C03               	skipc
  4158  0471  03F3               	decf	___awdiv@dividend+1,f
  4159  0472  02F3               	subwf	___awdiv@dividend+1,f
  4160  0473                     l1627:
  4161  0473  1477               	bsf	___awdiv@quotient,0
  4162  0474                     l1629:
  4163  0474  3001               	movlw	1
  4164  0475                     u1125:
  4165  0475  1003               	clrc
  4166  0476  0CF1               	rrf	___awdiv@divisor+1,f
  4167  0477  0CF0               	rrf	___awdiv@divisor,f
  4168  0478  3EFF               	addlw	-1
  4169  0479  1D03               	skipz
  4170  047A  2C75               	goto	u1125
  4171  047B                     l1631:
  4172  047B  3001               	movlw	1
  4173  047C  02F5               	subwf	___awdiv@counter,f
  4174  047D  1D03               	btfss	3,2
  4175  047E  2C80               	goto	u1131
  4176  047F  2C81               	goto	u1130
  4177  0480                     u1131:
  4178  0480  2C5C               	goto	l1623
  4179  0481                     u1130:
  4180  0481                     l1633:
  4181  0481  0876               	movf	___awdiv@sign,w
  4182  0482  1903               	btfsc	3,2
  4183  0483  2C85               	goto	u1141
  4184  0484  2C86               	goto	u1140
  4185  0485                     u1141:
  4186  0485  2C8B               	goto	l1637
  4187  0486                     u1140:
  4188  0486                     l1635:
  4189  0486  09F7               	comf	___awdiv@quotient,f
  4190  0487  09F8               	comf	___awdiv@quotient+1,f
  4191  0488  0AF7               	incf	___awdiv@quotient,f
  4192  0489  1903               	skipnz
  4193  048A  0AF8               	incf	___awdiv@quotient+1,f
  4194  048B                     l1637:
  4195  048B  0878               	movf	___awdiv@quotient+1,w
  4196  048C  00F1               	movwf	?___awdiv+1
  4197  048D  0877               	movf	___awdiv@quotient,w
  4198  048E  00F0               	movwf	?___awdiv
  4199  048F                     l439:
  4200  048F  0008               	return
  4201  0490                     __end_of___awdiv:
  4202                           
  4203                           	psect	text22
  4204  0490                     __ptext22:	
  4205 ;; *************** function _atoi *****************
  4206 ;; Defined at:
  4207 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  s               1    wreg     PTR const unsigned char 
  4210 ;;		 -> s1(10), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  s               1   13[COMMON] PTR const unsigned char 
  4213 ;;		 -> s1(10), 
  4214 ;;  a               2   11[COMMON] int 
  4215 ;;  sign            1   10[COMMON] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2    6[COMMON] int 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         2       0       0       0       0
  4226 ;;      Locals:         4       0       0       0       0
  4227 ;;      Temps:          2       0       0       0       0
  4228 ;;      Totals:         8       0       0       0       0
  4229 ;;Total ram usage:        8 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    1
  4232 ;; This function calls:
  4233 ;;		___wmul
  4234 ;;		_isdigit
  4235 ;; This function is called by:
  4236 ;;		_main
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           
  4241                           ;psect for function _atoi
  4242  0490                     _atoi:
  4243                           
  4244                           ;incstack = 0
  4245                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4246                           ;atoi@s stored from wreg
  4247  0490  00FD               	movwf	atoi@s
  4248  0491                     l1797:
  4249  0491  2C96               	goto	l1801
  4250  0492                     l1799:
  4251  0492  3001               	movlw	1
  4252  0493  00F8               	movwf	??_atoi
  4253  0494  0878               	movf	??_atoi,w
  4254  0495  07FD               	addwf	atoi@s,f
  4255  0496                     l1801:
  4256  0496  087D               	movf	atoi@s,w
  4257  0497  0084               	movwf	4
  4258  0498  3020               	movlw	32
  4259  0499  1383               	bcf	3,7	;select IRP bank0
  4260  049A  0600               	xorwf	0,w
  4261  049B  1903               	btfsc	3,2
  4262  049C  2C9E               	goto	u1341
  4263  049D  2C9F               	goto	u1340
  4264  049E                     u1341:
  4265  049E  2C92               	goto	l1799
  4266  049F                     u1340:
  4267  049F                     l1803:
  4268  049F  087D               	movf	atoi@s,w
  4269  04A0  0084               	movwf	4
  4270  04A1  3009               	movlw	9
  4271  04A2  0600               	xorwf	0,w
  4272  04A3  1903               	btfsc	3,2
  4273  04A4  2CA6               	goto	u1351
  4274  04A5  2CA7               	goto	u1350
  4275  04A6                     u1351:
  4276  04A6  2C92               	goto	l1799
  4277  04A7                     u1350:
  4278  04A7                     l1805:
  4279  04A7  01FB               	clrf	atoi@a
  4280  04A8  01FC               	clrf	atoi@a+1
  4281  04A9  01FA               	clrf	atoi@sign
  4282  04AA                     l1807:
  4283  04AA  087D               	movf	atoi@s,w
  4284  04AB  0084               	movwf	4
  4285  04AC  302D               	movlw	45
  4286  04AD  0600               	xorwf	0,w
  4287  04AE  1D03               	btfss	3,2
  4288  04AF  2CB1               	goto	u1361
  4289  04B0  2CB2               	goto	u1360
  4290  04B1                     u1361:
  4291  04B1  2CBB               	goto	l1811
  4292  04B2                     u1360:
  4293  04B2                     l1809:
  4294  04B2  3001               	movlw	1
  4295  04B3  00F8               	movwf	??_atoi
  4296  04B4  0878               	movf	??_atoi,w
  4297  04B5  07FA               	addwf	atoi@sign,f
  4298  04B6  3001               	movlw	1
  4299  04B7  00F8               	movwf	??_atoi
  4300  04B8  0878               	movf	??_atoi,w
  4301  04B9  07FD               	addwf	atoi@s,f
  4302  04BA  2CE9               	goto	l1819
  4303  04BB                     l1811:
  4304  04BB  087D               	movf	atoi@s,w
  4305  04BC  0084               	movwf	4
  4306  04BD  302B               	movlw	43
  4307  04BE  0600               	xorwf	0,w
  4308  04BF  1D03               	btfss	3,2
  4309  04C0  2CC2               	goto	u1371
  4310  04C1  2CC3               	goto	u1370
  4311  04C2                     u1371:
  4312  04C2  2CE9               	goto	l1819
  4313  04C3                     u1370:
  4314  04C3                     l1813:
  4315  04C3  3001               	movlw	1
  4316  04C4  00F8               	movwf	??_atoi
  4317  04C5  0878               	movf	??_atoi,w
  4318  04C6  07FD               	addwf	atoi@s,f
  4319  04C7  2CE9               	goto	l1819
  4320  04C8                     l1815:
  4321  04C8  087D               	movf	atoi@s,w
  4322  04C9  0084               	movwf	4
  4323  04CA  087C               	movf	atoi@a+1,w
  4324  04CB  00F1               	movwf	___wmul@multiplier+1
  4325  04CC  087B               	movf	atoi@a,w
  4326  04CD  00F0               	movwf	___wmul@multiplier
  4327  04CE  300A               	movlw	10
  4328  04CF  00F2               	movwf	___wmul@multiplicand
  4329  04D0  3000               	movlw	0
  4330  04D1  00F3               	movwf	___wmul@multiplicand+1
  4331  04D2  120A  118A  21AF  120A  118A  	fcall	___wmul
  4332  04D7  1383               	bcf	3,7	;select IRP bank0
  4333  04D8  0800               	movf	0,w
  4334  04D9  0770               	addwf	?___wmul,w
  4335  04DA  00F8               	movwf	??_atoi
  4336  04DB  3000               	movlw	0
  4337  04DC  1803               	skipnc
  4338  04DD  3001               	movlw	1
  4339  04DE  0771               	addwf	?___wmul+1,w
  4340  04DF  00F9               	movwf	??_atoi+1
  4341  04E0  0878               	movf	??_atoi,w
  4342  04E1  3ED0               	addlw	208
  4343  04E2  00FB               	movwf	atoi@a
  4344  04E3  0879               	movf	??_atoi+1,w
  4345  04E4  1803               	skipnc
  4346  04E5  3E01               	addlw	1
  4347  04E6  3EFF               	addlw	255
  4348  04E7  00FC               	movwf	atoi@a+1
  4349  04E8  2CC3               	goto	l1813
  4350  04E9                     l1819:
  4351  04E9  087D               	movf	atoi@s,w
  4352  04EA  0084               	movwf	4
  4353  04EB  0800               	movf	0,w
  4354  04EC  120A  118A  20D9  120A  118A  	fcall	_isdigit
  4355  04F1  1803               	btfsc	3,0
  4356  04F2  2CF4               	goto	u1381
  4357  04F3  2CF5               	goto	u1380
  4358  04F4                     u1381:
  4359  04F4  2CC8               	goto	l1815
  4360  04F5                     u1380:
  4361  04F5                     l1821:
  4362  04F5  087A               	movf	atoi@sign,w
  4363  04F6  1903               	btfsc	3,2
  4364  04F7  2CF9               	goto	u1391
  4365  04F8  2CFA               	goto	u1390
  4366  04F9                     u1391:
  4367  04F9  2D06               	goto	l1827
  4368  04FA                     u1390:
  4369  04FA                     l1823:
  4370  04FA  097B               	comf	atoi@a,w
  4371  04FB  00F8               	movwf	??_atoi
  4372  04FC  097C               	comf	atoi@a+1,w
  4373  04FD  00F9               	movwf	??_atoi+1
  4374  04FE  0AF8               	incf	??_atoi,f
  4375  04FF  1903               	skipnz
  4376  0500  0AF9               	incf	??_atoi+1,f
  4377  0501  0878               	movf	??_atoi,w
  4378  0502  00F6               	movwf	?_atoi
  4379  0503  0879               	movf	??_atoi+1,w
  4380  0504  00F7               	movwf	?_atoi+1
  4381  0505  2D0A               	goto	l749
  4382  0506                     l1827:
  4383  0506  087C               	movf	atoi@a+1,w
  4384  0507  00F7               	movwf	?_atoi+1
  4385  0508  087B               	movf	atoi@a,w
  4386  0509  00F6               	movwf	?_atoi
  4387  050A                     l749:
  4388  050A  0008               	return
  4389  050B                     __end_of_atoi:
  4390                           
  4391                           	psect	text23
  4392  00D9                     __ptext23:	
  4393 ;; *************** function _isdigit *****************
  4394 ;; Defined at:
  4395 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  c               1    wreg     unsigned char 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  c               1    1[COMMON] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;		None               void
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4409 ;;      Params:         0       0       0       0       0
  4410 ;;      Locals:         2       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0
  4412 ;;      Totals:         2       0       0       0       0
  4413 ;;Total ram usage:        2 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_atoi
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           
  4423                           ;psect for function _isdigit
  4424  00D9                     _isdigit:
  4425                           
  4426                           ;incstack = 0
  4427                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4428                           ;isdigit@c stored from wreg
  4429  00D9  00F1               	movwf	isdigit@c
  4430  00DA                     l1679:
  4431  00DA  01F0               	clrf	_isdigit$1015
  4432  00DB                     l1681:
  4433  00DB  303A               	movlw	58
  4434  00DC  0271               	subwf	isdigit@c,w
  4435  00DD  1803               	skipnc
  4436  00DE  28E0               	goto	u1241
  4437  00DF  28E1               	goto	u1240
  4438  00E0                     u1241:
  4439  00E0  28E9               	goto	l1687
  4440  00E1                     u1240:
  4441  00E1                     l1683:
  4442  00E1  3030               	movlw	48
  4443  00E2  0271               	subwf	isdigit@c,w
  4444  00E3  1C03               	skipc
  4445  00E4  28E6               	goto	u1251
  4446  00E5  28E7               	goto	u1250
  4447  00E6                     u1251:
  4448  00E6  28E9               	goto	l1687
  4449  00E7                     u1250:
  4450  00E7                     l1685:
  4451  00E7  01F0               	clrf	_isdigit$1015
  4452  00E8  0AF0               	incf	_isdigit$1015,f
  4453  00E9                     l1687:
  4454  00E9  0C70               	rrf	_isdigit$1015,w
  4455  00EA                     l754:
  4456  00EA  0008               	return
  4457  00EB                     __end_of_isdigit:
  4458                           
  4459                           	psect	text24
  4460  01AF                     __ptext24:	
  4461 ;; *************** function ___wmul *****************
  4462 ;; Defined at:
  4463 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  multiplier      2    0[COMMON] unsigned int 
  4466 ;;  multiplicand    2    2[COMMON] unsigned int 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  product         2    4[COMMON] unsigned int 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2    0[COMMON] unsigned int 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4478 ;;      Params:         4       0       0       0       0
  4479 ;;      Locals:         2       0       0       0       0
  4480 ;;      Temps:          0       0       0       0       0
  4481 ;;      Totals:         6       0       0       0       0
  4482 ;;Total ram usage:        6 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_atoi
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           
  4492                           ;psect for function ___wmul
  4493  01AF                     ___wmul:
  4494  01AF                     l1583:	
  4495                           ;incstack = 0
  4496                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4497                           
  4498  01AF  01F4               	clrf	___wmul@product
  4499  01B0  01F5               	clrf	___wmul@product+1
  4500  01B1                     l1585:
  4501  01B1  1C70               	btfss	___wmul@multiplier,0
  4502  01B2  29B4               	goto	u1011
  4503  01B3  29B5               	goto	u1010
  4504  01B4                     u1011:
  4505  01B4  29BB               	goto	l286
  4506  01B5                     u1010:
  4507  01B5                     l1587:
  4508  01B5  0872               	movf	___wmul@multiplicand,w
  4509  01B6  07F4               	addwf	___wmul@product,f
  4510  01B7  1803               	skipnc
  4511  01B8  0AF5               	incf	___wmul@product+1,f
  4512  01B9  0873               	movf	___wmul@multiplicand+1,w
  4513  01BA  07F5               	addwf	___wmul@product+1,f
  4514  01BB                     l286:
  4515  01BB  3001               	movlw	1
  4516  01BC                     u1025:
  4517  01BC  1003               	clrc
  4518  01BD  0DF2               	rlf	___wmul@multiplicand,f
  4519  01BE  0DF3               	rlf	___wmul@multiplicand+1,f
  4520  01BF  3EFF               	addlw	-1
  4521  01C0  1D03               	skipz
  4522  01C1  29BC               	goto	u1025
  4523  01C2                     l1589:
  4524  01C2  3001               	movlw	1
  4525  01C3                     u1035:
  4526  01C3  1003               	clrc
  4527  01C4  0CF1               	rrf	___wmul@multiplier+1,f
  4528  01C5  0CF0               	rrf	___wmul@multiplier,f
  4529  01C6  3EFF               	addlw	-1
  4530  01C7  1D03               	skipz
  4531  01C8  29C3               	goto	u1035
  4532  01C9                     l1591:
  4533  01C9  0870               	movf	___wmul@multiplier,w
  4534  01CA  0471               	iorwf	___wmul@multiplier+1,w
  4535  01CB  1D03               	btfss	3,2
  4536  01CC  29CE               	goto	u1041
  4537  01CD  29CF               	goto	u1040
  4538  01CE                     u1041:
  4539  01CE  29B1               	goto	l1585
  4540  01CF                     u1040:
  4541  01CF                     l1593:
  4542  01CF  0875               	movf	___wmul@product+1,w
  4543  01D0  00F1               	movwf	?___wmul+1
  4544  01D1  0874               	movf	___wmul@product,w
  4545  01D2  00F0               	movwf	?___wmul
  4546  01D3                     l288:
  4547  01D3  0008               	return
  4548  01D4                     __end_of___wmul:
  4549  0002                     
  4550                           	psect	functab
  4551  0003                     __pfunctab:
  4552  0003                     __fptable:
  4553  0003                     fptable:
  4554  0003  00FF               	movwf	(btemp+1)& (0+127)
  4555  0004  3000               	movlw	high fptable
  4556  0005  008A               	movwf	10
  4557  0006  087F               	movf	(btemp+1)& (0+127),w
  4558  0007  0782               	addwf	2,f
  4559  0008                     fpbase:
  4560  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4561  0009                     fp__putch:
  4562  0009  120A  118A  28C7   	ljmp	_putch
  4563  000C                     __end_of__fptable:
  4564  007E                     btemp	set	126	;btemp
  4565  007E                     wtemp0	set	126
  4566                           
  4567                           	psect	config
  4568                           
  4569                           ;Config register CONFIG1 @ 0x2007
  4570                           ;	Oscillator Selection bits
  4571                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4572                           ;	Watchdog Timer Enable bit
  4573                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4574                           ;	Power-up Timer Enable bit
  4575                           ;	PWRTE = OFF, PWRT disabled
  4576                           ;	RE3/MCLR pin function select bit
  4577                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4578                           ;	Code Protection bit
  4579                           ;	CP = OFF, Program memory code protection is disabled
  4580                           ;	Data Code Protection bit
  4581                           ;	CPD = OFF, Data memory code protection is disabled
  4582                           ;	Brown Out Reset Selection bits
  4583                           ;	BOREN = OFF, BOR disabled
  4584                           ;	Internal External Switchover bit
  4585                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4586                           ;	Fail-Safe Clock Monitor Enabled bit
  4587                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4588                           ;	Low Voltage Programming Enable bit
  4589                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4590                           ;	In-Circuit Debugger Mode bit
  4591                           ;	DEBUG = 0x1, unprogrammed default
  4592  2007                     	org	8199
  4593  2007  20D4               	dw	8404
  4594                           
  4595                           ;Config register CONFIG2 @ 0x2008
  4596                           ;	Brown-out Reset Selection bit
  4597                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4598                           ;	Flash Program Memory Self Write Enable bits
  4599                           ;	WRT = OFF, Write protection off
  4600  2008                     	org	8200
  4601  2008  3FFF               	dw	16383

Data Sizes:
    Strings     233
    Constant    10
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 10
		 -> s3(BANK0[10]), s2(BANK0[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 10
		 -> s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_16(CODE[39]), STR_15(CODE[39]), STR_14(CODE[30]), STR_13(CODE[3]), 
		 -> STR_12(CODE[2]), STR_11(CODE[8]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[8]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[30]), STR_3(CODE[29]), STR_2(CODE[52]), STR_1(CODE[32]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_16(CODE[39]), STR_15(CODE[39]), STR_14(CODE[30]), STR_13(CODE[3]), 
		 -> STR_12(CODE[2]), STR_11(CODE[8]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[8]), STR_4(CODE[30]), STR_3(CODE[29]), STR_2(CODE[52]), 
		 -> STR_1(CODE[32]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S1017__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1017__prbuf$ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _setup->_spiInit
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _division->___awdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->__doprnt
    _precaucion2->_printf
    _precaucion1->_printf
    _precaucion->_printf
    _mensaje2->_printf
    _mensaje1->_printf
    _printf->__doprnt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   22714
                                             22 BANK0      4     4      0
                               _atoi
                           _division
                           _mensaje1
                           _mensaje2
                         _precaucion
                        _precaucion1
                        _precaucion2
                             _printf
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     316
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              9     5      4    2360
                                             13 BANK0      9     5      4
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                       _config_USART
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _precaucion2                                          1     1      0    2965
                                             19 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _precaucion1                                          1     1      0    2965
                                             19 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _precaucion                                           1     1      0    2965
                                             19 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mensaje2                                             2     2      0    2965
                                             19 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mensaje1                                             2     2      0    2965
                                             19 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    2965
                                             13 BANK0      6     4      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             21    18      3    1868
                                              0 BANK0     13    10      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     181
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1248
                                              9 COMMON     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     573
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _division
     ___awdiv
     ___awmod
   _mensaje1
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _mensaje2
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _precaucion
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _precaucion1
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _precaucion2
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _setup
     _config_USART
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      41       5       81.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 03 19:07:16 2021

                      pc 0002              _SSPSTATbits 0094                       l91 06E7  
                     l85 01F8                       l97 0709                       _c1 0022  
                     _d1 0021             ___awdiv@sign 0076                       _s1 003D  
                     _s2 0033                       _s3 0029                       _u1 0020  
                     _un 0024                       fsr 0004      ___wmul@multiplicand 0072  
                    l200 0136                      l104 0731                      l122 0428  
                    l116 00C7                      l132 0148                      l125 035D  
                    l142 0170                      l119 00CF                      l135 0153  
                    l128 03C2                      l146 0182                      l139 0165  
                    l172 00BE                      l149 018D                      l165 00FB  
                    l166 0100                      l183 00D8                      l175 00B7  
                    l169 00B8                      l452 02F8                      l286 01BB  
                    l439 048F                      l288 01D3                      l801 0652  
                    l558 029F                      l568 025B                      l808 01AE  
                    l817 0221                      l754 00EA                      l763 011A  
                    l749 050A                      u800 0287                      u801 0286  
                    u820 029B                      u900 051D                      u821 029A  
                    u805 0283                      u901 051C                      u830 0228  
                    u750 00CD                      u910 0571                      u815 028F  
                    u831 0227                      u751 00CC                      u911 0570  
                    u760 0264                      u920 059B                      u761 0263  
                    u921 059A                      u850 023A                      u930 05A6  
                    u851 0239                      u931 05A5                      u780 0276  
                    u860 0244                      u940 05AC                      u781 0275  
                    u861 0243                      u845 022C                      u941 05AB  
                    u925 0597                      u950 05B4                      u775 0268  
                    u951 05B3                      u880 0257                      u960 0610  
                    u881 0256                      u865 0240                      u961 060F  
                    u970 0636                      u890 0515                      u795 0277  
                    u875 024B                      u971 0635                      u891 0514  
                    u980 0650                      u981 064F                      u990 00F3  
                    u991 00F2                      _dec 0025                      _cen 0026  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   l1411 00CD                     l1421 026E                     l1413 025C  
                   l1501 05AC                     l1431 028E                     l1423 0272  
                   l1415 025E                     l1511 05D6                     l1503 05B4  
                   l1601 042E                     l1433 0295                     l1425 0276  
                   l1417 0264                     l1441 0228                     l1409 00C7  
                   l1513 0608                     l1521 062B                     l1505 05C1  
                   l1611 0442                     l1603 0433                     l1427 0287  
                   l1419 0267                     l1435 029B                     l1451 0244  
                   l1443 022B                     l1515 0610                     l1507 05C9  
                   l1523 0636                     l1621 0458                     l1613 0444  
                   l1605 0435                     l1429 028D                     l1453 024A  
                   l1445 0232                     l1517 061D                     l1509 05CF  
                   l1525 0650                     l1461 050E                     l1541 00FA  
                   l1533 00EC                     l1701 01DC                     l1631 047B  
                   l1623 045C                     l1615 044A                     l1607 0439  
                   l1455 0251                     l1447 0236                     l1439 0222  
                   l1519 0625                     l1471 0534                     l1463 050F  
                   l1551 0126                     l1543 011B                     l1535 00F3  
                   l1711 01EA                     l1703 01E4                     l1801 0496  
                   l1625 046D                     l1617 044D                     l1633 0481  
                   l1609 043E                     l1641 02A0                     l1449 023A  
                   l1457 0257                     l1481 056D                     l1465 0515  
                   l1473 053B                     l1561 012F                     l1553 0127  
                   l1545 011F                     l1537 00F5                     l1713 01F3  
                   l1705 01E7                     l1811 04BB                     l1803 049F  
                   l1635 0486                     l1627 0473                     l1619 0454  
                   l1651 02B0                     l1643 02A1                     l1723 03C4  
                   l1483 0571                     l1467 051D                     l1571 0101  
                   l1563 0132                     l1555 012A                     l1547 0120  
                   l1539 00F7                     l1707 01E8                     l1715 00B3  
                   l1821 04F5                     l1813 04C3                     l1805 04A7  
                   l1637 048B                     l1629 0474                     l1661 02C9  
                   l1653 02B5                     l1645 02A5                     l1725 041C  
                   l1493 057C                     l1485 0575                     l1477 053C  
                   l1469 052C                     l1573 0104                     l1741 031E  
                   l1733 02F9                     l1565 0133                     l1557 012B  
                   l1549 0123                     l1709 01E9                     l1581 00B8  
                   l1717 00D0                     l1901 07B7                     l1591 01C9  
                   l1583 01AF                     l1823 04FA                     l1815 04C8  
                   l1807 04AA                     l1663 02CD                     l1655 02BB  
                   l1671 02EA                     l1647 02AA                     l1727 0420  
                   l1487 057A                     l1479 055F                     l1575 0108  
                   l1743 0352                     l1735 0304                     l1751 0378  
                   l1567 0134                     l1559 012E                     l1719 00D5  
                   l1911 07DD                     l1903 07C1                     l1831 0653  
                   l1593 01CF                     l1585 01B1                     l1681 00DB  
                   l1809 04B2                     l1673 02EF                     l1665 02D7  
                   l1657 02BE                     l1649 02AC                     l1729 0424  
                   l1497 059C                     l1577 010C                     l1737 030F  
                   l1753 0383                     l1745 035E                     l1761 014E  
                   l1569 0135                     l1913 07E1                     l1905 07C5  
                   l1841 0673                     l1833 0658                     l1587 01B5  
                   l1683 00E1                     l1827 0506                     l1819 04E9  
                   l1675 02F4                     l1667 02DD                     l1659 02C5  
                   l1499 05A6                     l1739 0313                     l1755 03B7  
                   l1747 0369                     l1763 0154                     l1771 0179  
                   l1691 01D4                     l1915 07EB                     l1907 07CF  
                   l1851 06AC                     l1843 068B                     l1835 065B  
                   l1589 01C2                     l1685 00E7                     l1597 0429  
                   l1669 02E4                     l1749 0374                     l1757 0137  
                   l1765 015C                     l1773 0188                     l1693 01D7  
                   l1781 019A                     l1909 07D3                     l1861 06DC  
                   l1853 06B9                     l1845 0693                     l1837 0663  
                   l1687 00E9                     l1679 00DA                     l1599 042A  
                   l1759 013F                     l1767 016B                     l1695 01D8  
                   l1783 01A8                     l1775 0191                     l1791 0203  
                   l1871 070F                     l1863 06ED                     l1855 06C4  
                   l1847 0696                     l1839 0669                     l1937 0554  
                   l1769 0171                     l1697 01D9                     l1777 0195  
                   l1793 020C                     l1881 0737                     l1865 06F3  
                   l1857 06CC                     l1849 06A1                     l1699 01DB  
                   l1779 0196                     l1795 0214                     l1787 01FA  
                   l1883 0742                     l1891 0756                     l1875 071B  
                   l1867 06F8                     l1859 06D1                     l1797 0491  
                   l1789 01FF                     l1893 078D                     l1877 0720  
                   l1869 0700                     l1799 0492                     l1895 0799  
                   l1887 0749                     l1879 0728                     l1897 07A5  
                   l1889 074E                     l1899 07B1                     STR_1 0877  
                   STR_2 081C                     STR_3 08D3                     STR_4 0897  
                   STR_5 0900                     STR_6 0900                     STR_7 0900  
                   STR_8 08F0                     STR_9 0903                     u1000 00BE  
                   u1001 00BD                     u1010 01B5                     u1011 01B4  
                   u1110 046D                     u1111 046C                     u1040 01CF  
                   u1200 02D7                     u1041 01CE                     u1025 01BC  
                   u1105 045D                     u1201 02D6                     u1130 0481  
                   u1050 042E                     u1035 01C3                     u1131 0480  
                   u1115 0469                     u1051 042D                     u1140 0486  
                   u1060 0439                     u1220 02EA                     u1300 0179  
                   u1141 0485                     u1125 0475                     u1061 0438  
                   u1221 02E9                     u1205 02D3                     u1301 0178  
                   u1070 044A                     u1230 02EF                     u1150 02A5  
                   u1310 0188                     u1071 0449                     u1231 02EE  
                   u1215 02DE                     u1151 02A4                     u1311 0187  
                   u1240 00E1                     u1160 02B0                     u1320 020B  
                   u1400 06ED                     u1241 00E0                     u1161 02AF  
                   u1321 020A                     u1401 06EC                     u1250 00E7  
                   u1090 045C                     u1170 02BB                     u1330 0221  
                   u1410 0700                     u1251 00E6                     u1091 045B  
                   u1171 02BA                     u1331 0220                     u1411 06FF  
                   u1340 049F                     u1260 013F                     u1420 070F  
                   u1341 049E                     u1085 044E                     u1261 013E  
                   u1421 070E                     u1350 04A7                     u1190 02CD  
                   u1270 014E                     u1430 071A                     u1351 04A6  
                   u1191 02CC                     u1271 014D                     u1431 0719  
                   u1360 04B2                     u1280 015C                     u1440 0728  
                   u1361 04B1                     u1185 02BF                     u1281 015B  
                   u1441 0727                     u1370 04C3                     u1290 016B  
                   u1450 0737                     u1371 04C2                     u1291 016A  
                   u1451 0736                     u1507 0677                     u1380 04F5  
                   u1460 0742                     u1381 04F4                     u1461 0741  
                   u1517 068F                     u1390 04FA                     u1470 0748  
                   u1391 04F9                     u1607 037E                     u1471 0747  
                   u1527 069C                     u1480 0756                     u1617 0394  
                   u1481 0755                     u1537 06BF           ??_config_USART 0070  
                   u1627 03A3                     u1547 06D7                     u1637 03B2  
                   u1557 07BD                     u1647 030A                     u1567 07CB  
                   u1657 0319                     u1577 07D9                     u1497 065F  
                   u1667 032F                     u1587 07E7                     u1677 033E  
                   u1597 036F                     u1687 034D                     _RCIF 0065  
                   _TXIF 0064                     _atoi 0490                     _main 0653  
                   btemp 007E                     start 0000                    ?_atoi 0076  
           main@completo 005F                    ?_main 0070          __end_of___awdiv 0490  
                  STR_10 08B3                    STR_11 08F8                    STR_12 0903  
                  STR_13 08B2                    STR_14 08B5                    STR_15 0850  
                  STR_16 0850          __end_of___awmod 02F9          ___awdiv@divisor 0070  
        __end_of___lwdiv 02A0          __end_of___lwmod 025C          ___awdiv@counter 0075  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009          __end_of__doprnt 0653                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 081C  
        __end_of_isdigit 00EB                    atoi@a 007B                    _setup 01D4  
                  atoi@s 007D                    _putch 00C7                    _vol_a 0028  
                  _vol_b 0027                    fpbase 0008                    pclath 000A  
        __end_of_spiInit 0101          __end_of_spiRead 00D9                    status 0003  
                  wtemp0 007E          __end_of_sprintf 01AF          __initialization 07F3  
           __end_of_atoi 050B             __end_of_main 07F3                   ??_atoi 0078  
                 ??_main 005D         ___awdiv@dividend 0072                   ?_setup 0070  
                 ?_putch 0070                   _SPBRGH 009A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of__fptable 000C             ?_precaucion1 0070             ?_precaucion2 0070  
       __end_of_division 0429                   ___wmul 01AF                ??___awdiv 0074  
              ??___awmod 0074                ??___lwdiv 0074                ??___lwmod 007C  
              ??__doprnt 004A         __end_of_mensaje1 035E         __end_of_mensaje2 03C3  
       ___awdiv@quotient 0077     __end_of_config_USART 0137          ___awmod@divisor 0070  
           __doprnt@flag 004E          ___awmod@counter 0075                   _printf 0101  
           __doprnt@prec 004F                   _strcat 01F9                   fptable 0003  
                 fptotal 0002                ??_isdigit 0070         __end_of_spiWrite 00B8  
              ??_spiInit 0073                ??_spiRead 0070                ??_sprintf 0058  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 01F9  
          __end_of_putch 00D0               __doprnt@ap 0049               __doprnt@pb 0053  
                ??_setup 0074                  ??_putch 0071               __pbssBANK0 0020  
             __pmaintext 0653                  ?___wmul 0070  __size_of_spiReceiveWait 0007  
                ?_printf 0054                  ?_strcat 0070                  _SSPSTAT 0094  
             __stringtab 0800                ?_division 0070                ?_mensaje1 0070  
              ?_mensaje2 0070    __size_of_config_USART 001C                ?_spiWrite 0070  
                ___awdiv 0429     __size_of_precaucion1 001D     __size_of_precaucion2 001D  
                ___awmod 02A0          __size_of___wmul 0025                  ___lwdiv 025C  
                ___lwmod 0222                  __doprnt 050B                  __ptext1 01F9  
                __ptext2 018E                  __ptext3 00B2                  __ptext4 00D0  
                __ptext5 00B8                  __ptext6 01D4                  __ptext7 00EB  
                __ptext8 011B                  __ptext9 0171          __size_of_printf 001A  
        __size_of_strcat 0029                  _dpowers 0812                  _isdigit 00D9  
       ___awmod@dividend 0072                  _residuo 0023                  _spiInit 00EB  
                _spiRead 00D0                  _sprintf 018E                  clrloop0 00C0  
   end_of_initialization 07FC               ??_division 0079             _config_USART 011B  
             ??_mensaje1 005A               ??_mensaje2 005A               _precaucion 0137  
              _RCSTAbits 0018                  printf@f 0054               ??_spiWrite 0070  
           __pstringtext 0800                _PORTCbits 0007                _TRISCbits 0087  
      division@dividendo 007C              spiWrite@dat 0070                _TXSTAbits 0098  
         _spiReceiveWait 00B8           __end_of___wmul 01D4              _BAUDCTLbits 0187  
         __end_of_printf 011B           __end_of_strcat 0222      start_initialization 07F3  
            ?_precaucion 0070   __end_of_spiReceiveWait 00BF                 ??___wmul 0074  
            __doprnt@val 0050                 ??_printf 0056                 ??_strcat 0071  
              ___latbits 0002            __pcstackBANK0 0047        __size_of__fptable 0009  
           _isdigit$1015 0070                __doprnt@c 0052                __doprnt@f 0047  
      __size_of_division 0066        __size_of_mensaje1 0065        __size_of_mensaje2 0065  
       ___lwdiv@dividend 0072          ?_spiReceiveWait 0070                __pfunctab 0003  
               ?___awdiv 0070                 ?___awmod 0070                 ?___lwdiv 0070  
               ?___lwmod 0078                 ?__doprnt 0047        __size_of_spiWrite 0006  
               ?_isdigit 0070                 ?_spiInit 0070                 ?_spiRead 0070  
    __size_of_precaucion 001D         ___lwdiv@quotient 0075                 ?_sprintf 0054  
         __size_of_setup 0025           __size_of_putch 0009     spiInit@sTransmitEdge 0072  
         ___wmul@product 0074                clear_ram0 00BF            ??_precaucion1 005A  
          ??_precaucion2 005A       spiInit@sDataSample 0070                 _PIR1bits 000C  
            __stringbase 0812        ___wmul@multiplier 0070         __size_of___awdiv 0067  
       __size_of___awmod 0059      __end_of_precaucion1 0171      __end_of_precaucion2 018E  
       __size_of___lwdiv 0044         __size_of___lwmod 003A         __size_of__doprnt 0148  
     __end_of__stringtab 0812                 __fptable 0003               strcat@from 0070  
       __size_of_isdigit 0012          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 0154                 __ptext11 0137                 __ptext20 02A0  
               __ptext12 035E                 __ptext21 0429                 __ptext13 02F9  
               __ptext22 0490                 __ptext14 0101                 __ptext23 00D9  
               __ptext15 050B                 __ptext24 01AF                 __ptext16 00C7  
               __ptext17 0222                 __ptext18 025C                 __ptext19 03C3  
       __size_of_spiInit 0016         __size_of_spiRead 0009                 _division 03C3  
       __size_of_sprintf 0021            __size_of_atoi 007B            __size_of_main 01A0  
               _mensaje1 02F9                 _mensaje2 035E             ??_precaucion 005A  
               _spiWrite 00B2             spiInit@sType 0073                 atoi@sign 007A  
               fp__putch 0009        spiInit@sClockIdle 0071                putch@info 0070  
             _INTCONbits 000B                 isdigit@c 0071       __end_of_precaucion 0154  
              sprintf@ap 0059                sprintf@pb 005B                sprintf@wh 005A  
       ___lwmod@dividend 007A         ??_spiReceiveWait 0070                stringcode 080A  
             _OSCCONbits 008F              _precaucion1 0154              _precaucion2 0171  
               printf@ap 0057                 printf@pb 0058                 sprintf@f 0054  
               strcat@cp 0073                 strcat@to 0072          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringtab 0800            ?_config_USART 0070  
