

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 03 19:15:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  000B                     _INTCONbits	set	11
   369  0009                     _PORTE	set	9
   370  0008                     _PORTD	set	8
   371  0007                     _PORTC	set	7
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  001E                     _ADRESH	set	30
   375  001F                     _ADCON0bits	set	31
   376  000C                     _PIR1bits	set	12
   377  0063                     _SSPIF	set	99
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  009F                     _ADCON1bits	set	159
   381  008C                     _PIE1bits	set	140
   382  0087                     _TRISCbits	set	135
   383  0086                     _TRISB	set	134
   384  0085                     _TRISAbits	set	133
   385  043B                     _TRISC3	set	1083
   386  043D                     _TRISC5	set	1085
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  000F                     start_initialization:	
   391                           ; #config settings
   392                           
   393  000F                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   397  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   398  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   399  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   400  0013                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  0013                     __end_of__initialization:
   404  0013  0183               	clrf	3
   405  0014  120A  118A  2912   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMMON
   408  0076                     __pbssCOMMON:
   409  0076                     _temp2:
   410  0076                     	ds	1
   411  0077                     _temp1:
   412  0077                     	ds	1
   413  0078                     _vol2:
   414  0078                     	ds	1
   415  0079                     _vol1:
   416  0079                     	ds	1
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:
   420  0070                     ?_spiRead:
   421  0070                     ??_spiRead:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_spiWrite:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_config_ADC:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_isr:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_setup:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_main:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_spiReceiveWait:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_spiReceiveWait:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     spiWrite@dat:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 1 bytes @ 0x0
   453  0070                     	ds	1
   454  0071                     ??_isr:
   455                           
   456                           ; 1 bytes @ 0x1
   457  0071                     	ds	3
   458  0074                     ??_spiInit:
   459  0074                     ??_config_ADC:	
   460                           ; 1 bytes @ 0x4
   461                           
   462  0074                     spiInit@sType:	
   463                           ; 1 bytes @ 0x4
   464                           
   465                           
   466                           ; 1 bytes @ 0x4
   467  0074                     	ds	2
   468  0076                     ??_setup:
   469                           
   470                           	psect	cstackBANK0
   471  0020                     __pcstackBANK0:	
   472                           ; 1 bytes @ 0x6
   473                           
   474  0020                     ?_spiInit:
   475  0020                     config_ADC@frec:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0020                     spiInit@sDataSample:	
   479                           ; 1 bytes @ 0x0
   480                           
   481                           
   482                           ; 1 bytes @ 0x0
   483  0020                     	ds	1
   484  0021                     spiInit@sClockIdle:
   485                           
   486                           ; 1 bytes @ 0x1
   487  0021                     	ds	1
   488  0022                     spiInit@sTransmitEdge:
   489                           
   490                           ; 1 bytes @ 0x2
   491  0022                     	ds	1
   492  0023                     ??_main:
   493                           
   494                           ; 1 bytes @ 0x3
   495  0023                     	ds	1
   496                           
   497                           	psect	maintext
   498  0112                     __pmaintext:	
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 131 in file "Esclavo.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : B00/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       1       0       0       0
   521 ;;      Totals:         0       1       0       0       0
   522 ;;Total ram usage:        1 bytes
   523 ;; Hardware stack levels required when called:    5
   524 ;; This function calls:
   525 ;;		_setup
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _main
   533  0112                     _main:
   534  0112                     l1103:	
   535                           ;incstack = 0
   536                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   537                           
   538                           
   539                           ;Esclavo.c: 132:     setup();
   540  0112  120A  118A  20C8  120A  118A  	fcall	_setup
   541  0117                     l1105:
   542                           
   543                           ;Esclavo.c: 134:         PORTB--;
   544  0117  3001               	movlw	1
   545  0118  1283               	bcf	3,5	;RP0=0, select bank0
   546  0119  1303               	bcf	3,6	;RP1=0, select bank0
   547  011A  0286               	subwf	6,f	;volatile
   548  011B                     l1107:
   549                           
   550                           ;Esclavo.c: 135:         if (ADCON0bits.GO == 0){
   551  011B  189F               	btfsc	31,1	;volatile
   552  011C  291E               	goto	u111
   553  011D  291F               	goto	u110
   554  011E                     u111:
   555  011E  2917               	goto	l1105
   556  011F                     u110:
   557  011F                     l1109:
   558                           
   559                           ;Esclavo.c: 136:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   560  011F  3020               	movlw	32
   561  0120  1283               	bcf	3,5	;RP0=0, select bank0
   562  0121  1303               	bcf	3,6	;RP1=0, select bank0
   563  0122  00A3               	movwf	??_main
   564  0123                     u127:
   565  0123  0BA3               	decfsz	??_main,f
   566  0124  2923               	goto	u127
   567  0125  0000               	nop
   568  0126                     l1111:
   569                           
   570                           ;Esclavo.c: 137:             ADCON0bits.GO = 1;
   571  0126  1283               	bcf	3,5	;RP0=0, select bank0
   572  0127  1303               	bcf	3,6	;RP1=0, select bank0
   573  0128  149F               	bsf	31,1	;volatile
   574  0129  2917               	goto	l1105
   575  012A  120A  118A  280C   	ljmp	start
   576  012D                     __end_of_main:
   577                           
   578                           	psect	text1
   579  00C8                     __ptext1:	
   580 ;; *************** function _setup *****************
   581 ;; Defined at:
   582 ;;		line 100 in file "Esclavo.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    4
   603 ;; This function calls:
   604 ;;		_config_ADC
   605 ;;		_spiInit
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _setup
   613  00C8                     _setup:
   614  00C8                     l1065:	
   615                           ;incstack = 0
   616                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   617                           
   618                           
   619                           ;Esclavo.c: 101:     ANSEL = 0B00000011;
   620  00C8  3003               	movlw	3
   621  00C9  1683               	bsf	3,5	;RP0=1, select bank3
   622  00CA  1703               	bsf	3,6	;RP1=1, select bank3
   623  00CB  0088               	movwf	8	;volatile
   624  00CC                     l1067:
   625                           
   626                           ;Esclavo.c: 102:     TRISAbits.TRISA0 = 1;
   627  00CC  1683               	bsf	3,5	;RP0=1, select bank1
   628  00CD  1303               	bcf	3,6	;RP1=0, select bank1
   629  00CE  1405               	bsf	5,0	;volatile
   630  00CF                     l1069:
   631                           
   632                           ;Esclavo.c: 103:     TRISAbits.TRISA1 = 1;
   633  00CF  1485               	bsf	5,1	;volatile
   634  00D0                     l1071:
   635                           
   636                           ;Esclavo.c: 104:     TRISAbits.TRISA5 = 0;
   637  00D0  1285               	bcf	5,5	;volatile
   638  00D1                     l1073:
   639                           
   640                           ;Esclavo.c: 105:     TRISB = 0X00;
   641  00D1  0186               	clrf	6	;volatile
   642  00D2                     l1075:
   643                           
   644                           ;Esclavo.c: 106:     TRISCbits.TRISC3 = 0;
   645  00D2  1187               	bcf	7,3	;volatile
   646  00D3                     l1077:
   647                           
   648                           ;Esclavo.c: 107:     TRISCbits.TRISC4 = 1;
   649  00D3  1607               	bsf	7,4	;volatile
   650  00D4                     l1079:
   651                           
   652                           ;Esclavo.c: 108:     TRISCbits.TRISC5 = 0;
   653  00D4  1287               	bcf	7,5	;volatile
   654  00D5                     l1081:
   655                           
   656                           ;Esclavo.c: 110:     PORTA = 0X00;
   657  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   658  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   659  00D7  0185               	clrf	5	;volatile
   660  00D8                     l1083:
   661                           
   662                           ;Esclavo.c: 111:     PORTB = 0X00;
   663  00D8  0186               	clrf	6	;volatile
   664  00D9                     l1085:
   665                           
   666                           ;Esclavo.c: 112:     PORTC = 0X00;
   667  00D9  0187               	clrf	7	;volatile
   668  00DA                     l1087:
   669                           
   670                           ;Esclavo.c: 113:     PORTD = 0X00;
   671  00DA  0188               	clrf	8	;volatile
   672  00DB                     l1089:
   673                           
   674                           ;Esclavo.c: 114:     PORTE = 0X00;
   675  00DB  0189               	clrf	9	;volatile
   676  00DC                     l1091:
   677                           
   678                           ;Esclavo.c: 117:     INTCONbits.GIE = 1;
   679  00DC  178B               	bsf	11,7	;volatile
   680  00DD                     l1093:
   681                           
   682                           ;Esclavo.c: 118:     INTCONbits.PEIE = 1;
   683  00DD  170B               	bsf	11,6	;volatile
   684  00DE                     l1095:
   685                           
   686                           ;Esclavo.c: 119:     PIR1bits.SSPIF = 0;
   687  00DE  118C               	bcf	12,3	;volatile
   688  00DF                     l1097:
   689                           
   690                           ;Esclavo.c: 120:     PIE1bits.SSPIE = 1;
   691  00DF  1683               	bsf	3,5	;RP0=1, select bank1
   692  00E0  1303               	bcf	3,6	;RP1=0, select bank1
   693  00E1  158C               	bsf	12,3	;volatile
   694  00E2                     l1099:
   695                           
   696                           ;Esclavo.c: 123:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          ,
   697  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   698  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   699  00E4  01A0               	clrf	spiInit@sDataSample
   700  00E5  01A1               	clrf	spiInit@sClockIdle
   701  00E6  01A2               	clrf	spiInit@sTransmitEdge
   702  00E7  3024               	movlw	36
   703  00E8  120A  118A  20F4  120A  118A  	fcall	_spiInit
   704  00ED                     l1101:
   705                           
   706                           ;Esclavo.c: 126:     config_ADC(1);
   707  00ED  3001               	movlw	1
   708  00EE  120A  118A  2017  120A  118A  	fcall	_config_ADC
   709  00F3                     l61:
   710  00F3  0008               	return
   711  00F4                     __end_of_setup:
   712                           
   713                           	psect	text2
   714  00F4                     __ptext2:	
   715 ;; *************** function _spiInit *****************
   716 ;; Defined at:
   717 ;;		line 12 in file "../SPI/SPI-Master.X/SPI.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  sType           1    wreg     enum E1264
   720 ;;  sDataSample     1    0[BANK0 ] enum E1272
   721 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   722 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  sType           1    4[COMMON] enum E1264
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       3       0       0       0
   735 ;;      Locals:         1       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0
   737 ;;      Totals:         1       3       0       0       0
   738 ;;Total ram usage:        4 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    3
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_setup
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _spiInit
   750  00F4                     _spiInit:
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   754                           ;spiInit@sType stored from wreg
   755  00F4  00F4               	movwf	spiInit@sType
   756  00F5                     l979:
   757                           
   758                           ;../SPI/SPI-Master.X/SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample
      +                          , Spi_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../SPI/SPI-Master.X/SPI.c:
      +                           13: {;../SPI/SPI-Master.X/SPI.c: 14:     TRISC5 = 0;
   759  00F5  1683               	bsf	3,5	;RP0=1, select bank1
   760  00F6  1303               	bcf	3,6	;RP1=0, select bank1
   761  00F7  1287               	bcf	7,5	;volatile
   762                           
   763                           ;../SPI/SPI-Master.X/SPI.c: 15:     if(sType & 0b00000100)
   764  00F8  1D74               	btfss	spiInit@sType,2
   765  00F9  28FB               	goto	u101
   766  00FA  28FC               	goto	u100
   767  00FB                     u101:
   768  00FB  2904               	goto	l985
   769  00FC                     u100:
   770  00FC                     l981:
   771                           
   772                           ;../SPI/SPI-Master.X/SPI.c: 16:     {;../SPI/SPI-Master.X/SPI.c: 17:         SSPSTAT = s
      +                          TransmitEdge;
   773  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   774  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   775  00FE  0822               	movf	spiInit@sTransmitEdge,w
   776  00FF  1683               	bsf	3,5	;RP0=1, select bank1
   777  0100  1303               	bcf	3,6	;RP1=0, select bank1
   778  0101  0094               	movwf	20	;volatile
   779  0102                     l983:
   780                           
   781                           ;../SPI/SPI-Master.X/SPI.c: 18:         TRISC3 = 1;
   782  0102  1587               	bsf	7,3	;volatile
   783                           
   784                           ;../SPI/SPI-Master.X/SPI.c: 19:     }
   785  0103  290C               	goto	l101
   786  0104                     l985:
   787                           
   788                           ;../SPI/SPI-Master.X/SPI.c: 21:     {;../SPI/SPI-Master.X/SPI.c: 22:         SSPSTAT = s
      +                          DataSample | sTransmitEdge;
   789  0104  1283               	bcf	3,5	;RP0=0, select bank0
   790  0105  1303               	bcf	3,6	;RP1=0, select bank0
   791  0106  0820               	movf	spiInit@sDataSample,w
   792  0107  0422               	iorwf	spiInit@sTransmitEdge,w
   793  0108  1683               	bsf	3,5	;RP0=1, select bank1
   794  0109  1303               	bcf	3,6	;RP1=0, select bank1
   795  010A  0094               	movwf	20	;volatile
   796  010B                     l987:
   797                           
   798                           ;../SPI/SPI-Master.X/SPI.c: 23:         TRISC3 = 0;
   799  010B  1187               	bcf	7,3	;volatile
   800  010C                     l101:	
   801                           ;../SPI/SPI-Master.X/SPI.c: 24:     }
   802                           
   803                           
   804                           ;../SPI/SPI-Master.X/SPI.c: 26:     SSPCON = sType | sClockIdle;
   805  010C  0874               	movf	spiInit@sType,w
   806  010D  1283               	bcf	3,5	;RP0=0, select bank0
   807  010E  1303               	bcf	3,6	;RP1=0, select bank0
   808  010F  0421               	iorwf	spiInit@sClockIdle,w
   809  0110  0094               	movwf	20	;volatile
   810  0111                     l102:
   811  0111  0008               	return
   812  0112                     __end_of_spiInit:
   813                           
   814                           	psect	text3
   815  0017                     __ptext3:	
   816 ;; *************** function _config_ADC *****************
   817 ;; Defined at:
   818 ;;		line 16 in file "config_ADC.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  frec            1    wreg     unsigned char 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  frec            1    0[BANK0 ] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0       1       0       0       0
   834 ;;      Temps:          2       0       0       0       0
   835 ;;      Totals:         2       1       0       0       0
   836 ;;Total ram usage:        3 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    3
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_setup
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _config_ADC
   848  0017                     _config_ADC:
   849                           
   850                           ;incstack = 0
   851                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
   852                           ;config_ADC@frec stored from wreg
   853  0017  1283               	bcf	3,5	;RP0=0, select bank0
   854  0018  1303               	bcf	3,6	;RP1=0, select bank0
   855  0019  00A0               	movwf	config_ADC@frec
   856  001A                     l989:
   857                           
   858                           ;config_ADC.c: 17:     switch(frec){
   859  001A  285F               	goto	l1057
   860  001B                     l991:
   861                           
   862                           ;config_ADC.c: 19:             ADCON0bits.CHS = 0;
   863  001B  30C3               	movlw	-61
   864  001C  059F               	andwf	31,f	;volatile
   865  001D                     l993:
   866                           
   867                           ;config_ADC.c: 20:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   868  001D  3021               	movlw	33
   869  001E  00F4               	movwf	??_config_ADC
   870  001F                     u137:
   871  001F  0BF4               	decfsz	??_config_ADC,f
   872  0020  281F               	goto	u137
   873  0021                     l995:
   874                           
   875                           ;config_ADC.c: 22:             ADCON0bits.ADCS0 = 0;
   876  0021  1283               	bcf	3,5	;RP0=0, select bank0
   877  0022  1303               	bcf	3,6	;RP1=0, select bank0
   878  0023  131F               	bcf	31,6	;volatile
   879  0024                     l997:
   880                           
   881                           ;config_ADC.c: 23:             ADCON0bits.ADCS1 = 0;
   882  0024  139F               	bcf	31,7	;volatile
   883  0025                     l999:
   884                           
   885                           ;config_ADC.c: 24:             ADCON0bits.ADON = 1;
   886  0025  141F               	bsf	31,0	;volatile
   887  0026                     l1001:
   888                           
   889                           ;config_ADC.c: 25:             ADCON1bits.ADFM = 0;
   890  0026  1683               	bsf	3,5	;RP0=1, select bank1
   891  0027  1303               	bcf	3,6	;RP1=0, select bank1
   892  0028  139F               	bcf	31,7	;volatile
   893  0029                     l1003:
   894                           
   895                           ;config_ADC.c: 26:             ADCON1bits.VCFG1 = 0;
   896  0029  129F               	bcf	31,5	;volatile
   897  002A                     l1005:
   898                           
   899                           ;config_ADC.c: 27:             ADCON1bits.VCFG0 = 0;
   900  002A  121F               	bcf	31,4	;volatile
   901                           
   902                           ;config_ADC.c: 28:             break;
   903  002B  2875               	goto	l85
   904  002C                     l1007:
   905                           
   906                           ;config_ADC.c: 30:             ADCON0bits.CHS = 0;
   907  002C  30C3               	movlw	-61
   908  002D  059F               	andwf	31,f	;volatile
   909  002E                     l1009:
   910                           
   911                           ;config_ADC.c: 31:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   912  002E  3021               	movlw	33
   913  002F  00F4               	movwf	??_config_ADC
   914  0030                     u147:
   915  0030  0BF4               	decfsz	??_config_ADC,f
   916  0031  2830               	goto	u147
   917  0032                     l1011:
   918                           
   919                           ;config_ADC.c: 33:             ADCON0bits.ADCS0 = 1;
   920  0032  1283               	bcf	3,5	;RP0=0, select bank0
   921  0033  1303               	bcf	3,6	;RP1=0, select bank0
   922  0034  171F               	bsf	31,6	;volatile
   923  0035                     l1013:
   924                           
   925                           ;config_ADC.c: 34:             ADCON0bits.ADCS1 = 0;
   926  0035  139F               	bcf	31,7	;volatile
   927  0036                     l1015:
   928                           
   929                           ;config_ADC.c: 35:             ADCON0bits.ADON = 1;
   930  0036  141F               	bsf	31,0	;volatile
   931  0037                     l1017:
   932                           
   933                           ;config_ADC.c: 36:             ADCON1bits.ADFM = 0;
   934  0037  1683               	bsf	3,5	;RP0=1, select bank1
   935  0038  1303               	bcf	3,6	;RP1=0, select bank1
   936  0039  139F               	bcf	31,7	;volatile
   937  003A                     l1019:
   938                           
   939                           ;config_ADC.c: 37:             ADCON1bits.VCFG1 = 0;
   940  003A  129F               	bcf	31,5	;volatile
   941  003B                     l1021:
   942                           
   943                           ;config_ADC.c: 38:             ADCON1bits.VCFG0 = 0;
   944  003B  121F               	bcf	31,4	;volatile
   945                           
   946                           ;config_ADC.c: 39:             break;
   947  003C  2875               	goto	l85
   948  003D                     l1023:
   949                           
   950                           ;config_ADC.c: 41:             ADCON0bits.CHS = 0;
   951  003D  30C3               	movlw	-61
   952  003E  059F               	andwf	31,f	;volatile
   953  003F                     l1025:
   954                           
   955                           ;config_ADC.c: 42:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   956  003F  3021               	movlw	33
   957  0040  00F4               	movwf	??_config_ADC
   958  0041                     u157:
   959  0041  0BF4               	decfsz	??_config_ADC,f
   960  0042  2841               	goto	u157
   961  0043                     l1027:
   962                           
   963                           ;config_ADC.c: 44:             ADCON0bits.ADCS0 = 0;
   964  0043  1283               	bcf	3,5	;RP0=0, select bank0
   965  0044  1303               	bcf	3,6	;RP1=0, select bank0
   966  0045  131F               	bcf	31,6	;volatile
   967  0046                     l1029:
   968                           
   969                           ;config_ADC.c: 45:             ADCON0bits.ADCS1 = 1;
   970  0046  179F               	bsf	31,7	;volatile
   971  0047                     l1031:
   972                           
   973                           ;config_ADC.c: 46:             ADCON0bits.ADON = 1;
   974  0047  141F               	bsf	31,0	;volatile
   975  0048                     l1033:
   976                           
   977                           ;config_ADC.c: 47:             ADCON1bits.ADFM = 0;
   978  0048  1683               	bsf	3,5	;RP0=1, select bank1
   979  0049  1303               	bcf	3,6	;RP1=0, select bank1
   980  004A  139F               	bcf	31,7	;volatile
   981  004B                     l1035:
   982                           
   983                           ;config_ADC.c: 48:             ADCON1bits.VCFG1 = 0;
   984  004B  129F               	bcf	31,5	;volatile
   985  004C                     l1037:
   986                           
   987                           ;config_ADC.c: 49:             ADCON1bits.VCFG0 = 0;
   988  004C  121F               	bcf	31,4	;volatile
   989                           
   990                           ;config_ADC.c: 50:             break;
   991  004D  2875               	goto	l85
   992  004E                     l1039:
   993                           
   994                           ;config_ADC.c: 52:             ADCON0bits.CHS = 0;
   995  004E  30C3               	movlw	-61
   996  004F  059F               	andwf	31,f	;volatile
   997  0050                     l1041:
   998                           
   999                           ;config_ADC.c: 53:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1000  0050  3021               	movlw	33
  1001  0051  00F4               	movwf	??_config_ADC
  1002  0052                     u167:
  1003  0052  0BF4               	decfsz	??_config_ADC,f
  1004  0053  2852               	goto	u167
  1005  0054                     l1043:
  1006                           
  1007                           ;config_ADC.c: 55:             ADCON0bits.ADCS0 = 1;
  1008  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0056  171F               	bsf	31,6	;volatile
  1011  0057                     l1045:
  1012                           
  1013                           ;config_ADC.c: 56:             ADCON0bits.ADCS1 = 1;
  1014  0057  179F               	bsf	31,7	;volatile
  1015  0058                     l1047:
  1016                           
  1017                           ;config_ADC.c: 57:             ADCON0bits.ADON = 1;
  1018  0058  141F               	bsf	31,0	;volatile
  1019  0059                     l1049:
  1020                           
  1021                           ;config_ADC.c: 58:             ADCON1bits.ADFM = 0;
  1022  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1023  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1024  005B  139F               	bcf	31,7	;volatile
  1025  005C                     l1051:
  1026                           
  1027                           ;config_ADC.c: 59:             ADCON1bits.VCFG1 = 0;
  1028  005C  129F               	bcf	31,5	;volatile
  1029  005D                     l1053:
  1030                           
  1031                           ;config_ADC.c: 60:             ADCON1bits.VCFG0 = 0;
  1032  005D  121F               	bcf	31,4	;volatile
  1033                           
  1034                           ;config_ADC.c: 61:             break;
  1035  005E  2875               	goto	l85
  1036  005F                     l1057:
  1037  005F  0820               	movf	config_ADC@frec,w
  1038  0060  00F4               	movwf	??_config_ADC
  1039  0061  01F5               	clrf	??_config_ADC+1
  1040                           
  1041                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1042                           ; Switch size 1, requested type "simple"
  1043                           ; Number of cases is 1, Range of values is 0 to 0
  1044                           ; switch strategies available:
  1045                           ; Name         Instructions Cycles
  1046                           ; simple_byte            4     3 (average)
  1047                           ; direct_byte           11     8 (fixed)
  1048                           ; jumptable            260     6 (fixed)
  1049                           ;	Chosen strategy is simple_byte
  1050  0062  0875               	movf	??_config_ADC+1,w
  1051  0063  3A00               	xorlw	0	; case 0
  1052  0064  1903               	skipnz
  1053  0065  2867               	goto	l1143
  1054  0066  2875               	goto	l85
  1055  0067                     l1143:
  1056                           
  1057                           ; Switch size 1, requested type "simple"
  1058                           ; Number of cases is 4, Range of values is 0 to 3
  1059                           ; switch strategies available:
  1060                           ; Name         Instructions Cycles
  1061                           ; simple_byte           13     7 (average)
  1062                           ; direct_byte           20     8 (fixed)
  1063                           ; jumptable            260     6 (fixed)
  1064                           ;	Chosen strategy is simple_byte
  1065  0067  0874               	movf	??_config_ADC,w
  1066  0068  3A00               	xorlw	0	; case 0
  1067  0069  1903               	skipnz
  1068  006A  281B               	goto	l991
  1069  006B  3A01               	xorlw	1	; case 1
  1070  006C  1903               	skipnz
  1071  006D  282C               	goto	l1007
  1072  006E  3A03               	xorlw	3	; case 2
  1073  006F  1903               	skipnz
  1074  0070  283D               	goto	l1023
  1075  0071  3A01               	xorlw	1	; case 3
  1076  0072  1903               	skipnz
  1077  0073  284E               	goto	l1039
  1078  0074  2875               	goto	l85
  1079  0075                     l85:
  1080  0075  0008               	return
  1081  0076                     __end_of_config_ADC:
  1082                           
  1083                           	psect	text4
  1084  0076                     __ptext4:	
  1085 ;; *************** function _isr *****************
  1086 ;; Defined at:
  1087 ;;		line 66 in file "Esclavo.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0, pclath, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0
  1103 ;;      Temps:          3       0       0       0       0
  1104 ;;      Totals:         3       0       0       0       0
  1105 ;;Total ram usage:        3 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    2
  1108 ;; This function calls:
  1109 ;;		_spiRead
  1110 ;;		_spiWrite
  1111 ;; This function is called by:
  1112 ;;		Interrupt level 1
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _isr
  1118  0076                     _isr:
  1119  0076                     i1l843:
  1120                           
  1121                           ;Esclavo.c: 76:     if(PIR1bits.ADIF == 1){
  1122  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0078  1F0C               	btfss	12,6	;volatile
  1125  0079  287B               	goto	u3_21
  1126  007A  287C               	goto	u3_20
  1127  007B                     u3_21:
  1128  007B  289D               	goto	i1l857
  1129  007C                     u3_20:
  1130  007C                     i1l845:
  1131                           
  1132                           ;Esclavo.c: 77:         if(ADCON0bits.CHS == 0){
  1133  007C  0C1F               	rrf	31,w	;volatile
  1134  007D  00F1               	movwf	??_isr
  1135  007E  0C71               	rrf	??_isr,w
  1136  007F  390F               	andlw	15
  1137  0080  3A00               	xorlw	0
  1138  0081  1D03               	skipz
  1139  0082  2884               	goto	u4_21
  1140  0083  2885               	goto	u4_20
  1141  0084                     u4_21:
  1142  0084  288E               	goto	i1l851
  1143  0085                     u4_20:
  1144  0085                     i1l847:
  1145                           
  1146                           ;Esclavo.c: 78:             ADCON0bits.CHS = 1;
  1147  0085  081F               	movf	31,w	;volatile
  1148  0086  39C3               	andlw	-61
  1149  0087  3804               	iorlw	4
  1150  0088  009F               	movwf	31	;volatile
  1151  0089                     i1l849:
  1152                           
  1153                           ;Esclavo.c: 79:             vol2 = ADRESH;
  1154  0089  081E               	movf	30,w	;volatile
  1155  008A  00F1               	movwf	??_isr
  1156  008B  0871               	movf	??_isr,w
  1157  008C  00F8               	movwf	_vol2
  1158                           
  1159                           ;Esclavo.c: 80:             }
  1160  008D  289D               	goto	i1l857
  1161  008E                     i1l851:
  1162  008E  0C1F               	rrf	31,w	;volatile
  1163  008F  00F1               	movwf	??_isr
  1164  0090  0C71               	rrf	??_isr,w
  1165  0091  390F               	andlw	15
  1166  0092  3A01               	xorlw	1
  1167  0093  1D03               	skipz
  1168  0094  2896               	goto	u5_21
  1169  0095  2897               	goto	u5_20
  1170  0096                     u5_21:
  1171  0096  289D               	goto	i1l857
  1172  0097                     u5_20:
  1173  0097                     i1l853:
  1174                           
  1175                           ;Esclavo.c: 82:             ADCON0bits.CHS = 0;
  1176  0097  30C3               	movlw	-61
  1177  0098  059F               	andwf	31,f	;volatile
  1178  0099                     i1l855:
  1179                           
  1180                           ;Esclavo.c: 83:             vol1 = ADRESH;
  1181  0099  081E               	movf	30,w	;volatile
  1182  009A  00F1               	movwf	??_isr
  1183  009B  0871               	movf	??_isr,w
  1184  009C  00F9               	movwf	_vol1
  1185  009D                     i1l857:
  1186                           
  1187                           ;Esclavo.c: 86:     PIR1bits.ADIF = 0;
  1188  009D  130C               	bcf	12,6	;volatile
  1189  009E                     i1l859:
  1190                           
  1191                           ;Esclavo.c: 88:     if(SSPIF == 1){
  1192  009E  1D8C               	btfss	12,3	;volatile
  1193  009F  28A1               	goto	u6_21
  1194  00A0  28A2               	goto	u6_20
  1195  00A1                     u6_21:
  1196  00A1  28C1               	goto	i1l58
  1197  00A2                     u6_20:
  1198  00A2                     i1l861:
  1199                           
  1200                           ;Esclavo.c: 89:         temp1 = spiRead();
  1201  00A2  120A  118A  212D  120A  118A  	fcall	_spiRead
  1202  00A7  00F1               	movwf	??_isr
  1203  00A8  0871               	movf	??_isr,w
  1204  00A9  00F7               	movwf	_temp1
  1205                           
  1206                           ;Esclavo.c: 90:         spiWrite(vol1);
  1207  00AA  0879               	movf	_vol1,w
  1208  00AB  120A  118A  213D  120A  118A  	fcall	_spiWrite
  1209                           
  1210                           ;Esclavo.c: 91:         temp2 = spiRead();
  1211  00B0  120A  118A  212D  120A  118A  	fcall	_spiRead
  1212  00B5  00F1               	movwf	??_isr
  1213  00B6  0871               	movf	??_isr,w
  1214  00B7  00F6               	movwf	_temp2
  1215                           
  1216                           ;Esclavo.c: 92:         spiWrite(vol2);
  1217  00B8  0878               	movf	_vol2,w
  1218  00B9  120A  118A  213D  120A  118A  	fcall	_spiWrite
  1219  00BE                     i1l863:
  1220                           
  1221                           ;Esclavo.c: 93:         SSPIF = 0;
  1222  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1223  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1224  00C0  118C               	bcf	12,3	;volatile
  1225  00C1                     i1l58:
  1226  00C1  0873               	movf	??_isr+2,w
  1227  00C2  008A               	movwf	10
  1228  00C3  0E72               	swapf	??_isr+1,w
  1229  00C4  0083               	movwf	3
  1230  00C5  0EFE               	swapf	btemp,f
  1231  00C6  0E7E               	swapf	btemp,w
  1232  00C7  0009               	retfie
  1233  00C8                     __end_of_isr:
  1234                           
  1235                           	psect	intentry
  1236  0004                     __pintentry:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1239                           
  1240  0004                     interrupt_function:
  1241  007E                     saved_w	set	btemp
  1242  0004  00FE               	movwf	btemp
  1243  0005  0E03               	swapf	3,w
  1244  0006  00F2               	movwf	??_isr+1
  1245  0007  080A               	movf	10,w
  1246  0008  00F3               	movwf	??_isr+2
  1247  0009  120A  118A  2876   	ljmp	_isr
  1248                           
  1249                           	psect	text5
  1250  013D                     __ptext5:	
  1251 ;; *************** function _spiWrite *****************
  1252 ;; Defined at:
  1253 ;;		line 34 in file "../SPI/SPI-Master.X/SPI.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  dat             1    wreg     unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  dat             1    0[COMMON] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         1       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         1       0       0       0       0
  1271 ;;Total ram usage:        1 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_isr
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _spiWrite
  1282  013D                     _spiWrite:
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _spiWrite: [wreg]
  1286                           ;spiWrite@dat stored from wreg
  1287  013D  00F0               	movwf	spiWrite@dat
  1288  013E                     i1l803:
  1289                           
  1290                           ;../SPI/SPI-Master.X/SPI.c: 34: void spiWrite(char dat);../SPI/SPI-Master.X/SPI.c: 35: {
      +                          ;../SPI/SPI-Master.X/SPI.c: 36:     SSPBUF = dat;
  1291  013E  0870               	movf	spiWrite@dat,w
  1292  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0141  0093               	movwf	19	;volatile
  1295  0142                     i1l111:
  1296  0142  0008               	return
  1297  0143                     __end_of_spiWrite:
  1298                           
  1299                           	psect	text6
  1300  012D                     __ptext6:	
  1301 ;; *************** function _spiRead *****************
  1302 ;; Defined at:
  1303 ;;		line 47 in file "../SPI/SPI-Master.X/SPI.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      unsigned char 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0
  1320 ;;      Totals:         0       0       0       0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    1
  1324 ;; This function calls:
  1325 ;;		_spiReceiveWait
  1326 ;; This function is called by:
  1327 ;;		_isr
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _spiRead
  1333  012D                     _spiRead:
  1334  012D                     i1l797:	
  1335                           ;incstack = 0
  1336                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1337                           
  1338                           
  1339                           ;../SPI/SPI-Master.X/SPI.c: 49:     spiReceiveWait();
  1340  012D  120A  118A  2136  120A  118A  	fcall	_spiReceiveWait
  1341  0132                     i1l799:
  1342                           
  1343                           ;../SPI/SPI-Master.X/SPI.c: 50:     return(SSPBUF);
  1344  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0134  0813               	movf	19,w	;volatile
  1347  0135                     i1l119:
  1348  0135  0008               	return
  1349  0136                     __end_of_spiRead:
  1350                           
  1351                           	psect	text7
  1352  0136                     __ptext7:	
  1353 ;; *************** function _spiReceiveWait *****************
  1354 ;; Defined at:
  1355 ;;		line 29 in file "../SPI/SPI-Master.X/SPI.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		None
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_spiRead
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _spiReceiveWait
  1384  0136                     _spiReceiveWait:
  1385  0136                     i1l795:	
  1386                           ;incstack = 0
  1387                           ; Regs used in _spiReceiveWait: []
  1388                           
  1389  0136                     i1l105:	
  1390                           ;../SPI/SPI-Master.X/SPI.c: 31:     while ( !SSPSTATbits.BF );
  1391                           
  1392  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1393  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1394  0138  1C14               	btfss	20,0	;volatile
  1395  0139  293B               	goto	u2_21
  1396  013A  293C               	goto	u2_20
  1397  013B                     u2_21:
  1398  013B  2936               	goto	i1l105
  1399  013C                     u2_20:
  1400  013C                     i1l108:
  1401  013C  0008               	return
  1402  013D                     __end_of_spiReceiveWait:
  1403  007E                     btemp	set	126	;btemp
  1404  007E                     wtemp0	set	126
  1405                           
  1406                           	psect	config
  1407                           
  1408                           ;Config register CONFIG1 @ 0x2007
  1409                           ;	Oscillator Selection bits
  1410                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1411                           ;	Watchdog Timer Enable bit
  1412                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1413                           ;	Power-up Timer Enable bit
  1414                           ;	PWRTE = OFF, PWRT disabled
  1415                           ;	RE3/MCLR pin function select bit
  1416                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1417                           ;	Code Protection bit
  1418                           ;	CP = OFF, Program memory code protection is disabled
  1419                           ;	Data Code Protection bit
  1420                           ;	CPD = OFF, Data memory code protection is disabled
  1421                           ;	Brown Out Reset Selection bits
  1422                           ;	BOREN = OFF, BOR disabled
  1423                           ;	Internal External Switchover bit
  1424                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1425                           ;	Fail-Safe Clock Monitor Enabled bit
  1426                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1427                           ;	Low Voltage Programming Enable bit
  1428                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1429                           ;	In-Circuit Debugger Mode bit
  1430                           ;	DEBUG = 0x1, unprogrammed default
  1431  2007                     	org	8199
  1432  2007  20D4               	dw	8404
  1433                           
  1434                           ;Config register CONFIG2 @ 0x2008
  1435                           ;	Brown-out Reset Selection bit
  1436                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1437                           ;	Flash Program Memory Self Write Enable bits
  1438                           ;	WRT = OFF, Write protection off
  1439  2008                     	org	8200
  1440  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_config_ADC

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     478
                                              3 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     478
                         _config_ADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _config_ADC
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 03 19:15:55 2021

            _SSPSTATbits 0094                       l61 00F3                       l85 0075  
                    l101 010C                      l102 0111                      l981 00FC  
                    l991 001B                      l983 0102                      l993 001D  
                    l985 0104                      l995 0021                      l987 010B  
                    l979 00F5                      l997 0024                      l989 001A  
                    l999 0025                      u100 00FC                      u101 00FB  
                    u110 011F                      u111 011E                      u127 0123  
                    u137 001F                      u147 0030                      u157 0041  
                    u167 0052                      _isr 0076                     l1001 0026  
                   l1011 0032                     l1003 0029                     l1021 003B  
                   l1013 0035                     l1005 002A                     l1101 00ED  
                   l1031 0047                     l1023 003D                     l1015 0036  
                   l1007 002C                     l1111 0126                     l1103 0112  
                   l1041 0050                     l1033 0048                     l1025 003F  
                   l1017 0037                     l1009 002E                     l1105 0117  
                   l1051 005C                     l1043 0054                     l1035 004B  
                   l1027 0043                     l1019 003A                     l1107 011B  
                   l1053 005D                     l1045 0057                     l1037 004C  
                   l1029 0046                     l1109 011F                     l1143 0067  
                   l1047 0058                     l1039 004E                     l1071 00D0  
                   l1049 0059                     l1057 005F                     l1081 00D5  
                   l1073 00D1                     l1065 00C8                     l1091 00DC  
                   l1083 00D8                     l1075 00D2                     l1067 00CC  
                   l1093 00DD                     l1085 00D9                     l1077 00D3  
                   l1069 00CF                     l1095 00DE                     l1087 00DA  
                   l1079 00D4                     l1097 00DF                     l1089 00DB  
                   l1099 00E2                     ?_isr 0070                     i1l58 00C1  
                   u2_20 013C                     u2_21 013B                     u3_20 007C  
                   u3_21 007B                     u4_20 0085                     u4_21 0084  
                   u5_20 0097                     u5_21 0096                     u6_20 00A2  
                   u6_21 00A1                     _main 0112                     _vol1 0079  
                   _vol2 0078                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070           config_ADC@frec 0020  
                  _ANSEL 0188                    i1l111 0142                    i1l105 0136  
                  i1l108 013C                    i1l119 0135                    i1l803 013E  
                  i1l851 008E                    i1l843 0076                    i1l861 00A2  
                  i1l853 0097                    i1l845 007C                    i1l863 00BE  
                  i1l855 0099                    i1l847 0085                    i1l849 0089  
                  i1l857 009D                    i1l795 0136                    i1l859 009E  
                  i1l797 012D                    i1l799 0132                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISB 0086                    _SSPIF 0063  
                  _temp1 0077                    _temp2 0076                    _setup 00C8  
                  pclath 000A          __end_of_spiInit 0112          __end_of_spiRead 0136  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 012D                   ??_main 0023                   _ADRESH 001E  
                 ?_setup 0070                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 0143                ??_spiInit 0074                ??_spiRead 0070  
__end_of__initialization 0013           __pcstackCOMMON 0070            __end_of_setup 00F4  
                ??_setup 0076               __pmaintext 0112               __pintentry 0004  
__size_of_spiReceiveWait 0007               _config_ADC 0017                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 00C8                  __ptext2 00F4  
                __ptext3 0017                  __ptext4 0076                  __ptext5 013D  
                __ptext6 012D                  __ptext7 0136             __size_of_isr 0052  
                _spiInit 00F4                  _spiRead 012D     end_of_initialization 0013  
             ??_spiWrite 0070              ?_config_ADC 0070                _TRISAbits 0085  
              _TRISCbits 0087              spiWrite@dat 0070           _spiReceiveWait 0136  
    start_initialization 000F              __end_of_isr 00C8      __size_of_config_ADC 005F  
 __end_of_spiReceiveWait 013D              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0020                 ?_spiRead 0070           __size_of_setup 002C  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F             ??_config_ADC 0074       __end_of_config_ADC 0076  
       __size_of_spiInit 001E         __size_of_spiRead 0009            __size_of_main 001B  
               _spiWrite 013D             spiInit@sType 0074        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
